import numpy as np

def getrates(veclen, T, Y, P, wdot):
    C = np.zeros((veclen, 50))
    EG = np.zeros((veclen, 50))
    kf = np.zeros(veclen)
    kb = np.zeros(veclen)
    rr = np.zeros(veclen)
    ctot = np.zeros(veclen)
    k0 = np.zeros(veclen)
    kinf = np.zeros(veclen)
    Pr = np.zeros(veclen)
    Fcent = np.zeros(veclen)
    C_troe = np.zeros(veclen)
    N_troe = np.zeros(veclen)
    F1 = np.zeros(veclen)
    F = np.zeros(veclen)
    logPr = np.zeros(veclen)
    logFcent = np.zeros(veclen)
    wdot[:,:] = 0.0
    Rc = 1.9872155832
    R0 = 83145100.0
    Patm = 1013250.0

    pfac = Patm/(R0*T)
    # Y to C conversion
    C[:,0] = Y[:,0] / (2.016000000000000e+00)
    C[:,1] = Y[:,1] / (1.008000000000000e+00)
    C[:,2] = Y[:,2] / (3.199800000000000e+01)
    C[:,3] = Y[:,3] / (1.599900000000000e+01)
    C[:,4] = Y[:,4] / (1.801500000000000e+01)
    C[:,5] = Y[:,5] / (1.700700000000000e+01)
    C[:,6] = Y[:,6] / (3.401400000000000e+01)
    C[:,7] = Y[:,7] / (3.300600000000000e+01)
    C[:,8] = Y[:,8] / (2.801000000000000e+01)
    C[:,9] = Y[:,9] / (4.400900000000000e+01)
    C[:,10] = Y[:,10] / (4.804100000000000e+01)
    C[:,11] = Y[:,11] / (4.703300000000000e+01)
    C[:,12] = Y[:,12] / (1.604300000000000e+01)
    C[:,13] = Y[:,13] / (1.503500000000000e+01)
    C[:,14] = Y[:,14] / (1.402700000000000e+01)
    C[:,15] = Y[:,15] / (1.402700000000000e+01)
    C[:,16] = Y[:,16] / (1.201100000000000e+01)
    C[:,17] = Y[:,17] / (1.301900000000000e+01)
    C[:,18] = Y[:,18] / (3.204200000000000e+01)
    C[:,19] = Y[:,19] / (3.103400000000000e+01)
    C[:,20] = Y[:,20] / (3.103400000000000e+01)
    C[:,21] = Y[:,21] / (3.002600000000000e+01)
    C[:,22] = Y[:,22] / (2.901800000000000e+01)
    C[:,23] = Y[:,23] / (3.002600000000000e+01)
    C[:,24] = Y[:,24] / (3.007000000000000e+01)
    C[:,25] = Y[:,25] / (2.906200000000000e+01)
    C[:,26] = Y[:,26] / (2.805400000000000e+01)
    C[:,27] = Y[:,27] / (2.704600000000000e+01)
    C[:,28] = Y[:,28] / (2.603800000000000e+01)
    C[:,29] = Y[:,29] / (4.203700000000000e+01)
    C[:,30] = Y[:,30] / (4.102900000000000e+01)
    C[:,31] = Y[:,31] / (2.702600000000000e+01)
    C[:,32] = Y[:,32] / (1.703100000000000e+01)
    C[:,33] = Y[:,33] / (1.602300000000000e+01)
    C[:,34] = Y[:,34] / (1.501500000000000e+01)
    C[:,35] = Y[:,35] / (1.400700000000000e+01)
    C[:,36] = Y[:,36] / (3.101400000000000e+01)
    C[:,37] = Y[:,37] / (4.600500000000000e+01)
    C[:,38] = Y[:,38] / (4.401300000000000e+01)
    C[:,39] = Y[:,39] / (2.702600000000000e+01)
    C[:,40] = Y[:,40] / (2.601800000000000e+01)
    C[:,41] = Y[:,41] / (4.302500000000000e+01)
    C[:,42] = Y[:,42] / (4.302500000000000e+01)
    C[:,43] = Y[:,43] / (4.201700000000000e+01)
    C[:,44] = Y[:,44] / (4.002500000000000e+01)
    C[:,45] = Y[:,45] / (4.103300000000000e+01)
    C[:,46] = Y[:,46] / (2.904200000000000e+01)
    C[:,47] = Y[:,47] / (2.803400000000000e+01)
    C[:,48] = Y[:,48] / (3.000600000000000e+01)
    C[:,49] = Y[:,49] / (2.801400000000000e+01)
    ctot = 0.0
    for i in range(50):
        ctot = ctot + C[:,i]
    for i in range(50):
        C[:,i] = C[:,i]*P/(R0*ctot*T)
    ctot = 0.0
    for i in range(50):
        ctot = ctot + C[:,i]

    # Exponential G calculations
    # H2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.661320882000000e+00\
            + 2.344331120000000e+00 * np.log(T[i])\
            + 3.990260375000000e-03 * T[i]\
            - 3.246358500000000e-06 * T[i]**2\
            + 1.679767450000000e-09 * T[i]**3\
            - 3.688058805000000e-13 * T[i]**4\
            + 9.179351730000000e+02 / T[i]
        else:
            smh = \
            -3.957194400000000e+00\
            + 2.932865750000000e+00 * np.log(T[i])\
            + 4.133040130000000e-04 * T[i]\
            - 2.440039400000000e-08 * T[i]**2\
            + 1.284170116666667e-12 * T[i]**3\
            - 3.444024000000000e-17 * T[i]**4\
            + 8.130655810000000e+02 / T[i]
        EG[i,0] = np.exp(smh)

    # H
    for i in range(veclen):
        if T[i] < 6000.0:
            smh = \
            -2.946682850000000e+00\
            + 2.500000000000000e+00 * np.log(T[i])\
            + 0.000000000000000e+00 * T[i]\
            + 0.000000000000000e+00 * T[i]**2\
            + 0.000000000000000e+00 * T[i]**3\
            + 0.000000000000000e+00 * T[i]**4\
            - 2.547366000000000e+04 / T[i]
        else:
            smh = \
            -2.946682850000000e+00\
            + 2.500000000000000e+00 * np.log(T[i])\
            + 0.000000000000000e+00 * T[i]\
            + 0.000000000000000e+00 * T[i]**2\
            + 0.000000000000000e+00 * T[i]**3\
            + 0.000000000000000e+00 * T[i]**4\
            - 2.547366000000000e+04 / T[i]
        EG[i,1] = np.exp(smh)

    # O2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.247806300000001e-01\
            + 3.782456360000000e+00 * np.log(T[i])\
            - 1.498367080000000e-03 * T[i]\
            + 1.641217001666667e-06 * T[i]**2\
            - 8.067745908333334e-10 * T[i]**3\
            + 1.621864185000000e-13 * T[i]**4\
            + 1.063943560000000e+03 / T[i]
        else:
            smh = \
            -2.455978599999997e-01\
            + 3.660960650000000e+00 * np.log(T[i])\
            + 3.281829055000000e-04 * T[i]\
            - 2.352493783333333e-08 * T[i]**2\
            + 1.714982791666666e-12 * T[i]**3\
            - 6.495671800000001e-17 * T[i]**4\
            + 1.215977180000000e+03 / T[i]
        EG[i,2] = np.exp(smh)

    # O
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.116333640000000e+00\
            + 3.168267100000000e+00 * np.log(T[i])\
            - 1.639659420000000e-03 * T[i]\
            + 1.107177326666667e-06 * T[i]**2\
            - 5.106721866666666e-10 * T[i]**3\
            + 1.056329855000000e-13 * T[i]**4\
            - 2.912225920000000e+04 / T[i]
        else:
            smh = \
            2.378657600000000e+00\
            + 2.543636970000000e+00 * np.log(T[i])\
            - 1.365812430000000e-05 * T[i]\
            - 6.983825333333333e-10 * T[i]**2\
            + 4.129015375000000e-13 * T[i]**3\
            - 2.397768470000000e-17 * T[i]**4\
            - 2.922601200000000e+04 / T[i]
        EG[i,3] = np.exp(smh)

    # H2O
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -5.047644210000000e+00\
            + 4.198635200000000e+00 * np.log(T[i])\
            - 1.018200850000000e-03 * T[i]\
            + 1.086723600000000e-06 * T[i]**2\
            - 4.573272416666666e-10 * T[i]**3\
            + 8.859840000000001e-14 * T[i]**4\
            + 3.029372600000000e+04 / T[i]
        else:
            smh = \
            4.205511100000001e+00\
            + 2.677038900000000e+00 * np.log(T[i])\
            + 1.486590800000000e-03 * T[i]\
            - 1.289614816666667e-07 * T[i]**2\
            + 7.869459500000001e-12 * T[i]**3\
            - 2.134499550000000e-16 * T[i]**4\
            + 2.988589400000000e+04 / T[i]
        EG[i,4] = np.exp(smh)

    # OH
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -4.095982717000000e+00\
            + 3.991984240000000e+00 * np.log(T[i])\
            - 1.200533275000000e-03 * T[i]\
            + 7.694400550000000e-07 * T[i]**2\
            - 3.232635883333333e-10 * T[i]**3\
            + 6.815975100000000e-14 * T[i]**4\
            - 3.368898360000000e+03 / T[i]
        else:
            smh = \
            3.006416189999999e+00\
            + 2.838530330000000e+00 * np.log(T[i])\
            + 5.537064450000000e-04 * T[i]\
            - 4.900003483333333e-08 * T[i]**2\
            + 3.505822741666666e-12 * T[i]**3\
            - 1.211449450000000e-16 * T[i]**4\
            - 3.697808080000000e+03 / T[i]
        EG[i,5] = np.exp(smh)

    # H2O2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.041418300000000e+00\
            + 4.315151490000000e+00 * np.log(T[i])\
            - 4.236953110000000e-04 * T[i]\
            + 2.940072050000000e-06 * T[i]**2\
            - 1.889691200000000e-09 * T[i]**3\
            + 4.544750790000000e-13 * T[i]**4\
            + 1.770674370000000e+04 / T[i]
        else:
            smh = \
            -3.914802356000000e+00\
            + 4.579773050000000e+00 * np.log(T[i])\
            + 2.026630015000000e-03 * T[i]\
            - 2.164078833333333e-07 * T[i]**2\
            + 1.651761666666667e-11 * T[i]**3\
            - 5.698439600000000e-16 * T[i]**4\
            + 1.800717750000000e+04 / T[i]
        EG[i,6] = np.exp(smh)

    # HO2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -5.851358700000002e-01\
            + 4.301798070000000e+00 * np.log(T[i])\
            - 2.374560485000000e-03 * T[i]\
            + 3.526381750000000e-06 * T[i]**2\
            - 2.023032616666667e-09 * T[i]**3\
            + 4.646126125000001e-13 * T[i]**4\
            - 2.640184850000000e+02 / T[i]
        else:
            smh = \
            -1.214610690000000e+00\
            + 4.172287410000000e+00 * np.log(T[i])\
            + 9.405881350000000e-04 * T[i]\
            - 5.771288100000000e-08 * T[i]**2\
            + 1.622146241666667e-12 * T[i]**3\
            + 8.812845250000000e-18 * T[i]**4\
            - 3.102068390000000e+01 / T[i]
        EG[i,7] = np.exp(smh)

    # CO
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -7.112420000000030e-02\
            + 3.579533500000000e+00 * np.log(T[i])\
            - 3.051768450000000e-04 * T[i]\
            + 1.694690500000000e-07 * T[i]**2\
            + 7.558382166666667e-11 * T[i]**3\
            - 4.522122450000000e-14 * T[i]**4\
            + 1.434408600000000e+04 / T[i]
        else:
            smh = \
            2.968611800000000e+00\
            + 3.048485900000000e+00 * np.log(T[i])\
            + 6.758640500000000e-04 * T[i]\
            - 8.096567500000000e-08 * T[i]**2\
            + 6.571137000000000e-12 * T[i]**3\
            - 2.349037300000000e-16 * T[i]**4\
            + 1.426611700000000e+04 / T[i]
        EG[i,8] = np.exp(smh)

    # CO2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            7.544090500000000e+00\
            + 2.356813000000000e+00 * np.log(T[i])\
            + 4.492064950000000e-03 * T[i]\
            - 1.187010533333333e-06 * T[i]**2\
            + 2.047750666666667e-10 * T[i]**3\
            - 7.144273999999999e-15 * T[i]**4\
            + 4.837197100000000e+04 / T[i]
        else:
            smh = \
            -6.571406600000000e+00\
            + 4.636511100000000e+00 * np.log(T[i])\
            + 1.370728450000000e-03 * T[i]\
            - 1.659829316666667e-07 * T[i]**2\
            + 1.336555500000000e-11 * T[i]**3\
            - 4.580992850000000e-16 * T[i]**4\
            + 4.902490400000000e+04 / T[i]
        EG[i,9] = np.exp(smh)

    # CH3O2H
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            8.468789730000001e+00\
            + 2.905408970000000e+00 * np.log(T[i])\
            + 8.749736750000001e-03 * T[i]\
            + 8.804060500000001e-07 * T[i]**2\
            - 2.106893958333333e-09 * T[i]**3\
            + 6.718410600000000e-13 * T[i]**4\
            + 1.688946320000000e+04 / T[i]
        else:
            smh = \
            -2.216464688000000e+01\
            + 7.765380580000000e+00 * np.log(T[i])\
            + 4.307498560000000e-03 * T[i]\
            - 4.966782250000000e-07 * T[i]**2\
            + 3.905317258333333e-11 * T[i]**3\
            - 1.376696275000000e-15 * T[i]**4\
            + 1.829799840000000e+04 / T[i]
        EG[i,10] = np.exp(smh)

    # CH3O2
    for i in range(veclen):
        if T[i] < 1374.0:
            smh = \
            1.494602945000000e+01\
            + 1.973392050000000e+00 * np.log(T[i])\
            + 7.677117000000000e-03 * T[i]\
            - 1.062191485000000e-06 * T[i]**2\
            + 2.666088041666666e-11 * T[i]**3\
            + 1.410969575000000e-14 * T[i]**4\
            - 2.542788350000000e+02 / T[i]
        else:
            smh = \
            -1.467447561000000e+01\
            + 6.479704870000000e+00 * np.log(T[i])\
            + 3.722005400000000e-03 * T[i]\
            - 4.205809250000000e-07 * T[i]**2\
            + 3.246477466666667e-11 * T[i]**3\
            - 1.125911995000000e-15 * T[i]**4\
            + 1.562854410000000e+03 / T[i]
        EG[i,11] = np.exp(smh)

    # CH4
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -9.787603100000000e+00\
            + 5.149114680000000e+00 * np.log(T[i])\
            - 6.831100450000000e-03 * T[i]\
            + 8.190898683333333e-06 * T[i]**2\
            - 4.035389725000000e-09 * T[i]**3\
            + 8.330172050000000e-13 * T[i]**4\
            + 1.024659830000000e+04 / T[i]
        else:
            smh = \
            8.251800570000000e+00\
            + 1.653262260000000e+00 * np.log(T[i])\
            + 5.013154950000000e-03 * T[i]\
            - 5.527687300000000e-07 * T[i]**2\
            + 4.470692816666667e-11 * T[i]**3\
            - 1.573483790000000e-15 * T[i]**4\
            + 1.000959360000000e+04 / T[i]
        EG[i,12] = np.exp(smh)

    # CH3
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.983644300000000e+00\
            + 3.657179700000000e+00 * np.log(T[i])\
            + 1.063298950000000e-03 * T[i]\
            + 9.097313833333333e-07 * T[i]**2\
            - 5.515083583333334e-10 * T[i]**3\
            + 1.232853700000000e-13 * T[i]**4\
            - 1.642271600000000e+04 / T[i]
        else:
            smh = \
            1.744359300000000e+00\
            + 2.978120600000000e+00 * np.log(T[i])\
            + 2.898926000000000e-03 * T[i]\
            - 3.292633333333333e-07 * T[i]**2\
            + 2.560815833333334e-11 * T[i]**3\
            - 8.958708000000000e-16 * T[i]**4\
            - 1.650951300000000e+04 / T[i]
        EG[i,13] = np.exp(smh)

    # CH2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.964599010000000e+00\
            + 3.717578460000000e+00 * np.log(T[i])\
            + 6.369563000000000e-04 * T[i]\
            + 3.622454183333334e-07 * T[i]**2\
            - 2.907154166666667e-10 * T[i]**3\
            + 8.260443300000000e-14 * T[i]**4\
            - 4.587238660000000e+04 / T[i]
        else:
            smh = \
            1.577098250000000e+00\
            + 3.146318860000000e+00 * np.log(T[i])\
            + 1.518356295000000e-03 * T[i]\
            - 1.660790731666667e-07 * T[i]**2\
            + 1.254029833333333e-11 * T[i]**3\
            - 4.286677575000000e-16 * T[i]**4\
            - 4.604126050000000e+04 / T[i]
        EG[i,14] = np.exp(smh)

    # CH2(S)
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -4.940047560000000e+00\
            + 4.193313250000000e+00 * np.log(T[i])\
            - 1.165525920000000e-03 * T[i]\
            + 1.359460751666667e-06 * T[i]**2\
            - 5.524883175000000e-10 * T[i]**3\
            + 9.661659949999999e-14 * T[i]**4\
            - 5.036622460000000e+04 / T[i]
        else:
            smh = \
            9.252893500000003e-01\
            + 3.135016860000000e+00 * np.log(T[i])\
            + 1.447969630000000e-03 * T[i]\
            - 1.361113483333333e-07 * T[i]**2\
            + 9.464391416666667e-12 * T[i]**3\
            - 3.181314175000000e-16 * T[i]**4\
            - 5.050405040000000e+04 / T[i]
        EG[i,15] = np.exp(smh)

    # C
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            1.977069000000000e+00\
            + 2.554239500000000e+00 * np.log(T[i])\
            - 1.607688600000000e-04 * T[i]\
            + 1.222987050000000e-07 * T[i]**2\
            - 6.101957250000001e-11 * T[i]**3\
            + 1.332607200000000e-14 * T[i]**4\
            - 8.544268100000000e+04 / T[i]
        else:
            smh = \
            1.586803800000000e+00\
            + 2.605583000000000e+00 * np.log(T[i])\
            - 9.796717000000000e-05 * T[i]\
            + 1.778953666666667e-08 * T[i]**2\
            - 1.368661666666667e-12 * T[i]**3\
            + 4.093529000000000e-17 * T[i]**4\
            - 8.541174200000000e+04 / T[i]
        EG[i,16] = np.exp(smh)

    # CH
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.405474200000000e+00\
            + 3.489758300000000e+00 * np.log(T[i])\
            + 1.621608000000000e-04 * T[i]\
            - 2.816625166666667e-07 * T[i]**2\
            + 2.635701666666667e-10 * T[i]**3\
            - 7.030901500000000e-14 * T[i]**4\
            - 7.061264599999999e+04 / T[i]
        else:
            smh = \
            4.884245999999999e+00\
            + 2.520936900000000e+00 * np.log(T[i])\
            + 8.826819500000000e-04 * T[i]\
            - 7.691276666666666e-08 * T[i]**2\
            + 4.940806250000000e-12 * T[i]**3\
            - 1.673725050000000e-16 * T[i]**4\
            - 7.094676900000000e+04 / T[i]
        EG[i,17] = np.exp(smh)

    # CH3OH
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -6.555841018000001e+00\
            + 5.658510510000000e+00 * np.log(T[i])\
            - 8.149170950000000e-03 * T[i]\
            + 1.153230260000000e-05 * T[i]**2\
            - 6.319774383333334e-09 * T[i]**3\
            + 1.402137750000000e-12 * T[i]**4\
            + 2.561197360000000e+04 / T[i]
        else:
            smh = \
            1.640318980000000e+00\
            + 3.527267950000000e+00 * np.log(T[i])\
            + 5.158939150000000e-03 * T[i]\
            - 6.048215733333333e-07 * T[i]**2\
            + 4.812066800000000e-11 * T[i]**3\
            - 1.710913160000000e-15 * T[i]**4\
            + 2.600288340000000e+04 / T[i]
        EG[i,18] = np.exp(smh)

    # CH3O
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            2.860603620000000e+00\
            + 3.711805020000000e+00 * np.log(T[i])\
            - 1.402316530000000e-03 * T[i]\
            + 6.275849516666667e-06 * T[i]**2\
            - 3.942267408333333e-09 * T[i]**3\
            + 9.329421000000001e-13 * T[i]**4\
            - 1.295697600000000e+03 / T[i]
        else:
            smh = \
            -6.724592660000000e+00\
            + 4.757792380000000e+00 * np.log(T[i])\
            + 3.720712370000000e-03 * T[i]\
            - 4.495086266666666e-07 * T[i]**2\
            + 3.650754200000000e-11 * T[i]**3\
            - 1.317685490000000e-15 * T[i]**4\
            - 3.781119400000000e+02 / T[i]
        EG[i,19] = np.exp(smh)

    # CH2OH
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.169208670000000e+00\
            + 4.478343670000000e+00 * np.log(T[i])\
            - 6.753515500000000e-04 * T[i]\
            + 4.641416333333334e-06 * T[i]**2\
            - 3.040575500000000e-09 * T[i]**3\
            + 7.395372499999999e-13 * T[i]**4\
            + 3.500728900000000e+03 / T[i]
        else:
            smh = \
            -6.940058629999999e+00\
            + 5.093143700000000e+00 * np.log(T[i])\
            + 2.973806300000000e-03 * T[i]\
            - 3.441624333333333e-07 * T[i]**2\
            + 2.691734775000000e-11 * T[i]**3\
            - 9.406295100000001e-16 * T[i]**4\
            + 4.034096400000000e+03 / T[i]
        EG[i,20] = np.exp(smh)

    # CH2O
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -4.190925062000000e+00\
            + 4.793723120000000e+00 * np.log(T[i])\
            - 4.954166610000000e-03 * T[i]\
            + 6.220333166666666e-06 * T[i]**2\
            - 3.160710308333333e-09 * T[i]**3\
            + 6.588632050000001e-13 * T[i]**4\
            + 1.437919530000000e+04 / T[i]
        else:
            smh = \
            2.872552330000000e+00\
            + 3.169526650000000e+00 * np.log(T[i])\
            + 3.096602800000000e-03 * T[i]\
            - 3.750939433333333e-07 * T[i]**2\
            + 3.049797166666667e-11 * T[i]**3\
            - 1.100747290000000e-15 * T[i]**4\
            + 1.454868310000000e+04 / T[i]
        EG[i,21] = np.exp(smh)

    # HCO
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -9.291974100000004e-01\
            + 4.237546100000000e+00 * np.log(T[i])\
            - 1.660376285000000e-03 * T[i]\
            + 2.333837733333333e-06 * T[i]**2\
            - 1.118666625000000e-09 * T[i]**3\
            + 2.187081040000000e-13 * T[i]**4\
            - 3.872411850000000e+03 / T[i]
        else:
            smh = \
            -3.392448600000000e-01\
            + 3.920015420000000e+00 * np.log(T[i])\
            + 1.261396620000000e-03 * T[i]\
            - 1.118340273333333e-07 * T[i]**2\
            + 8.801329000000001e-12 * T[i]**3\
            - 3.718991305000000e-16 * T[i]**4\
            - 3.653429280000000e+03 / T[i]
        EG[i,22] = np.exp(smh)

    # HCOH
    for i in range(veclen):
        if T[i] < 1398.0:
            smh = \
            3.767034991000000e+01\
            - 2.821574210000000e+00 * np.log(T[i])\
            + 1.786658510000000e-02 * T[i]\
            - 6.347693000000000e-06 * T[i]**2\
            + 1.551716258333333e-09 * T[i]**3\
            - 1.729789190000000e-13 * T[i]**4\
            - 1.129566720000000e+04 / T[i]
        else:
            smh = \
            -3.653091412000000e+01\
            + 9.187492720000000e+00 * np.log(T[i])\
            + 7.600557600000000e-04 * T[i]\
            - 1.046005860000000e-07 * T[i]**2\
            + 9.143999083333333e-12 * T[i]**3\
            - 3.448275640000000e-16 * T[i]**4\
            - 7.813645930000000e+03 / T[i]
        EG[i,23] = np.exp(smh)

    # C2H6
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.624635780000000e+00\
            + 4.291425720000000e+00 * np.log(T[i])\
            - 2.750774505000000e-03 * T[i]\
            + 9.990640966666668e-06 * T[i]**2\
            - 5.903887241666666e-09 * T[i]**3\
            + 1.343429180000000e-12 * T[i]**4\
            + 1.152220560000000e+04 / T[i]
        else:
            smh = \
            -5.015362423000000e+00\
            + 4.046664110000000e+00 * np.log(T[i])\
            + 7.676940100000000e-03 * T[i]\
            - 9.117324750000000e-07 * T[i]**2\
            + 7.315221200000000e-11 * T[i]**3\
            - 2.615837655000000e-15 * T[i]**4\
            + 1.244734990000000e+04 / T[i]
        EG[i,24] = np.exp(smh)

    # C2H5
    for i in range(veclen):
        if T[i] < 1387.0:
            smh = \
            1.585161943000000e+01\
            + 1.327302170000000e+00 * np.log(T[i])\
            + 8.832837650000000e-03 * T[i]\
            - 1.024877596666667e-06 * T[i]**2\
            - 2.509528883333333e-11 * T[i]**3\
            + 2.193088875000000e-14 * T[i]**4\
            - 1.342840280000000e+04 / T[i]
        else:
            smh = \
            -1.438436161000000e+01\
            + 5.887843900000000e+00 * np.log(T[i])\
            + 5.153839650000000e-03 * T[i]\
            - 5.780739933333333e-07 * T[i]**2\
            + 4.437493808333333e-11 * T[i]**3\
            - 1.532563255000000e-15 * T[i]**4\
            - 1.150654990000000e+04 / T[i]
        EG[i,25] = np.exp(smh)

    # C2H4
    for i in range(veclen):
        if T[i] < 1392.0:
            smh = \
            1.810559747700000e+01\
            + 4.811182230000000e-01 * np.log(T[i])\
            + 9.188903000000000e-03 * T[i]\
            - 1.666055941666667e-06 * T[i]**2\
            + 2.276758658333333e-10 * T[i]**3\
            - 1.509186445000000e-14 * T[i]**4\
            - 5.443866480000000e+03 / T[i]
        else:
            smh = \
            -1.171562703000000e+01\
            + 5.070612890000000e+00 * np.log(T[i])\
            + 4.555703840000000e-03 * T[i]\
            - 5.175111533333333e-07 * T[i]**2\
            + 4.006115425000000e-11 * T[i]**3\
            - 1.391606980000000e-15 * T[i]**4\
            - 3.663912170000000e+03 / T[i]
        EG[i,26] = np.exp(smh)

    # C2H3
    for i in range(veclen):
        if T[i] < 1400.0:
            smh = \
            1.571095336000000e+01\
            + 1.255450940000000e+00 * np.log(T[i])\
            + 7.874079850000000e-03 * T[i]\
            - 1.870305466666667e-06 * T[i]**2\
            + 3.757630683333334e-10 * T[i]**3\
            - 3.874307885000000e-14 * T[i]**4\
            - 3.474355740000000e+04 / T[i]
        else:
            smh = \
            -8.011265120000001e+00\
            + 4.996754150000000e+00 * np.log(T[i])\
            + 3.279191355000000e-03 * T[i]\
            - 3.682031816666667e-07 * T[i]**2\
            + 2.827502266666667e-11 * T[i]**3\
            - 9.765846300000001e-16 * T[i]**4\
            - 3.346043820000000e+04 / T[i]
        EG[i,27] = np.exp(smh)

    # C2H2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            1.313099641800000e+01\
            + 8.086796820000000e-01 * np.log(T[i])\
            + 1.168078810000000e-02 * T[i]\
            - 5.919537233333333e-06 * T[i]**2\
            + 2.334607983333333e-09 * T[i]**3\
            - 4.250375825000001e-13 * T[i]**4\
            - 2.642898080000000e+04 / T[i]
        else:
            smh = \
            -8.657166830000000e+00\
            + 4.658784890000000e+00 * np.log(T[i])\
            + 2.441983335000000e-03 * T[i]\
            - 2.680481466666667e-07 * T[i]**2\
            + 2.058121200000000e-11 * T[i]**3\
            - 6.930297950000000e-16 * T[i]**4\
            - 2.575940420000000e+04 / T[i]
        EG[i,28] = np.exp(smh)

    # CH2CO
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            1.179371079000000e+01\
            + 1.814225110000000e+00 * np.log(T[i])\
            + 9.950429500000000e-03 * T[i]\
            - 3.690266800000000e-06 * T[i]**2\
            + 1.208571008333333e-09 * T[i]**3\
            - 1.994385340000000e-13 * T[i]**4\
            + 7.053949260000000e+03 / T[i]
        else:
            smh = \
            -9.343950980000001e+00\
            + 5.358693670000000e+00 * np.log(T[i])\
            + 3.478207930000000e-03 * T[i]\
            - 4.413377283333333e-07 * T[i]**2\
            + 3.875563266666666e-11 * T[i]**3\
            - 1.543209100000000e-15 * T[i]**4\
            + 7.902940130000000e+03 / T[i]
        EG[i,29] = np.exp(smh)

    # HCCO
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            1.182074931000000e+01\
            + 1.876079690000000e+00 * np.log(T[i])\
            + 1.106027090000000e-02 * T[i]\
            - 5.981155416666667e-06 * T[i]**2\
            + 2.545021175000000e-09 * T[i]**3\
            - 5.064053450000001e-13 * T[i]**4\
            - 2.016338400000000e+04 / T[i]
        else:
            smh = \
            -1.142046602000000e+01\
            + 5.914793330000000e+00 * np.log(T[i])\
            + 1.857043650000000e-03 * T[i]\
            - 2.168950166666666e-07 * T[i]**2\
            + 1.720611208333333e-11 * T[i]**3\
            - 6.073837949999999e-16 * T[i]**4\
            - 1.935963010000000e+04 / T[i]
        EG[i,30] = np.exp(smh)

    # HCN
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            7.010272870000000e+00\
            + 2.223811580000000e+00 * np.log(T[i])\
            + 4.456742740000000e-03 * T[i]\
            - 1.897271883333333e-06 * T[i]**2\
            + 6.936775500000000e-10 * T[i]**3\
            - 1.208653645000000e-13 * T[i]**4\
            - 1.476707700000000e+04 / T[i]
        else:
            smh = \
            3.354750190000000e+00\
            + 2.923080970000000e+00 * np.log(T[i])\
            + 2.223569370000000e-03 * T[i]\
            - 3.633679016666667e-07 * T[i]**2\
            + 4.327045716666667e-11 * T[i]**3\
            - 2.438435815000000e-15 * T[i]**4\
            - 1.471068660000000e+04 / T[i]
        EG[i,31] = np.exp(smh)

    # NH3
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            3.214441100000003e-01\
            + 3.266505100000000e+00 * np.log(T[i])\
            + 1.529464335000000e-03 * T[i]\
            + 9.645920383333333e-08 * T[i]**2\
            + 7.908978433333333e-11 * T[i]**3\
            - 4.511109845000000e-14 * T[i]**4\
            + 6.365114050000000e+03 / T[i]
        else:
            smh = \
            1.388076962000000e+01\
            + 1.070969580000000e+00 * np.log(T[i])\
            + 4.377334755000000e-03 * T[i]\
            - 5.558756983333334e-07 * T[i]**2\
            + 3.933464925000000e-11 * T[i]**3\
            - 5.678128550000000e-16 * T[i]**4\
            + 5.771686890000000e+03 / T[i]
        EG[i,32] = np.exp(smh)

    # NH2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -3.201215712000000e+00\
            + 3.978835380000000e+00 * np.log(T[i])\
            - 2.569440440000000e-04 * T[i]\
            + 4.473935933333333e-07 * T[i]**2\
            - 7.656938333333334e-11 * T[i]**3\
            - 4.911255760000000e-15 * T[i]**4\
            - 2.124866730000000e+04 / T[i]
        else:
            smh = \
            5.025330030000000e+00\
            + 2.628396100000000e+00 * np.log(T[i])\
            + 1.721899440000000e-03 * T[i]\
            - 1.810106083333333e-07 * T[i]**2\
            + 1.255950316666667e-11 * T[i]**3\
            - 2.297116400000000e-16 * T[i]**4\
            - 2.159095860000000e+04 / T[i]
        EG[i,33] = np.exp(smh)

    # NH
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.417063570000000e+00\
            + 3.446972090000000e+00 * np.log(T[i])\
            + 2.789239090000000e-04 * T[i]\
            - 3.338156000000000e-07 * T[i]**2\
            + 2.382941016666667e-10 * T[i]**3\
            - 5.621714200000000e-14 * T[i]**4\
            - 4.178992680000000e+04 / T[i]
        else:
            smh = \
            1.879557390000000e+00\
            + 2.951009550000000e+00 * np.log(T[i])\
            + 4.549972195000000e-04 * T[i]\
            - 1.392637398333333e-08 * T[i]**2\
            - 4.310933558333333e-12 * T[i]**3\
            + 5.699071800000000e-16 * T[i]**4\
            - 4.197070450000000e+04 / T[i]
        EG[i,34] = np.exp(smh)

    # N
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            1.695226830000000e+00\
            + 2.499766430000000e+00 * np.log(T[i])\
            + 2.510747970000000e-07 * T[i]\
            + 3.218186850000000e-10 * T[i]**2\
            - 4.121938575000000e-13 * T[i]**3\
            + 1.370447530000000e-16 * T[i]**4\
            - 5.607607100000000e+04 / T[i]
        else:
            smh = \
            2.233014610000000e+00\
            + 2.416042450000000e+00 * np.log(T[i])\
            + 8.733188300000000e-05 * T[i]\
            - 1.981076033333333e-08 * T[i]**2\
            + 2.515417116666667e-12 * T[i]**3\
            - 1.016300795000000e-16 * T[i]**4\
            - 5.610515120000000e+04 / T[i]
        EG[i,35] = np.exp(smh)

    # HNO
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -2.763695520000000e+00\
            + 4.519880780000000e+00 * np.log(T[i])\
            - 2.712538115000000e-03 * T[i]\
            + 2.837327266666667e-06 * T[i]**2\
            - 1.239234766666667e-09 * T[i]**3\
            + 2.223817490000000e-13 * T[i]**4\
            - 1.176379250000000e+04 / T[i]
        else:
            smh = \
            7.843381579999999e+00\
            + 2.588198020000000e+00 * np.log(T[i])\
            + 2.438544110000000e-03 * T[i]\
            - 3.820721916666667e-07 * T[i]**2\
            + 4.851783566666666e-11 * T[i]**3\
            - 2.974058715000000e-15 * T[i]**4\
            - 1.202135740000000e+04 / T[i]
        EG[i,36] = np.exp(smh)

    # NO2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            5.181193570000000e+00\
            + 3.391009180000000e+00 * np.log(T[i])\
            + 1.312241740000000e-03 * T[i]\
            + 8.496505099999999e-07 * T[i]**2\
            - 6.351004108333333e-10 * T[i]**3\
            + 1.399800675000000e-13 * T[i]**4\
            - 2.781306790000000e+03 / T[i]
        else:
            smh = \
            2.874441610000000e+00\
            + 3.652392790000000e+00 * np.log(T[i])\
            + 2.358161550000000e-03 * T[i]\
            - 4.576529133333334e-07 * T[i]**2\
            + 6.211523616666667e-11 * T[i]**3\
            - 3.819455540000000e-15 * T[i]**4\
            - 2.572161370000000e+03 / T[i]
        EG[i,37] = np.exp(smh)

    # N2O
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            7.311359789999999e+00\
            + 2.491263560000000e+00 * np.log(T[i])\
            + 4.581124880000000e-03 * T[i]\
            - 1.374746421666667e-06 * T[i]**2\
            + 3.194080475000000e-10 * T[i]**3\
            - 3.597308920000000e-14 * T[i]**4\
            - 8.849386210000001e+03 / T[i]
        else:
            smh = \
            6.556394999999999e-01\
            + 3.613169070000000e+00 * np.log(T[i])\
            + 2.579852325000000e-03 * T[i]\
            - 4.953793750000000e-07 * T[i]**2\
            + 6.670877483333334e-11 * T[i]**3\
            - 4.131659760000000e-15 * T[i]**4\
            - 8.600751259999999e+03 / T[i]
        EG[i,38] = np.exp(smh)

    # HNC
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            6.775512149999999e+00\
            + 2.319951350000000e+00 * np.log(T[i])\
            + 3.237888265000000e-03 * T[i]\
            - 1.010802778333333e-06 * T[i]**2\
            + 2.920738625000000e-10 * T[i]**3\
            - 4.354171745000000e-14 * T[i]**4\
            - 2.209029420000000e+04 / T[i]
        else:
            smh = \
            3.262837090000000e+00\
            + 2.932691870000000e+00 * np.log(T[i])\
            + 1.900038710000000e-03 * T[i]\
            - 2.856937416666667e-07 * T[i]**2\
            + 3.164276425000000e-11 * T[i]**3\
            - 1.667839785000000e-15 * T[i]**4\
            - 2.197898290000000e+04 / T[i]
        EG[i,39] = np.exp(smh)

    # CN
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -8.108521400000002e-01\
            + 3.834814400000000e+00 * np.log(T[i])\
            - 1.289453405000000e-03 * T[i]\
            + 1.036888821666667e-06 * T[i]**2\
            - 3.972701533333334e-10 * T[i]**3\
            + 6.380922000000000e-14 * T[i]**4\
            - 5.191015930000000e+04 / T[i]
        else:
            smh = \
            6.693767640000001e+00\
            + 2.544173270000000e+00 * np.log(T[i])\
            + 1.317066285000000e-03 * T[i]\
            - 2.789897400000000e-07 * T[i]**2\
            + 4.556227416666667e-11 * T[i]**3\
            - 3.246579910000000e-15 * T[i]**4\
            - 5.216576380000000e+04 / T[i]
        EG[i,40] = np.exp(smh)

    # HNCO
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            1.188900921000000e+01\
            + 1.862247190000000e+00 * np.log(T[i])\
            + 8.611737600000001e-03 * T[i]\
            - 3.608354783333333e-06 * T[i]**2\
            + 1.250707875000000e-09 * T[i]**3\
            - 2.066883140000000e-13 * T[i]**4\
            + 1.562000400000000e+04 / T[i]
        else:
            smh = \
            -1.091351590000000e+00\
            + 4.168934870000000e+00 * np.log(T[i])\
            + 3.088839190000000e-03 * T[i]\
            - 3.921440366666667e-07 * T[i]**2\
            + 2.705044066666667e-11 * T[i]**3\
            - 4.016227810000000e-16 * T[i]**4\
            + 1.599038920000000e+04 / T[i]
        EG[i,41] = np.exp(smh)

    # HCNO
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -2.411256099999997e-01\
            + 3.866481360000000e+00 * np.log(T[i])\
            + 5.408098400000000e-03 * T[i]\
            - 1.638189695000000e-06 * T[i]**2\
            + 4.472192608333334e-10 * T[i]**3\
            - 6.516058450000000e-14 * T[i]**4\
            - 1.873855690000000e+04 / T[i]
        else:
            smh = \
            -4.097470746000000e+00\
            + 4.550253540000000e+00 * np.log(T[i])\
            + 3.788088890000000e-03 * T[i]\
            - 7.019523650000000e-07 * T[i]**2\
            + 9.306262666666667e-11 * T[i]**3\
            - 5.725460850000000e-15 * T[i]**4\
            - 1.862704900000000e+04 / T[i]
        EG[i,42] = np.exp(smh)

    # NCO
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            6.265490140000001e+00\
            + 2.808722710000000e+00 * np.log(T[i])\
            + 3.980379160000000e-03 * T[i]\
            - 9.087365566666666e-07 * T[i]**2\
            + 1.051404666666667e-10 * T[i]**3\
            + 4.954950925000000e-15 * T[i]**4\
            - 1.373487570000000e+04 / T[i]
        else:
            smh = \
            3.221707700000001e-01\
            + 3.779306050000000e+00 * np.log(T[i])\
            + 2.619677430000000e-03 * T[i]\
            - 5.186181683333333e-07 * T[i]**2\
            + 7.184516158333333e-11 * T[i]**3\
            - 4.562377015000000e-15 * T[i]**4\
            - 1.348271260000000e+04 / T[i]
        EG[i,43] = np.exp(smh)

    # NCN
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            3.957331340000001e+00\
            + 3.157271700000000e+00 * np.log(T[i])\
            + 3.627786115000000e-03 * T[i]\
            - 6.527781466666666e-07 * T[i]**2\
            - 5.087917058333333e-11 * T[i]**3\
            + 4.066883220000000e-14 * T[i]**4\
            - 5.343741580000000e+04 / T[i]
        else:
            smh = \
            -4.295089137000001e+00\
            + 4.479037100000000e+00 * np.log(T[i])\
            + 2.092057540000000e-03 * T[i]\
            - 4.388149650000000e-07 * T[i]**2\
            + 6.243347108333333e-11 * T[i]**3\
            - 4.023119400000000e-15 * T[i]**4\
            - 5.306228250000000e+04 / T[i]
        EG[i,44] = np.exp(smh)

    # HNCN
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            6.343206840000000e+00\
            + 3.067543110000000e+00 * np.log(T[i])\
            + 5.339496950000000e-03 * T[i]\
            - 1.327040508333333e-06 * T[i]**2\
            + 2.165694916666667e-10 * T[i]**3\
            - 6.352880600000000e-15 * T[i]**4\
            - 3.666235080000000e+04 / T[i]
        else:
            smh = \
            -8.934335460000000e+00\
            + 5.538464480000000e+00 * np.log(T[i])\
            + 1.945270630000000e-03 * T[i]\
            - 2.301745866666667e-07 * T[i]**2\
            + 1.844123041666667e-11 * T[i]**3\
            - 6.591366250000000e-16 * T[i]**4\
            - 3.596353370000000e+04 / T[i]
        EG[i,45] = np.exp(smh)

    # CH2NH
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            8.280209270000000e+00\
            + 2.599042030000000e+00 * np.log(T[i])\
            + 1.932807415000000e-03 * T[i]\
            + 2.198691950000000e-06 * T[i]**2\
            - 1.285251033333333e-09 * T[i]**3\
            + 2.538226270000000e-13 * T[i]**4\
            - 9.678567190000000e+03 / T[i]
        else:
            smh = \
            1.449905070000000e+01\
            + 1.360870500000000e+00 * np.log(T[i])\
            + 6.394734400000000e-03 * T[i]\
            - 1.025063530000000e-06 * T[i]**2\
            + 1.202647833333333e-10 * T[i]**3\
            - 6.644343850000000e-15 * T[i]**4\
            - 9.727643099999999e+03 / T[i]
        EG[i,46] = np.exp(smh)

    # H2CN
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            6.234720290000000e+00\
            + 2.853937370000000e+00 * np.log(T[i])\
            + 2.461452395000000e-03 * T[i]\
            + 6.614785933333334e-07 * T[i]**2\
            - 5.161233741666666e-10 * T[i]**3\
            + 1.066403325000000e-13 * T[i]**4\
            - 2.759557120000000e+04 / T[i]
        else:
            smh = \
            9.057100850000001e+00\
            + 2.297394050000000e+00 * np.log(T[i])\
            + 4.412864095000000e-03 * T[i]\
            - 7.333897883333332e-07 * T[i]**2\
            + 8.855359666666667e-11 * T[i]**3\
            - 5.019339950000000e-15 * T[i]**4\
            - 2.762304740000000e+04 / T[i]
        EG[i,47] = np.exp(smh)

    # NO
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -1.610656550000000e+00\
            + 4.150366870000000e+00 * np.log(T[i])\
            - 2.044450040000000e-03 * T[i]\
            + 1.563452876666667e-06 * T[i]**2\
            - 6.257574174999999e-10 * T[i]**3\
            + 1.058713990000000e-13 * T[i]**4\
            - 9.770186790000000e+03 / T[i]
        else:
            smh = \
            6.088598350000000e+00\
            + 2.794628390000000e+00 * np.log(T[i])\
            + 1.061302930000000e-03 * T[i]\
            - 1.865616183333333e-07 * T[i]**2\
            + 2.329341816666667e-11 * T[i]**3\
            - 1.343126815000000e-15 * T[i]**4\
            - 1.000190690000000e+04 / T[i]
        EG[i,48] = np.exp(smh)

    # N2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -5.635349000000001e-01\
            + 3.531005280000000e+00 * np.log(T[i])\
            - 6.183049400000000e-05 * T[i]\
            - 8.383323883333334e-08 * T[i]**2\
            + 2.029421766666667e-10 * T[i]**3\
            - 7.044061750000001e-14 * T[i]**4\
            + 1.046976280000000e+03 / T[i]
        else:
            smh = \
            2.919311250000000e+00\
            + 2.952576370000000e+00 * np.log(T[i])\
            + 6.984502000000001e-04 * T[i]\
            - 8.210526716666667e-08 * T[i]**2\
            + 6.550084958333333e-12 * T[i]**3\
            - 2.303776020000000e-16 * T[i]**4\
            + 9.239486879999999e+02 / T[i]
        EG[i,49] = np.exp(smh)

    # Reaction H2 + M <=> 2 H + M
    kf = 4.577000000000000e+19 * (T ** -1.4) * np.exp(-1.044000000000000e+05 / (Rc * T))
    kb = kf * (((EG[:,0])/(EG[:,1]**2.0* pfac)))
    rr = (ctot +2.000000000000000e+00*C[:,24]\
    +1.000000000000000e+00*C[:,12]\
    +8.999999999999999e-01*C[:,8]\
    +2.800000000000000e+00*C[:,9]\
    +1.500000000000000e+00*C[:,0]\
    +1.100000000000000e+01*C[:,4]\
    )*(kf * (C[:,0]) - kb * (C[:,1]**2.0))
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,1] = wdot[:,1] + 2.00 * rr[:]

    # Reaction H2 + O <=> H + OH
    kf = 3.800000000000000e+12 * np.exp(-7.948000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,3])/(EG[:,1] * EG[:,5])))
    rr = kf * (C[:,0] * C[:,3]) - kb * (C[:,1] * C[:,5])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H2 + O <=> H + OH
    kf = 8.800000000000000e+14 * np.exp(-1.917500000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,3])/(EG[:,1] * EG[:,5])))
    rr = kf * (C[:,0] * C[:,3]) - kb * (C[:,1] * C[:,5])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H2 + OH <=> H + H2O
    kf = 2.200000000000000e+08 * (T ** 1.51) * np.exp(-3.430000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,5])/(EG[:,1] * EG[:,4])))
    rr = kf * (C[:,0] * C[:,5]) - kb * (C[:,1] * C[:,4])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction 2 H + O2 <=> H2 + O2
    kf = 8.800000000000000e+22 * (T ** -1.835) * np.exp(-8.000000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,1]**(2.0) * EG[:,2])/(EG[:,0] * EG[:,2]* pfac**-1.0)))
    rr = kf * (C[:,1]**2.0 * C[:,2]) - kb * (C[:,0] * C[:,2])
    wdot[:,1] = wdot[:,1] - 2.00 * rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction 2 H + O2 <=> 2 OH
    kf = 4.000000000000000e+22 * (T ** -1.835) * np.exp(-8.000000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,1]**(2.0) * EG[:,2])/(EG[:,5]**2.0* pfac**-1.0)))
    rr = kf * (C[:,1]**2.0 * C[:,2]) - kb * (C[:,5]**2.0)
    wdot[:,1] = wdot[:,1] - 2.00 * rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,5] = wdot[:,5] + 2.00 * rr[:]

    # Reaction H + O + O2 <=> OH + O2
    kf = 7.350000000000001e+22 * (T ** -1.835) * np.exp(-8.000000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,3] * EG[:,2])/(EG[:,5] * EG[:,2]* pfac**-1.0)))
    rr = kf * (C[:,1] * C[:,3] * C[:,2]) - kb * (C[:,5] * C[:,2])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction H + OH + O2 <=> H2O + O2
    kf = 2.560000000000000e+22 * (T ** -1.835) * np.exp(-8.000000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,5] * EG[:,2])/(EG[:,4] * EG[:,2]* pfac**-1.0)))
    rr = kf * (C[:,1] * C[:,5] * C[:,2]) - kb * (C[:,4] * C[:,2])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction 2 O + M <=> O2 + M
    kf = 6.165000000000000e+15 * (T ** -0.5) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,3]**(2.0))/(EG[:,2]* pfac**-1.0)))
    rr = (ctot +2.000000000000000e+00*C[:,24]\
    +1.000000000000000e+00*C[:,12]\
    +8.999999999999999e-01*C[:,8]\
    +2.800000000000000e+00*C[:,9]\
    +1.500000000000000e+00*C[:,0]\
    +1.100000000000000e+01*C[:,4]\
    )*(kf * (C[:,3]**2.0) - kb * (C[:,2]))
    wdot[:,3] = wdot[:,3] - 2.00 * rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction H + O2 <=> O + OH
    kf = 1.040000000000000e+14 * np.exp(-1.528600000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,2])/(EG[:,3] * EG[:,5])))
    rr = kf * (C[:,1] * C[:,2]) - kb * (C[:,3] * C[:,5])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H + OH (+M) <=> H2O (+M)
    M = ctot + 5.000000000000000e-01*C[:,0] + 1.200000000000000e+01*C[:,4]
    k0 = 4.530000000000001e+21 * (T ** -1.81) * np.exp(-4.920000000000000e+02 / (Rc * T))
    kinf = 2.500000000000000e+13 * (T ** 0.234) * np.exp(1.140000000000000e+02 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.73) * np.exp(-T/1e-30) + 0.73 * np.exp(-T/1.0000000000000002e+30) + np.exp(-1e+30/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,1] * EG[:,5])/(EG[:,4]* pfac**-1.0)))
    rr = kf * (C[:,1] * C[:,5]) - kb * (C[:,4])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction 2 OH <=> H2O + O
    kf = 2.880000000000000e+06 * (T ** 1.79) * np.exp(1.750000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,5]**(2.0))/(EG[:,4] * EG[:,3])))
    rr = kf * (C[:,5]**2.0) - kb * (C[:,4] * C[:,3])
    wdot[:,5] = wdot[:,5] - 2.00 * rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction H + O + M <=> OH + M
    kf = 4.714000000000000e+18 * (T ** -1.0) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,3])/(EG[:,5]* pfac**-1.0)))
    rr = (ctot +2.000000000000000e+00*C[:,24]\
    +1.000000000000000e+00*C[:,12]\
    +5.000000000000000e-01*C[:,8]\
    +1.000000000000000e+00*C[:,9]\
    +1.500000000000000e+00*C[:,0]\
    +1.100000000000000e+01*C[:,4]\
    )*(kf * (C[:,1] * C[:,3]) - kb * (C[:,5]))
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H2O2 (+M) <=> 2 OH (+M)
    M = ctot + 1.800000000000000e+00*C[:,8] + 6.000000000000005e-02*C[:,9] + 2.700000000000000e+00*C[:,0] + 4.100000000000000e+00*C[:,4] + 4.200000000000000e+00*C[:,6] + 5.000000000000000e-01*C[:,49] + -2.100000000000000e-01*C[:,2]
    k0 = 2.353018100000000e+24 * (T ** -2.2929358) * np.exp(-4.874340499999999e+04 / (Rc * T))
    kinf = 2.000000000000000e+12 * (T ** 0.9) * np.exp(-4.874900000000000e+04 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.43) * np.exp(-T/1e-30) + 0.43 * np.exp(-T/1.0000000000000002e+30)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,6])/(EG[:,5]**2.0* pfac)))
    rr = kf * (C[:,6]) - kb * (C[:,5]**2.0)
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,5] = wdot[:,5] + 2.00 * rr[:]

    # Reaction H + H2O2 <=> H2O + OH
    kf = 2.410000000000000e+13 * np.exp(-3.970000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,6])/(EG[:,4] * EG[:,5])))
    rr = kf * (C[:,1] * C[:,6]) - kb * (C[:,4] * C[:,5])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H + H2O2 <=> H2 + HO2
    kf = 5.020000000000000e+06 * (T ** 2.07) * np.exp(-4.300000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,6])/(EG[:,0] * EG[:,7])))
    rr = kf * (C[:,1] * C[:,6]) - kb * (C[:,0] * C[:,7])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction H2O2 + O <=> HO2 + OH
    kf = 9.549999999999998e+06 * (T ** 2.0) * np.exp(-3.970000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,6] * EG[:,3])/(EG[:,7] * EG[:,5])))
    rr = kf * (C[:,6] * C[:,3]) - kb * (C[:,7] * C[:,5])
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H2O2 + OH <=> H2O + HO2
    kf = 1.740000000000000e+12 * np.exp(-3.180000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,6] * EG[:,5])/(EG[:,4] * EG[:,7])))
    rr = kf * (C[:,6] * C[:,5]) - kb * (C[:,4] * C[:,7])
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction H2O2 + OH <=> H2O + HO2
    kf = 7.590000000000000e+13 * np.exp(-7.269000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,6] * EG[:,5])/(EG[:,4] * EG[:,7])))
    rr = kf * (C[:,6] * C[:,5]) - kb * (C[:,4] * C[:,7])
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction H + HO2 <=> H2 + O2
    kf = 2.800000000000000e+06 * (T ** 2.09) * np.exp(1.451000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,7])/(EG[:,0] * EG[:,2])))
    rr = kf * (C[:,1] * C[:,7]) - kb * (C[:,0] * C[:,2])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction H + HO2 <=> 2 OH
    kf = 7.079000000000000e+13 * np.exp(-2.950000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,7])/(EG[:,5]**2.0)))
    rr = kf * (C[:,1] * C[:,7]) - kb * (C[:,5]**2.0)
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,5] = wdot[:,5] + 2.00 * rr[:]

    # Reaction HO2 + O <=> O2 + OH
    kf = 3.250000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,7] * EG[:,3])/(EG[:,2] * EG[:,5])))
    rr = kf * (C[:,7] * C[:,3]) - kb * (C[:,2] * C[:,5])
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction HO2 + OH <=> H2O + O2
    kf = 1.930000000000000e+20 * (T ** -2.49) * np.exp(-5.842400000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,7] * EG[:,5])/(EG[:,4] * EG[:,2])))
    rr = kf * (C[:,7] * C[:,5]) - kb * (C[:,4] * C[:,2])
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction HO2 + OH <=> H2O + O2
    kf = 1.210000000000000e+09 * (T ** 1.24) * np.exp(1.307580000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,7] * EG[:,5])/(EG[:,4] * EG[:,2])))
    rr = kf * (C[:,7] * C[:,5]) - kb * (C[:,4] * C[:,2])
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction 2 HO2 <=> H2O2 + O2
    kf = 1.214000000000000e+10 * (T ** 0.422) * np.exp(1.480520000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,7]**(2.0))/(EG[:,6] * EG[:,2])))
    rr = kf * (C[:,7]**2.0) - kb * (C[:,6] * C[:,2])
    wdot[:,7] = wdot[:,7] - 2.00 * rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction 2 HO2 <=> H2O2 + O2
    kf = 1.688000000000000e+16 * (T ** -0.681) * np.exp(-1.293166000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,7]**(2.0))/(EG[:,6] * EG[:,2])))
    rr = kf * (C[:,7]**2.0) - kb * (C[:,6] * C[:,2])
    wdot[:,7] = wdot[:,7] - 2.00 * rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction H + O2 (+M) <=> HO2 (+M)
    M = ctot + 2.000000000000000e+00*C[:,24] + 1.000000000000000e+00*C[:,12] + 2.250000000000000e+00*C[:,9] + 3.500000000000001e-01*C[:,0] + 1.560000000000000e+01*C[:,4] + -9.999999999999998e-02*C[:,2]
    k0 = 1.225000000000000e+19 * (T ** -1.2) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kinf = 4.660000000000000e+12 * (T ** 0.44) * np.exp(-0.000000000000000e+00 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.5) * np.exp(-T/1.0) + 0.5 * np.exp(-T/10000000000.0)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,1] * EG[:,2])/(EG[:,7]* pfac**-1.0)))
    rr = kf * (C[:,1] * C[:,2]) - kb * (C[:,7])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction CO + OH <=> CO2 + H
    if P < 1.332423750000000e+04:
    for i in range(veclen):
            kf[i]l=2.100000000000000e+05 * (T[i] ** 1.9) * np.exp(1.064000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.100000000000000e+05 * (T[i] ** 1.9) * np.exp(1.064000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.497340024132191e+00
    elif P < 1.332423750000000e+06:
    for i in range(veclen):
            kf[i]l=2.500000000000000e+05 * (T[i] ** 1.88) * np.exp(1.043000000000000e+03 / (Rc * T[i]))
            kf[i]h=8.700000000000000e+05 * (T[i] ** 1.73) * np.exp(6.850000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.179992511712624e+01
            logP[i]h=1.410251021012028e+01
    elif P < 1.333234349999999e+07:
    for i in range(veclen):
            kf[i]l=8.700000000000000e+05 * (T[i] ** 1.73) * np.exp(6.850000000000000e+02 / (Rc * T[i]))
            kf[i]h=6.800000000000000e+06 * (T[i] ** 1.48) * np.exp(-4.800000000000000e+01 / (Rc * T[i]))
            logP[i]l=1.410251021012028e+01
            logP[i]h=1.640570348315436e+01
    elif P < 1.333234350000001e+08:
    for i in range(veclen):
            kf[i]l=6.800000000000000e+06 * (T[i] ** 1.48) * np.exp(-4.800000000000000e+01 / (Rc * T[i]))
            kf[i]h=2.300000000000000e+07 * (T[i] ** 1.35) * np.exp(-9.740000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.640570348315436e+01
            logP[i]h=1.870828857614841e+01
    else:
    for i in range(veclen):
            kf[i]l=2.300000000000000e+07 * (T[i] ** 1.35) * np.exp(-9.740000000000000e+02 / (Rc * T[i]))
            kf[i]h=2.300000000000000e+07 * (T[i] ** 1.35) * np.exp(-9.740000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.870828857614841e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][8] * EG[i][5])/(EG[i][9] * EG[i][1])))
        rr[i] = kf[i] * (C[i][8] * C[i][5]) - kb[i] * (C[i][9] * C[i][1])
    wdot[:,8] = wdot[:,8] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CO + HO2 <=> CO2 + OH
    kf = 8.550000000000002e+03 * (T ** 2.52) * np.exp(-1.556000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,8] * EG[:,7])/(EG[:,9] * EG[:,5])))
    rr = kf * (C[:,8] * C[:,7]) - kb * (C[:,9] * C[:,5])
    wdot[:,8] = wdot[:,8] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CO + O2 <=> CO2 + O
    kf = 1.119000000000000e+12 * np.exp(-4.770000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,8] * EG[:,2])/(EG[:,9] * EG[:,3])))
    rr = kf * (C[:,8] * C[:,2]) - kb * (C[:,9] * C[:,3])
    wdot[:,8] = wdot[:,8] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction CH3 + H (+M) <=> CH4 (+M)
    M = ctot + 3.000000000000000e+00*C[:,24] + 5.000000000000000e+00*C[:,18] + 4.000000000000000e+00*C[:,12] + 1.300000000000000e+00*C[:,8] + 3.000000000000000e+00*C[:,9] + 3.000000000000000e+00*C[:,0] + 1.100000000000000e+01*C[:,4] + 5.000000000000000e-01*C[:,49] + 5.000000000000000e-01*C[:,2]
    k0 = 8.540000000000001e+32 * (T ** -4.69) * np.exp(-2.200000000000000e+03 / (Rc * T))
    kinf = 6.470000000000000e+13 * (T ** 0.185) * np.exp(5.400000000000000e+01 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.516194) * np.exp(-T/3637.8482) + 0.516194 * np.exp(-T/1.0) + np.exp(-1e+30/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,13] * EG[:,1])/(EG[:,12]* pfac**-1.0)))
    rr = kf * (C[:,13] * C[:,1]) - kb * (C[:,12])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]

    # Reaction CH4 + H <=> CH3 + H2
    kf = 4.080000000000000e+03 * (T ** 3.16) * np.exp(-8.756000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,12] * EG[:,1])/(EG[:,13] * EG[:,0])))
    rr = kf * (C[:,12] * C[:,1]) - kb * (C[:,13] * C[:,0])
    wdot[:,12] = wdot[:,12] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH4 + O <=> CH3 + OH
    kf = 4.900000000000000e+06 * (T ** 2.2) * np.exp(-7.591000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,12] * EG[:,3])/(EG[:,13] * EG[:,5])))
    rr = kf * (C[:,12] * C[:,3]) - kb * (C[:,13] * C[:,5])
    wdot[:,12] = wdot[:,12] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH4 + OH <=> CH3 + H2O
    kf = 5.654760000000001e+06 * (T ** 1.93695) * np.exp(-2.656269800000000e+03 / (Rc * T))
    kb = kf * (((EG[:,12] * EG[:,5])/(EG[:,13] * EG[:,4])))
    rr = kf * (C[:,12] * C[:,5]) - kb * (C[:,13] * C[:,4])
    wdot[:,12] = wdot[:,12] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH4 + HO2 <=> CH3 + H2O2
    kf = 1.120000000000000e+01 * (T ** 3.74) * np.exp(-2.100900000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,12] * EG[:,7])/(EG[:,13] * EG[:,6])))
    rr = kf * (C[:,12] * C[:,7]) - kb * (C[:,13] * C[:,6])
    wdot[:,12] = wdot[:,12] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    # Reaction CH3O2 + CH4 <=> CH3 + CH3O2H
    kf = 9.600000000000001e-01 * (T ** 3.77) * np.exp(-1.781000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,11] * EG[:,12])/(EG[:,13] * EG[:,10])))
    rr = kf * (C[:,11] * C[:,12]) - kb * (C[:,13] * C[:,10])
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,12] = wdot[:,12] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,10] = wdot[:,10] + rr[:]

    # Reaction CH3 + HO2 <=> CH4 + O2
    kf = 1.819000000000000e+03 * (T ** 2.83) * np.exp(3.730000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,7])/(EG[:,12] * EG[:,2])))
    rr = kf * (C[:,13] * C[:,7]) - kb * (C[:,12] * C[:,2])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction CH2 + CH4 <=> 2 CH3
    kf = 2.460000000000000e+06 * (T ** 2.0) * np.exp(-8.270000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,12])/(EG[:,13]**2.0)))
    rr = kf * (C[:,14] * C[:,12]) - kb * (C[:,13]**2.0)
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,12] = wdot[:,12] - rr[:]
    wdot[:,13] = wdot[:,13] + 2.00 * rr[:]

    # Reaction CH2(S) + N2 <=> CH2 + N2
    kf = 1.260000000000000e+13 * np.exp(-4.300000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,49])/(EG[:,14] * EG[:,49])))
    rr = kf * (C[:,15] * C[:,49]) - kb * (C[:,14] * C[:,49])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,49] = wdot[:,49] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction CH2(S) + H2O <=> CH2 + H2O
    kf = 5.480000000000000e+13 * np.exp(4.300000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,4])/(EG[:,14] * EG[:,4])))
    rr = kf * (C[:,15] * C[:,4]) - kb * (C[:,14] * C[:,4])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,4] = wdot[:,4] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH2(S) + CO <=> CH2 + CO
    kf = 1.260000000000000e+13 * np.exp(-4.300000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,8])/(EG[:,14] * EG[:,8])))
    rr = kf * (C[:,15] * C[:,8]) - kb * (C[:,14] * C[:,8])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,8] = wdot[:,8] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction CH2(S) + CO2 <=> CH2 + CO2
    kf = 5.480000000000000e+13 * np.exp(4.300000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,9])/(EG[:,14] * EG[:,9])))
    rr = kf * (C[:,15] * C[:,9]) - kb * (C[:,14] * C[:,9])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,9] = wdot[:,9] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]

    # Reaction CH2(S) + O2 => CO + H + OH
    kf = 1.201400000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = 0
    rr = kf * (C[:,15] * C[:,2]) - kb * (C[:,8] * C[:,1] * C[:,5])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH2(S) + O2 <=> CO + H2O
    kf = 5.148800000000000e+11 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,2])/(EG[:,8] * EG[:,4])))
    rr = kf * (C[:,15] * C[:,2]) - kb * (C[:,8] * C[:,4])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH2(S) + O <=> CO + H2
    kf = 1.500000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,3])/(EG[:,8] * EG[:,0])))
    rr = kf * (C[:,15] * C[:,3]) - kb * (C[:,8] * C[:,0])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH2(S) + O <=> H + HCO
    kf = 1.500000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,3])/(EG[:,1] * EG[:,22])))
    rr = kf * (C[:,15] * C[:,3]) - kb * (C[:,1] * C[:,22])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction CH2(S) + H2 <=> CH3 + H
    kf = 7.000000000000001e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,0])/(EG[:,13] * EG[:,1])))
    rr = kf * (C[:,15] * C[:,0]) - kb * (C[:,13] * C[:,1])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH2(S) + H <=> CH + H2
    kf = 3.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,1])/(EG[:,17] * EG[:,0])))
    rr = kf * (C[:,15] * C[:,1]) - kb * (C[:,17] * C[:,0])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,17] = wdot[:,17] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH2(S) + OH <=> CH2O + H
    kf = 3.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,5])/(EG[:,21] * EG[:,1])))
    rr = kf * (C[:,15] * C[:,5]) - kb * (C[:,21] * C[:,1])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH2(S) + CO2 <=> CH2O + CO
    kf = 1.400000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,9])/(EG[:,21] * EG[:,8])))
    rr = kf * (C[:,15] * C[:,9]) - kb * (C[:,21] * C[:,8])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,9] = wdot[:,9] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction C2H2 + CH2(S) <=> C2H2 + CH2
    kf = 4.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,28] * EG[:,15])/(EG[:,28] * EG[:,14])))
    rr = kf * (C[:,28] * C[:,15]) - kb * (C[:,28] * C[:,14])
    wdot[:,28] = wdot[:,28] - rr[:]
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,28] = wdot[:,28] + rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]

    # Reaction CH2 + H (+M) <=> CH3 (+M)
    M = ctot + 2.000000000000000e+00*C[:,24] + 1.000000000000000e+00*C[:,12] + 5.000000000000000e-01*C[:,8] + 1.000000000000000e+00*C[:,9] + 1.000000000000000e+00*C[:,0] + 5.000000000000000e+00*C[:,4]
    k0 = 1.040000000000000e+26 * (T ** -2.76) * np.exp(-1.600000000000000e+03 / (Rc * T))
    kinf = 6.000000000000000e+14 * np.exp(-0.000000000000000e+00 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.562) * np.exp(-T/91.0) + 0.562 * np.exp(-T/5836.0) + np.exp(-8552.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,14] * EG[:,1])/(EG[:,13]* pfac**-1.0)))
    rr = kf * (C[:,14] * C[:,1]) - kb * (C[:,13])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]

    # Reaction CH + H2 (+M) <=> CH3 (+M)
    M = ctot + 2.000000000000000e+00*C[:,24] + 1.000000000000000e+00*C[:,12] + 5.000000000000000e-01*C[:,8] + 1.000000000000000e+00*C[:,9] + 1.000000000000000e+00*C[:,0] + 5.000000000000000e+00*C[:,4]
    k0 = 4.820000000000000e+25 * (T ** -2.8) * np.exp(-5.900000000000000e+02 / (Rc * T))
    kinf = 1.970000000000000e+12 * (T ** 0.43) * np.exp(3.700000000000000e+02 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.578) * np.exp(-T/122.0) + 0.578 * np.exp(-T/2535.0) + np.exp(-9365.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,17] * EG[:,0])/(EG[:,13]* pfac**-1.0)))
    rr = kf * (C[:,17] * C[:,0]) - kb * (C[:,13])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]

    # Reaction CH2 + O2 <=> CH2O + O
    kf = 1.300000000000000e+05 * (T ** 2.4202) * np.exp(-1.604000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,2])/(EG[:,21] * EG[:,3])))
    rr = kf * (C[:,14] * C[:,2]) - kb * (C[:,21] * C[:,3])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction CH2 + O2 => CO2 + 2 H
    kf = 1.050000000000000e+09 * (T ** 0.9929) * np.exp(2.690000000000000e+02 / (Rc * T))
    kb = 0
    rr = kf * (C[:,14] * C[:,2]) - kb * (C[:,9] * C[:,1]**2.0)
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,1] = wdot[:,1] + 2.00 * rr[:]

    # Reaction CH2 + O => CO + 2 H
    kf = 5.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = 0
    rr = kf * (C[:,14] * C[:,3]) - kb * (C[:,8] * C[:,1]**2.0)
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + 2.00 * rr[:]

    # Reaction CH2 + H <=> CH + H2
    kf = 1.000000000000000e+18 * (T ** -1.56) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,1])/(EG[:,17] * EG[:,0])))
    rr = kf * (C[:,14] * C[:,1]) - kb * (C[:,17] * C[:,0])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,17] = wdot[:,17] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH2 + H <=> CH + H2
    kf = 2.700000000000000e+11 * (T ** 0.67) * np.exp(-2.570000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,1])/(EG[:,17] * EG[:,0])))
    rr = kf * (C[:,14] * C[:,1]) - kb * (C[:,17] * C[:,0])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,17] = wdot[:,17] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH2 + H2 <=> CH3 + H
    kf = 4.400000000000000e+05 * (T ** 2.39) * np.exp(-7.350000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,0])/(EG[:,13] * EG[:,1])))
    rr = kf * (C[:,14] * C[:,0]) - kb * (C[:,13] * C[:,1])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH2 + OH <=> CH + H2O
    kf = 1.130000000000000e+07 * (T ** 2.0) * np.exp(-3.000000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,5])/(EG[:,17] * EG[:,4])))
    rr = kf * (C[:,14] * C[:,5]) - kb * (C[:,17] * C[:,4])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,17] = wdot[:,17] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH + O2 <=> HCO + O
    kf = 3.240000000000000e+14 * (T ** -0.4) * np.exp(-4.150000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,2])/(EG[:,22] * EG[:,3])))
    rr = kf * (C[:,17] * C[:,2]) - kb * (C[:,22] * C[:,3])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction CH + O2 => CO + H + O
    kf = 4.860000000000000e+14 * (T ** -0.4) * np.exp(-4.150000000000000e+03 / (Rc * T))
    kb = 0
    rr = kf * (C[:,17] * C[:,2]) - kb * (C[:,8] * C[:,1] * C[:,3])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction CH + O2 <=> CO2 + H
    kf = 4.860000000000000e+14 * (T ** -0.4) * np.exp(-4.150000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,2])/(EG[:,9] * EG[:,1])))
    rr = kf * (C[:,17] * C[:,2]) - kb * (C[:,9] * C[:,1])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH + O <=> CO + H
    kf = 5.700000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,3])/(EG[:,8] * EG[:,1])))
    rr = kf * (C[:,17] * C[:,3]) - kb * (C[:,8] * C[:,1])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH + H <=> C + H2
    kf = 1.100000000000000e+14 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,1])/(EG[:,16] * EG[:,0])))
    rr = kf * (C[:,17] * C[:,1]) - kb * (C[:,16] * C[:,0])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,16] = wdot[:,16] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH + OH <=> H + HCO
    kf = 3.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,5])/(EG[:,1] * EG[:,22])))
    rr = kf * (C[:,17] * C[:,5]) - kb * (C[:,1] * C[:,22])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction CH + H2O <=> CH2O + H
    kf = 1.774000000000000e+16 * (T ** -1.22) * np.exp(-2.380000000000000e+01 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,4])/(EG[:,21] * EG[:,1])))
    rr = kf * (C[:,17] * C[:,4]) - kb * (C[:,21] * C[:,1])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,4] = wdot[:,4] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH + CO2 <=> CO + HCO
    kf = 1.700000000000000e+12 * np.exp(-6.850000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,9])/(EG[:,8] * EG[:,22])))
    rr = kf * (C[:,17] * C[:,9]) - kb * (C[:,8] * C[:,22])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,9] = wdot[:,9] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction C + OH <=> CO + H
    kf = 5.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,16] * EG[:,5])/(EG[:,8] * EG[:,1])))
    rr = kf * (C[:,16] * C[:,5]) - kb * (C[:,8] * C[:,1])
    wdot[:,16] = wdot[:,16] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction C + O2 <=> CO + O
    kf = 5.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,16] * EG[:,2])/(EG[:,8] * EG[:,3])))
    rr = kf * (C[:,16] * C[:,2]) - kb * (C[:,8] * C[:,3])
    wdot[:,16] = wdot[:,16] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction CH3 + O2 (+M) <=> CH3O2 (+M)
    M = ctot
    k0 = 6.850000000000000e+24 * (T ** -3.0) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kinf = 7.812000000000000e+09 * (T ** 0.9) * np.exp(-0.000000000000000e+00 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.6) * np.exp(-T/1000.0) + 0.6 * np.exp(-T/70.0) + np.exp(-1700.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,13] * EG[:,2])/(EG[:,11]* pfac**-1.0)))
    rr = kf * (C[:,13] * C[:,2]) - kb * (C[:,11])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,11] = wdot[:,11] + rr[:]

    # Reaction CH3 + O2 <=> CH3O + O
    kf = 7.546000000000000e+12 * np.exp(-2.832000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,2])/(EG[:,19] * EG[:,3])))
    rr = kf * (C[:,13] * C[:,2]) - kb * (C[:,19] * C[:,3])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction CH3 + O2 <=> CH2O + OH
    kf = 2.641000000000000e+00 * (T ** 3.283) * np.exp(-8.105000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,2])/(EG[:,21] * EG[:,5])))
    rr = kf * (C[:,13] * C[:,2]) - kb * (C[:,21] * C[:,5])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH3 + O <=> CH2O + H
    kf = 5.540000000000000e+13 * (T ** 0.05) * np.exp(1.360000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,3])/(EG[:,21] * EG[:,1])))
    rr = kf * (C[:,13] * C[:,3]) - kb * (C[:,21] * C[:,1])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH3 + OH <=> CH2 + H2O
    kf = 4.293000000000000e+04 * (T ** 2.568) * np.exp(-3.997800000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,5])/(EG[:,14] * EG[:,4])))
    rr = kf * (C[:,13] * C[:,5]) - kb * (C[:,14] * C[:,4])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH3 + OH <=> CH2(S) + H2O
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=4.936000000000000e+14 * (T[i] ** -0.669) * np.exp(4.458000000000000e+02 / (Rc * T[i]))
            kf[i]h=4.936000000000000e+14 * (T[i] ** -0.669) * np.exp(4.458000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=1.207000000000000e+15 * (T[i] ** -0.778) * np.exp(1.756000000000000e+02 / (Rc * T[i]))
            kf[i]h=5.282000000000000e+17 * (T[i] ** -1.518) * np.exp(-1.772000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=5.282000000000000e+17 * (T[i] ** -1.518) * np.exp(-1.772000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.788000000000000e+23 * (T[i] ** -3.155) * np.exp(-7.003000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=4.788000000000000e+23 * (T[i] ** -3.155) * np.exp(-7.003000000000000e+03 / (Rc * T[i]))
            kf[i]h=8.433000000000000e+19 * (T[i] ** -1.962) * np.exp(-8.244000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=8.433000000000000e+19 * (T[i] ** -1.962) * np.exp(-8.244000000000000e+03 / (Rc * T[i]))
            kf[i]h=8.433000000000000e+19 * (T[i] ** -1.962) * np.exp(-8.244000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][13] * EG[i][5])/(EG[i][15] * EG[i][4])))
        rr[i] = kf[i] * (C[i][13] * C[i][5]) - kb[i] * (C[i][15] * C[i][4])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,15] = wdot[:,15] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH3 + OH <=> CH2O + H2
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=3.502000000000000e+05 * (T[i] ** 1.441) * np.exp(3.244000000000000e+03 / (Rc * T[i]))
            kf[i]h=3.502000000000000e+05 * (T[i] ** 1.441) * np.exp(3.244000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=8.854000000000001e+05 * (T[i] ** 1.327) * np.exp(2.975000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.650000000000000e+07 * (T[i] ** 0.973) * np.exp(2.010000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.650000000000000e+07 * (T[i] ** 0.973) * np.exp(2.010000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.374000000000000e+09 * (T[i] ** 0.287) * np.exp(-2.800000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=5.374000000000000e+09 * (T[i] ** 0.287) * np.exp(-2.800000000000000e+02 / (Rc * T[i]))
            kf[i]h=9.494000000000000e+18 * (T[i] ** -2.199) * np.exp(-9.769000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=9.494000000000000e+18 * (T[i] ** -2.199) * np.exp(-9.769000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.494000000000000e+18 * (T[i] ** -2.199) * np.exp(-9.769000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][13] * EG[i][5])/(EG[i][21] * EG[i][0])))
        rr[i] = kf[i] * (C[i][13] * C[i][5]) - kb[i] * (C[i][21] * C[i][0])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH3 + OH <=> CH2OH + H
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=1.053650000000000e+10 * (T[i] ** 0.965) * np.exp(-3.210000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.053650000000000e+10 * (T[i] ** 0.965) * np.exp(-3.210000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=1.174550000000000e+10 * (T[i] ** 0.95) * np.exp(-3.250000000000000e+03 / (Rc * T[i]))
            kf[i]h=3.045900000000000e+10 * (T[i] ** 0.833) * np.exp(-3.570000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=3.045900000000000e+10 * (T[i] ** 0.833) * np.exp(-3.570000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.912500000000000e+12 * (T[i] ** 0.134) * np.exp(-5.640000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=9.912500000000000e+12 * (T[i] ** 0.134) * np.exp(-5.640000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.333500000000000e+14 * (T[i] ** -0.186) * np.exp(-8.600000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=2.333500000000000e+14 * (T[i] ** -0.186) * np.exp(-8.600000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.333500000000000e+14 * (T[i] ** -0.186) * np.exp(-8.600000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][13] * EG[i][5])/(EG[i][20] * EG[i][1])))
        rr[i] = kf[i] * (C[i][13] * C[i][5]) - kb[i] * (C[i][20] * C[i][1])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH3 + OH <=> CH3O + H
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=1.186000000000000e+09 * (T[i] ** 1.016) * np.exp(-1.194000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.186000000000000e+09 * (T[i] ** 1.016) * np.exp(-1.194000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=1.188000000000000e+09 * (T[i] ** 1.016) * np.exp(-1.194000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.230000000000000e+09 * (T[i] ** 1.011) * np.exp(-1.195000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.230000000000000e+09 * (T[i] ** 1.011) * np.exp(-1.195000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.798000000000000e+09 * (T[i] ** 0.965) * np.exp(-1.206000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=1.798000000000000e+09 * (T[i] ** 0.965) * np.exp(-1.206000000000000e+04 / (Rc * T[i]))
            kf[i]h=5.242000000000000e+10 * (T[i] ** 0.551) * np.exp(-1.307000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=5.242000000000000e+10 * (T[i] ** 0.551) * np.exp(-1.307000000000000e+04 / (Rc * T[i]))
            kf[i]h=5.242000000000000e+10 * (T[i] ** 0.551) * np.exp(-1.307000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][13] * EG[i][5])/(EG[i][19] * EG[i][1])))
        rr[i] = kf[i] * (C[i][13] * C[i][5]) - kb[i] * (C[i][19] * C[i][1])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH3 + OH <=> H2 + HCOH
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=8.674000000000000e+08 * (T[i] ** 0.787) * np.exp(3.046000000000000e+03 / (Rc * T[i]))
            kf[i]h=8.674000000000000e+08 * (T[i] ** 0.787) * np.exp(3.046000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=3.115000000000000e+09 * (T[i] ** 0.63) * np.exp(2.669000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.557000000000000e+11 * (T[i] ** 0.156) * np.exp(1.368000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.557000000000000e+11 * (T[i] ** 0.156) * np.exp(1.368000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.704000000000000e+21 * (T[i] ** -2.641) * np.exp(-6.412000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=1.704000000000000e+21 * (T[i] ** -2.641) * np.exp(-6.412000000000000e+03 / (Rc * T[i]))
            kf[i]h=7.250000000000000e+20 * (T[i] ** -2.402) * np.exp(-9.639000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=7.250000000000000e+20 * (T[i] ** -2.402) * np.exp(-9.639000000000000e+03 / (Rc * T[i]))
            kf[i]h=7.250000000000000e+20 * (T[i] ** -2.402) * np.exp(-9.639000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][13] * EG[i][5])/(EG[i][0] * EG[i][23])))
        rr[i] = kf[i] * (C[i][13] * C[i][5]) - kb[i] * (C[i][0] * C[i][23])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,23] = wdot[:,23] + rr[:]

    # Reaction CH3 + HO2 <=> CH3O + OH
    kf = 1.000000000000000e+12 * (T ** 0.269) * np.exp(6.875000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,7])/(EG[:,19] * EG[:,5])))
    rr = kf * (C[:,13] * C[:,7]) - kb * (C[:,19] * C[:,5])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH3O2 + O <=> CH3O + O2
    kf = 3.600000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,11] * EG[:,3])/(EG[:,19] * EG[:,2])))
    rr = kf * (C[:,11] * C[:,3]) - kb * (C[:,19] * C[:,2])
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction CH3O2 + H <=> CH3O + OH
    kf = 9.600000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,11] * EG[:,1])/(EG[:,19] * EG[:,5])))
    rr = kf * (C[:,11] * C[:,1]) - kb * (C[:,19] * C[:,5])
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH3O2 + OH <=> CH3OH + O2
    kf = 6.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,11] * EG[:,5])/(EG[:,18] * EG[:,2])))
    rr = kf * (C[:,11] * C[:,5]) - kb * (C[:,18] * C[:,2])
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,18] = wdot[:,18] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction CH3O2 + HO2 <=> CH3O2H + O2
    kf = 2.470000000000000e+11 * np.exp(1.570000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,11] * EG[:,7])/(EG[:,10] * EG[:,2])))
    rr = kf * (C[:,11] * C[:,7]) - kb * (C[:,10] * C[:,2])
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,10] = wdot[:,10] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction CH3O2 + H2O2 <=> CH3O2H + HO2
    kf = 2.410000000000000e+12 * np.exp(-9.936000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,11] * EG[:,6])/(EG[:,10] * EG[:,7])))
    rr = kf * (C[:,11] * C[:,6]) - kb * (C[:,10] * C[:,7])
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,10] = wdot[:,10] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction CH3 + CH3O2 <=> 2 CH3O
    kf = 5.849000000000000e+11 * (T ** 0.353) * np.exp(1.460000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,11])/(EG[:,19]**2.0)))
    rr = kf * (C[:,13] * C[:,11]) - kb * (C[:,19]**2.0)
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,19] = wdot[:,19] + 2.00 * rr[:]

    # Reaction 2 CH3O2 => CH2O + CH3OH + O2
    kf = 3.110000000000000e+14 * (T ** -1.61) * np.exp(1.051000000000000e+03 / (Rc * T))
    kb = 0
    rr = kf * (C[:,11]**2.0) - kb * (C[:,21] * C[:,18] * C[:,2])
    wdot[:,11] = wdot[:,11] - 2.00 * rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,18] = wdot[:,18] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction 2 CH3O2 => 2 CH3O + O2
    kf = 1.400000000000000e+16 * (T ** -1.61) * np.exp(-1.860000000000000e+03 / (Rc * T))
    kb = 0
    rr = kf * (C[:,11]**2.0) - kb * (C[:,19]**2.0 * C[:,2])
    wdot[:,11] = wdot[:,11] - 2.00 * rr[:]
    wdot[:,19] = wdot[:,19] + 2.00 * rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction CH3O2 + H2 <=> CH3O2H + H
    kf = 1.500000000000000e+14 * np.exp(-2.603000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,11] * EG[:,0])/(EG[:,10] * EG[:,1])))
    rr = kf * (C[:,11] * C[:,0]) - kb * (C[:,10] * C[:,1])
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,10] = wdot[:,10] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH3O2H (+M) <=> CH3O + OH (+M)
    M = ctot
    k0 = 3.802850000000000e+42 * (T ** -7.502) * np.exp(-4.675609700000000e+04 / (Rc * T))
    kinf = 4.049720000000000e+19 * (T ** -1.153) * np.exp(-4.425049000000000e+04 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.8375) * np.exp(-T/36562.0) + 0.8375 * np.exp(-T/498.8) + np.exp(-9990.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,10])/(EG[:,19] * EG[:,5]* pfac)))
    rr = kf * (C[:,10]) - kb * (C[:,19] * C[:,5])
    wdot[:,10] = wdot[:,10] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH3O + OH <=> CH2O + H2O
    kf = 3.619200000000000e+02 * (T ** 2.4976) * np.exp(-1.889448000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,19] * EG[:,5])/(EG[:,21] * EG[:,4])))
    rr = kf * (C[:,19] * C[:,5]) - kb * (C[:,21] * C[:,4])
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH3OH (+M) <=> CH3 + OH (+M)
    M = ctot
    k0 = 1.500000000000000e+43 * (T ** -6.995) * np.exp(-9.799220000000000e+04 / (Rc * T))
    kinf = 2.084000000000000e+18 * (T ** -0.615) * np.exp(-9.254060000000001e+04 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.7656) * np.exp(-T/59.510000000000005) + 0.7656 * np.exp(-T/1909.9999999999998) + np.exp(-9374.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,18])/(EG[:,13] * EG[:,5]* pfac)))
    rr = kf * (C[:,18]) - kb * (C[:,13] * C[:,5])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH3OH (+M) <=> CH2(S) + H2O (+M)
    M = ctot
    k0 = 1.430000000000000e+47 * (T ** -8.227) * np.exp(-9.941710000000001e+04 / (Rc * T))
    kinf = 3.121000000000000e+18 * (T ** -1.017) * np.exp(-9.171200000000000e+04 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.9922) * np.exp(-T/47310.0) + 0.9922 * np.exp(-T/942.9999999999999) + np.exp(-47110.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,18])/(EG[:,15] * EG[:,4]* pfac)))
    rr = kf * (C[:,18]) - kb * (C[:,15] * C[:,4])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,15] = wdot[:,15] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH3OH (+M) <=> CH2OH + H (+M)
    M = ctot
    k0 = 3.390000000000000e+42 * (T ** -7.244) * np.exp(-1.052303000000000e+05 / (Rc * T))
    kinf = 7.896000000000000e-03 * (T ** 5.038) * np.exp(-8.446739999999999e+04 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.6843) * np.exp(-T/41493.0) + 0.6843 * np.exp(-T/37049.0) + np.exp(-3980.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,18])/(EG[:,20] * EG[:,1]* pfac)))
    rr = kf * (C[:,18]) - kb * (C[:,20] * C[:,1])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH3OH + H <=> CH2OH + H2
    kf = 1.350000000000000e+03 * (T ** 3.2) * np.exp(-3.488000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,18] * EG[:,1])/(EG[:,20] * EG[:,0])))
    rr = kf * (C[:,18] * C[:,1]) - kb * (C[:,20] * C[:,0])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH3OH + H <=> CH3O + H2
    kf = 4.100000000000000e+04 * (T ** 2.658) * np.exp(-9.221000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,18] * EG[:,1])/(EG[:,19] * EG[:,0])))
    rr = kf * (C[:,18] * C[:,1]) - kb * (C[:,19] * C[:,0])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH3OH + O <=> CH3O + OH
    kf = 1.700000000000000e+12 * np.exp(-2.285000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,18] * EG[:,3])/(EG[:,19] * EG[:,5])))
    rr = kf * (C[:,18] * C[:,3]) - kb * (C[:,19] * C[:,5])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH3OH + O <=> CH2OH + OH
    kf = 3.880000000000000e+05 * (T ** 2.5) * np.exp(-3.080000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,18] * EG[:,3])/(EG[:,20] * EG[:,5])))
    rr = kf * (C[:,18] * C[:,3]) - kb * (C[:,20] * C[:,5])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH3OH + OH <=> CH3O + H2O
    kf = 1.500000000000000e+02 * (T ** 3.03) * np.exp(7.630000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,18] * EG[:,5])/(EG[:,19] * EG[:,4])))
    rr = kf * (C[:,18] * C[:,5]) - kb * (C[:,19] * C[:,4])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH3OH + OH <=> CH2OH + H2O
    kf = 3.080000000000000e+04 * (T ** 2.65) * np.exp(8.067000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,18] * EG[:,5])/(EG[:,20] * EG[:,4])))
    rr = kf * (C[:,18] * C[:,5]) - kb * (C[:,20] * C[:,4])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH3O + HO2 <=> CH3OH + O2
    kf = 1.400000000000000e+11 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,19] * EG[:,7])/(EG[:,18] * EG[:,2])))
    rr = kf * (C[:,19] * C[:,7]) - kb * (C[:,18] * C[:,2])
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,18] = wdot[:,18] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction CH3OH + O2 <=> CH2OH + HO2
    kf = 3.580000000000000e+05 * (T ** 2.27) * np.exp(-4.276450000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,18] * EG[:,2])/(EG[:,20] * EG[:,7])))
    rr = kf * (C[:,18] * C[:,2]) - kb * (C[:,20] * C[:,7])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction CH3OH + HO2 <=> CH3O + H2O2
    kf = 1.220000000000000e+12 * np.exp(-2.007070000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,18] * EG[:,7])/(EG[:,19] * EG[:,6])))
    rr = kf * (C[:,18] * C[:,7]) - kb * (C[:,19] * C[:,6])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    # Reaction CH3OH + HO2 <=> CH2OH + H2O2
    kf = 3.260000000000000e+13 * np.exp(-1.878220000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,18] * EG[:,7])/(EG[:,20] * EG[:,6])))
    rr = kf * (C[:,18] * C[:,7]) - kb * (C[:,20] * C[:,6])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    # Reaction CH3 + CH3OH <=> CH2OH + CH4
    kf = 2.130000000000000e-01 * (T ** 3.953) * np.exp(-7.055100000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,18])/(EG[:,20] * EG[:,12])))
    rr = kf * (C[:,13] * C[:,18]) - kb * (C[:,20] * C[:,12])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]

    # Reaction CH3 + CH3OH <=> CH3O + CH4
    kf = 3.220000000000000e+03 * (T ** 2.425) * np.exp(-8.579500000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,18])/(EG[:,19] * EG[:,12])))
    rr = kf * (C[:,13] * C[:,18]) - kb * (C[:,19] * C[:,12])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]

    # Reaction CH3OH + HCO <=> CH2O + CH2OH
    kf = 9.630000000000000e+03 * (T ** 2.9) * np.exp(-1.311000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,18] * EG[:,22])/(EG[:,21] * EG[:,20])))
    rr = kf * (C[:,18] * C[:,22]) - kb * (C[:,21] * C[:,20])
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]

    # Reaction CH3O + CH3OH <=> CH2OH + CH3OH
    kf = 3.000000000000000e+11 * np.exp(-4.074000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,19] * EG[:,18])/(EG[:,20] * EG[:,18])))
    rr = kf * (C[:,19] * C[:,18]) - kb * (C[:,20] * C[:,18])
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,18] = wdot[:,18] + rr[:]

    # Reaction CH3O2 + CH3OH <=> CH2OH + CH3O2H
    kf = 1.810000000000000e+12 * np.exp(-1.371000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,11] * EG[:,18])/(EG[:,20] * EG[:,10])))
    rr = kf * (C[:,11] * C[:,18]) - kb * (C[:,20] * C[:,10])
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,18] = wdot[:,18] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,10] = wdot[:,10] + rr[:]

    # Reaction CH2OH + O2 <=> CH2O + HO2
    kf = 7.200000000000000e+13 * np.exp(-3.736000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,20] * EG[:,2])/(EG[:,21] * EG[:,7])))
    rr = kf * (C[:,20] * C[:,2]) - kb * (C[:,21] * C[:,7])
    wdot[:,20] = wdot[:,20] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction CH2OH + O2 <=> CH2O + HO2
    kf = 2.900000000000000e+16 * (T ** -1.5) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,20] * EG[:,2])/(EG[:,21] * EG[:,7])))
    rr = kf * (C[:,20] * C[:,2]) - kb * (C[:,21] * C[:,7])
    wdot[:,20] = wdot[:,20] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction CH2OH + H <=> CH2O + H2
    kf = 4.000000000000000e+06 * (T ** 1.86) * np.exp(-1.470000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,20] * EG[:,1])/(EG[:,21] * EG[:,0])))
    rr = kf * (C[:,20] * C[:,1]) - kb * (C[:,21] * C[:,0])
    wdot[:,20] = wdot[:,20] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH2OH + HO2 <=> CH2O + H2O2
    kf = 1.200000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,20] * EG[:,7])/(EG[:,21] * EG[:,6])))
    rr = kf * (C[:,20] * C[:,7]) - kb * (C[:,21] * C[:,6])
    wdot[:,20] = wdot[:,20] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    # Reaction CH2OH + OH <=> CH2O + H2O
    kf = 2.400000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,20] * EG[:,5])/(EG[:,21] * EG[:,4])))
    rr = kf * (C[:,20] * C[:,5]) - kb * (C[:,21] * C[:,4])
    wdot[:,20] = wdot[:,20] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH2OH + O <=> CH2O + OH
    kf = 4.200000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,20] * EG[:,3])/(EG[:,21] * EG[:,5])))
    rr = kf * (C[:,20] * C[:,3]) - kb * (C[:,21] * C[:,5])
    wdot[:,20] = wdot[:,20] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH3O + O2 <=> CH2O + HO2
    kf = 2.170000000000000e+10 * np.exp(-1.748700000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,19] * EG[:,2])/(EG[:,21] * EG[:,7])))
    rr = kf * (C[:,19] * C[:,2]) - kb * (C[:,21] * C[:,7])
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction CH3O + H <=> CH2O + H2
    kf = 2.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,19] * EG[:,1])/(EG[:,21] * EG[:,0])))
    rr = kf * (C[:,19] * C[:,1]) - kb * (C[:,21] * C[:,0])
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction 2 CH3O <=> CH2O + CH3OH
    kf = 6.030000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,19]**(2.0))/(EG[:,21] * EG[:,18])))
    rr = kf * (C[:,19]**2.0) - kb * (C[:,21] * C[:,18])
    wdot[:,19] = wdot[:,19] - 2.00 * rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,18] = wdot[:,18] + rr[:]

    # Reaction HCOH + O2 => CO2 + H + OH
    kf = 5.000000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = 0
    rr = kf * (C[:,23] * C[:,2]) - kb * (C[:,9] * C[:,1] * C[:,5])
    wdot[:,23] = wdot[:,23] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction HCOH + O2 <=> CO2 + H2O
    kf = 3.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,23] * EG[:,2])/(EG[:,9] * EG[:,4])))
    rr = kf * (C[:,23] * C[:,2]) - kb * (C[:,9] * C[:,4])
    wdot[:,23] = wdot[:,23] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction HCOH + O => CO2 + 2 H
    kf = 5.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = 0
    rr = kf * (C[:,23] * C[:,3]) - kb * (C[:,9] * C[:,1]**2.0)
    wdot[:,23] = wdot[:,23] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,1] = wdot[:,1] + 2.00 * rr[:]

    # Reaction HCOH + O => CO + H + OH
    kf = 3.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = 0
    rr = kf * (C[:,23] * C[:,3]) - kb * (C[:,8] * C[:,1] * C[:,5])
    wdot[:,23] = wdot[:,23] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H + HCOH <=> CH2O + H
    kf = 2.000000000000000e+14 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,23])/(EG[:,21] * EG[:,1])))
    rr = kf * (C[:,1] * C[:,23]) - kb * (C[:,21] * C[:,1])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,23] = wdot[:,23] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction HCOH + OH <=> H2O + HCO
    kf = 2.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,23] * EG[:,5])/(EG[:,4] * EG[:,22])))
    rr = kf * (C[:,23] * C[:,5]) - kb * (C[:,4] * C[:,22])
    wdot[:,23] = wdot[:,23] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction H + HCO (+M) <=> CH2O (+M)
    M = ctot
    k0 = 1.350000000000000e+24 * (T ** -2.57) * np.exp(-1.425000000000000e+03 / (Rc * T))
    kinf = 1.090000000000000e+12 * (T ** 0.48) * np.exp(2.600000000000000e+02 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.7824) * np.exp(-T/271.0) + 0.7824 * np.exp(-T/2755.0) + np.exp(-6570.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,1] * EG[:,22])/(EG[:,21]* pfac**-1.0)))
    rr = kf * (C[:,1] * C[:,22]) - kb * (C[:,21])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]

    # Reaction CO + H2 (+M) <=> CH2O (+M)
    M = ctot
    k0 = 5.070000000000000e+27 * (T ** -3.42) * np.exp(-8.434800000000000e+04 / (Rc * T))
    kinf = 4.300000000000000e+07 * (T ** 1.5) * np.exp(-7.960000000000000e+04 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.932) * np.exp(-T/197.00000000000003) + 0.932 * np.exp(-T/1540.0) + np.exp(-10300.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,8] * EG[:,0])/(EG[:,21]* pfac**-1.0)))
    rr = kf * (C[:,8] * C[:,0]) - kb * (C[:,21])
    wdot[:,8] = wdot[:,8] - rr[:]
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]

    # Reaction CH2O + O2 <=> HCO + HO2
    kf = 8.070000000000000e+15 * np.exp(-5.342000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,21] * EG[:,2])/(EG[:,22] * EG[:,7])))
    rr = kf * (C[:,21] * C[:,2]) - kb * (C[:,22] * C[:,7])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction CH2O + O <=> HCO + OH
    kf = 6.260000000000000e+09 * (T ** 1.15) * np.exp(-2.260000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,21] * EG[:,3])/(EG[:,22] * EG[:,5])))
    rr = kf * (C[:,21] * C[:,3]) - kb * (C[:,22] * C[:,5])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH2O + H <=> H2 + HCO
    kf = 1.069115400000000e+05 * (T ** 2.73093) * np.exp(-1.887140000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,21] * EG[:,1])/(EG[:,0] * EG[:,22])))
    rr = kf * (C[:,21] * C[:,1]) - kb * (C[:,0] * C[:,22])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction CH2O + OH <=> H2O + HCO
    kf = 2.185000000000000e+09 * (T ** 1.1782) * np.exp(5.760199999999999e+02 / (Rc * T))
    kb = kf * (((EG[:,21] * EG[:,5])/(EG[:,4] * EG[:,22])))
    rr = kf * (C[:,21] * C[:,5]) - kb * (C[:,4] * C[:,22])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction CH2O + HO2 <=> H2O2 + HCO
    kf = 7.100000000000000e-03 * (T ** 4.517) * np.exp(-6.580000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,21] * EG[:,7])/(EG[:,6] * EG[:,22])))
    rr = kf * (C[:,21] * C[:,7]) - kb * (C[:,6] * C[:,22])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction CH2O + CH3 <=> CH4 + HCO
    kf = 2.930000000000000e-02 * (T ** 4.3) * np.exp(-2.831000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,21] * EG[:,13])/(EG[:,12] * EG[:,22])))
    rr = kf * (C[:,21] * C[:,13]) - kb * (C[:,12] * C[:,22])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction CH2O + CH3O <=> CH3OH + HCO
    kf = 6.620000000000000e+11 * np.exp(-2.294000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,21] * EG[:,19])/(EG[:,18] * EG[:,22])))
    rr = kf * (C[:,21] * C[:,19]) - kb * (C[:,18] * C[:,22])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,18] = wdot[:,18] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction CH2O + CH3O2 <=> CH3O2H + HCO
    kf = 1.990000000000000e+12 * np.exp(-1.166000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,21] * EG[:,11])/(EG[:,10] * EG[:,22])))
    rr = kf * (C[:,21] * C[:,11]) - kb * (C[:,10] * C[:,22])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,10] = wdot[:,10] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction CH2O + OH => CO + H + H2O
    kf = 2.565000000000000e+11 * (T ** 0.69304) * np.exp(-9.368700000000001e+03 / (Rc * T))
    kb = 0
    rr = kf * (C[:,21] * C[:,5]) - kb * (C[:,8] * C[:,1] * C[:,4])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH2O + H => CO + H2 + H
    kf = 1.940000000000000e+07 * (T ** 2.192) * np.exp(-1.174029000000000e+04 / (Rc * T))
    kb = 0
    rr = kf * (C[:,21] * C[:,1]) - kb * (C[:,8] * C[:,0] * C[:,1])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction HCO + M <=> CO + H + M
    kf = 4.750000000000000e+11 * (T ** 0.66) * np.exp(-1.487000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,22])/(EG[:,8] * EG[:,1]* pfac)))
    rr = (ctot +2.000000000000000e+00*C[:,24]\
    +1.000000000000000e+00*C[:,12]\
    +5.000000000000000e-01*C[:,8]\
    +1.000000000000000e+00*C[:,9]\
    +1.000000000000000e+00*C[:,0]\
    +5.000000000000000e+00*C[:,4]\
    )*(kf * (C[:,22]) - kb * (C[:,8] * C[:,1]))
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction HCO + O2 <=> CO + HO2
    kf = 1.200000000000000e+10 * (T ** 0.807) * np.exp(7.270000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,22] * EG[:,2])/(EG[:,8] * EG[:,7])))
    rr = kf * (C[:,22] * C[:,2]) - kb * (C[:,8] * C[:,7])
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction HCO + O <=> CO + OH
    kf = 3.020000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,22] * EG[:,3])/(EG[:,8] * EG[:,5])))
    rr = kf * (C[:,22] * C[:,3]) - kb * (C[:,8] * C[:,5])
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H + HCO <=> CO + H2
    kf = 9.130000000000000e+12 * (T ** 0.41) * np.exp(2.155715000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,22])/(EG[:,8] * EG[:,0])))
    rr = kf * (C[:,1] * C[:,22]) - kb * (C[:,8] * C[:,0])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction HCO + OH <=> CO + H2O
    kf = 3.011000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,22] * EG[:,5])/(EG[:,8] * EG[:,4])))
    rr = kf * (C[:,22] * C[:,5]) - kb * (C[:,8] * C[:,4])
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH3 + HCO <=> CH4 + CO
    kf = 2.650000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,22])/(EG[:,12] * EG[:,8])))
    rr = kf * (C[:,13] * C[:,22]) - kb * (C[:,12] * C[:,8])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction 2 HCO <=> CH2O + CO
    kf = 2.700000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,22]**(2.0))/(EG[:,21] * EG[:,8])))
    rr = kf * (C[:,22]**2.0) - kb * (C[:,21] * C[:,8])
    wdot[:,22] = wdot[:,22] - 2.00 * rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction HCO + O <=> CO2 + H
    kf = 3.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,22] * EG[:,3])/(EG[:,9] * EG[:,1])))
    rr = kf * (C[:,22] * C[:,3]) - kb * (C[:,9] * C[:,1])
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction HCO + HO2 => CO2 + H + OH
    kf = 3.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = 0
    rr = kf * (C[:,22] * C[:,7]) - kb * (C[:,9] * C[:,1] * C[:,5])
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH2OH (+M) <=> CH2O + H (+M)
    M = ctot + 2.000000000000000e+00*C[:,24] + 1.500000000000000e+00*C[:,21] + 2.000000000000000e+00*C[:,18] + 1.000000000000000e+00*C[:,12] + 5.000000000000000e-01*C[:,8] + 1.000000000000000e+00*C[:,9] + 1.000000000000000e+00*C[:,0] + 5.000000000000000e+00*C[:,4]
    k0 = 3.500000000000000e+21 * (T ** -1.99) * np.exp(-2.400000000000000e+04 / (Rc * T))
    kinf = 7.370000000000000e+10 * (T ** 0.811) * np.exp(-3.958500000000000e+04 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.844) * np.exp(-T/900.0) + 0.844 * np.exp(-T/1.0) + np.exp(-3315.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,20])/(EG[:,21] * EG[:,1]* pfac)))
    rr = kf * (C[:,20]) - kb * (C[:,21] * C[:,1])
    wdot[:,20] = wdot[:,20] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH3O (+M) <=> CH2O + H (+M)
    M = ctot + 2.000000000000000e+00*C[:,24] + 2.000000000000000e+00*C[:,18] + 1.000000000000000e+00*C[:,12] + 5.000000000000000e-01*C[:,8] + 1.000000000000000e+00*C[:,9] + 1.000000000000000e+00*C[:,0] + 5.000000000000000e+00*C[:,4]
    k0 = 6.022000000000000e+16 * (T ** -0.547) * np.exp(-1.802390000000000e+04 / (Rc * T))
    kinf = 1.130000000000000e+10 * (T ** 1.21) * np.exp(-2.408490000000000e+04 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.341) * np.exp(-T/28.0) + 0.341 * np.exp(-T/1000.0) + np.exp(-2339.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,19])/(EG[:,21] * EG[:,1]* pfac)))
    rr = kf * (C[:,19]) - kb * (C[:,21] * C[:,1])
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction 2 CH3 (+M) <=> C2H6 (+M)
    M = ctot + 1.000000000000000e+00*C[:,8] + 2.000000000000000e+00*C[:,9] + 4.000000000000000e+00*C[:,4]
    k0 = 8.054000000000001e+31 * (T ** -3.75) * np.exp(-9.815999999999999e+02 / (Rc * T))
    kinf = 2.277000000000000e+15 * (T ** -0.69) * np.exp(-1.748999999999999e+02 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.0) * np.exp(-T/570.0) + 0.0 * np.exp(-T/1.0000000000000002e+30) + np.exp(-1e+30/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,13]**(2.0))/(EG[:,24]* pfac**-1.0)))
    rr = kf * (C[:,13]**2.0) - kb * (C[:,24])
    wdot[:,13] = wdot[:,13] - 2.00 * rr[:]
    wdot[:,24] = wdot[:,24] + rr[:]

    # Reaction C2H5 + H (+M) <=> C2H6 (+M)
    M = ctot + 2.000000000000000e+00*C[:,24] + 1.000000000000000e+00*C[:,12] + 5.000000000000000e-01*C[:,8] + 1.000000000000000e+00*C[:,9] + 1.000000000000000e+00*C[:,0] + 5.000000000000000e+00*C[:,4]
    k0 = 1.990000000000000e+41 * (T ** -7.08) * np.exp(-6.685000000000000e+03 / (Rc * T))
    kinf = 5.210000000000000e+17 * (T ** -0.99) * np.exp(-1.580000000000000e+03 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.842) * np.exp(-T/125.0) + 0.842 * np.exp(-T/2219.0) + np.exp(-6882.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,25] * EG[:,1])/(EG[:,24]* pfac**-1.0)))
    rr = kf * (C[:,25] * C[:,1]) - kb * (C[:,24])
    wdot[:,25] = wdot[:,25] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,24] = wdot[:,24] + rr[:]

    # Reaction 2 CH3 <=> C2H5 + H
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=4.740000000000000e+12 * (T[i] ** 0.105) * np.exp(-1.066430000000000e+04 / (Rc * T[i]))
            kf[i]h=4.740000000000000e+12 * (T[i] ** 0.105) * np.exp(-1.066430000000000e+04 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=2.570000000000000e+13 * (T[i] ** -0.096) * np.exp(-1.140610000000000e+04 / (Rc * T[i]))
            kf[i]h=3.100000000000000e+14 * (T[i] ** -0.362) * np.exp(-1.337250000000000e+04 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=3.100000000000000e+14 * (T[i] ** -0.362) * np.exp(-1.337250000000000e+04 / (Rc * T[i]))
            kf[i]h=2.150000000000000e+10 * (T[i] ** 0.885) * np.exp(-1.353250000000000e+04 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=2.150000000000000e+10 * (T[i] ** 0.885) * np.exp(-1.353250000000000e+04 / (Rc * T[i]))
            kf[i]h=1.032000000000000e+02 * (T[i] ** 3.23) * np.exp(-1.123610000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=1.032000000000000e+02 * (T[i] ** 3.23) * np.exp(-1.123610000000000e+04 / (Rc * T[i]))
            kf[i]h=1.032000000000000e+02 * (T[i] ** 3.23) * np.exp(-1.123610000000000e+04 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][13]**(2.0))/(EG[i][25] * EG[i][1])))
        rr[i] = kf[i] * (C[i][13]**2.0) - kb[i] * (C[i][25] * C[i][1])
    wdot[:,13] = wdot[:,13] - 2.00 * rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction C2H6 + O2 <=> C2H5 + HO2
    kf = 6.030000000000000e+13 * np.exp(-5.187000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,2])/(EG[:,25] * EG[:,7])))
    rr = kf * (C[:,24] * C[:,2]) - kb * (C[:,25] * C[:,7])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction C2H6 + O <=> C2H5 + OH
    kf = 3.550000000000000e+06 * (T ** 2.4) * np.exp(-5.830000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,3])/(EG[:,25] * EG[:,5])))
    rr = kf * (C[:,24] * C[:,3]) - kb * (C[:,25] * C[:,5])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction C2H6 + H <=> C2H5 + H2
    kf = 7.350000000000001e+03 * (T ** 3.1) * np.exp(-5.340000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,1])/(EG[:,25] * EG[:,0])))
    rr = kf * (C[:,24] * C[:,1]) - kb * (C[:,25] * C[:,0])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction C2H6 + H <=> C2H5 + H2
    kf = 3.260000000000000e+14 * np.exp(-1.370000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,1])/(EG[:,25] * EG[:,0])))
    rr = kf * (C[:,24] * C[:,1]) - kb * (C[:,25] * C[:,0])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction C2H6 + OH <=> C2H5 + H2O
    kf = 1.613900000000000e+06 * (T ** 2.224) * np.exp(-7.412300000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,5])/(EG[:,25] * EG[:,4])))
    rr = kf * (C[:,24] * C[:,5]) - kb * (C[:,25] * C[:,4])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction C2H6 + HO2 <=> C2H5 + H2O2
    kf = 2.770000000000000e+01 * (T ** 3.59) * np.exp(-1.560000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,7])/(EG[:,25] * EG[:,6])))
    rr = kf * (C[:,24] * C[:,7]) - kb * (C[:,25] * C[:,6])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    # Reaction C2H6 + CH <=> C2H5 + CH2
    kf = 1.100000000000000e+14 * np.exp(2.600000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,17])/(EG[:,25] * EG[:,14])))
    rr = kf * (C[:,24] * C[:,17]) - kb * (C[:,25] * C[:,14])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]

    # Reaction C2H6 + CH2(S) <=> C2H5 + CH3
    kf = 1.200000000000000e+14 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,15])/(EG[:,25] * EG[:,13])))
    rr = kf * (C[:,24] * C[:,15]) - kb * (C[:,25] * C[:,13])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]

    # Reaction C2H6 + CH3 <=> C2H5 + CH4
    kf = 3.450000000000000e+01 * (T ** 3.44) * np.exp(-1.039100000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,13])/(EG[:,25] * EG[:,12])))
    rr = kf * (C[:,24] * C[:,13]) - kb * (C[:,25] * C[:,12])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]

    # Reaction C2H6 + CH3O <=> C2H5 + CH3OH
    kf = 2.410000000000000e+11 * np.exp(-7.090000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,19])/(EG[:,25] * EG[:,18])))
    rr = kf * (C[:,24] * C[:,19]) - kb * (C[:,25] * C[:,18])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,18] = wdot[:,18] + rr[:]

    # Reaction C2H6 + CH3O2 <=> C2H5 + CH3O2H
    kf = 4.040000000000000e+01 * (T ** 3.55) * np.exp(-1.690000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,11])/(EG[:,25] * EG[:,10])))
    rr = kf * (C[:,24] * C[:,11]) - kb * (C[:,25] * C[:,10])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,10] = wdot[:,10] + rr[:]

    # Reaction C2H4 + H (+M) <=> C2H5 (+M)
    M = ctot + 2.000000000000000e+00*C[:,24] + 1.000000000000000e+00*C[:,12] + 5.000000000000000e-01*C[:,8] + 1.000000000000000e+00*C[:,9] + 1.000000000000000e+00*C[:,0] + 5.000000000000000e+00*C[:,4]
    k0 = 1.419000000000000e+39 * (T ** -6.642) * np.exp(-5.769000000000000e+03 / (Rc * T))
    kinf = 9.569000000000001e+08 * (T ** 1.463) * np.exp(-1.355000000000000e+03 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1--0.569) * np.exp(-T/299.0) + -0.569 * np.exp(-T/-9147.0) + np.exp(-152.4/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,26] * EG[:,1])/(EG[:,25]* pfac**-1.0)))
    rr = kf * (C[:,26] * C[:,1]) - kb * (C[:,25])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]

    # Reaction C2H5 + O <=> C2H4 + OH
    kf = 3.170000000000000e+12 * (T ** 0.03) * np.exp(3.940000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,25] * EG[:,3])/(EG[:,26] * EG[:,5])))
    rr = kf * (C[:,25] * C[:,3]) - kb * (C[:,26] * C[:,5])
    wdot[:,25] = wdot[:,25] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,26] = wdot[:,26] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction C2H5 + OH <=> C2H4 + H2O
    if P < 1.013250000000000e+03:
    for i in range(veclen):
            kf[i]l=1.292600000000000e+19 * (T[i] ** -1.96) * np.exp(-2.727000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.292600000000000e+19 * (T[i] ** -1.96) * np.exp(-2.727000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=6.920918265508418e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=1.218400000000000e+19 * (T[i] ** -1.9533) * np.exp(-2.388000000000000e+02 / (Rc * T[i]))
            kf[i]h=4.105200000000000e+19 * (T[i] ** -2.1007) * np.exp(-6.254000000000000e+02 / (Rc * T[i]))
            logP[i]l=9.223503358502464e+00
            logP[i]h=1.152608845149651e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=4.105200000000000e+19 * (T[i] ** -2.1007) * np.exp(-6.254000000000000e+02 / (Rc * T[i]))
            kf[i]h=7.940600000000000e+22 * (T[i] ** -2.9892) * np.exp(-3.862600000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=7.940600000000000e+22 * (T[i] ** -2.9892) * np.exp(-3.862600000000000e+03 / (Rc * T[i]))
            kf[i]h=2.792600000000000e+24 * (T[i] ** -3.3287) * np.exp(-7.748799999999999e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=2.792600000000000e+24 * (T[i] ** -3.3287) * np.exp(-7.748799999999999e+03 / (Rc * T[i]))
            kf[i]h=4.696100000000000e+18 * (T[i] ** -1.5805) * np.exp(-7.999200000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=4.696100000000000e+18 * (T[i] ** -1.5805) * np.exp(-7.999200000000000e+03 / (Rc * T[i]))
            kf[i]h=4.696100000000000e+18 * (T[i] ** -1.5805) * np.exp(-7.999200000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][25] * EG[i][5])/(EG[i][26] * EG[i][4])))
        rr[i] = kf[i] * (C[i][25] * C[i][5]) - kb[i] * (C[i][26] * C[i][4])
    wdot[:,25] = wdot[:,25] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,26] = wdot[:,26] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction C2H5 + OH <=> CH2OH + CH3
    if P < 1.013250000000000e+03:
    for i in range(veclen):
            kf[i]l=9.201700000000000e+17 * (T[i] ** -1.2994) * np.exp(-2.504600000000000e+03 / (Rc * T[i]))
            kf[i]h=9.201700000000000e+17 * (T[i] ** -1.2994) * np.exp(-2.504600000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=6.920918265508418e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=1.098100000000000e+18 * (T[i] ** -1.3206) * np.exp(-2.569400000000000e+03 / (Rc * T[i]))
            kf[i]h=5.736700000000000e+18 * (T[i] ** -1.5182) * np.exp(-3.184800000000000e+03 / (Rc * T[i]))
            logP[i]l=9.223503358502464e+00
            logP[i]h=1.152608845149651e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=5.736700000000000e+18 * (T[i] ** -1.5182) * np.exp(-3.184800000000000e+03 / (Rc * T[i]))
            kf[i]h=6.527800000000000e+21 * (T[i] ** -2.3515) * np.exp(-6.022700000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=6.527800000000000e+21 * (T[i] ** -2.3515) * np.exp(-6.022700000000000e+03 / (Rc * T[i]))
            kf[i]h=1.879900000000000e+25 * (T[i] ** -3.2495) * np.exp(-1.057620000000000e+04 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=1.879900000000000e+25 * (T[i] ** -3.2495) * np.exp(-1.057620000000000e+04 / (Rc * T[i]))
            kf[i]h=6.504400000000001e+22 * (T[i] ** -2.4427) * np.exp(-1.264660000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=6.504400000000001e+22 * (T[i] ** -2.4427) * np.exp(-1.264660000000000e+04 / (Rc * T[i]))
            kf[i]h=6.504400000000001e+22 * (T[i] ** -2.4427) * np.exp(-1.264660000000000e+04 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][25] * EG[i][5])/(EG[i][20] * EG[i][13])))
        rr[i] = kf[i] * (C[i][25] * C[i][5]) - kb[i] * (C[i][20] * C[i][13])
    wdot[:,25] = wdot[:,25] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]

    # Reaction C2H5 + HO2 <=> C2H4 + H2O2
    kf = 6.200000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,25] * EG[:,7])/(EG[:,26] * EG[:,6])))
    rr = kf * (C[:,25] * C[:,7]) - kb * (C[:,26] * C[:,6])
    wdot[:,25] = wdot[:,25] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,26] = wdot[:,26] + rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    # Reaction C2H5 + O2 <=> C2H4 + HO2
    if P < 1.013250000000000e+02:
    for i in range(veclen):
            kf[i]l=9.100000000000000e+00 * (T[i] ** 2.87) * np.exp(5.099000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.100000000000000e+00 * (T[i] ** 2.87) * np.exp(5.099000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=4.618333172514372e+00
    elif P < 1.013250000000000e+03:
    for i in range(veclen):
            kf[i]l=1.180000000000000e+01 * (T[i] ** 2.84) * np.exp(5.029000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.820000000000000e+01 * (T[i] ** 2.73) * np.exp(4.780000000000000e+03 / (Rc * T[i]))
            logP[i]l=5.716945461182481e+00
            logP[i]h=6.920918265508418e+00
    elif P < 3.039750000000001e+03:
    for i in range(veclen):
            kf[i]l=2.820000000000000e+01 * (T[i] ** 2.73) * np.exp(4.780000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.100000000000000e+02 * (T[i] ** 2.56) * np.exp(4.380000000000000e+03 / (Rc * T[i]))
            logP[i]l=6.920918265508418e+00
            logP[i]h=8.019530554176528e+00
    elif P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=1.100000000000000e+02 * (T[i] ** 2.56) * np.exp(4.380000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.570000000000001e+02 * (T[i] ** 2.3) * np.exp(3.735000000000000e+03 / (Rc * T[i]))
            logP[i]l=8.019530554176528e+00
            logP[i]h=9.223503358502464e+00
    elif P < 3.039750000000002e+04:
    for i in range(veclen):
            kf[i]l=9.570000000000001e+02 * (T[i] ** 2.3) * np.exp(3.735000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.320000000000000e+04 * (T[i] ** 1.98) * np.exp(2.933000000000000e+03 / (Rc * T[i]))
            logP[i]l=9.223503358502464e+00
            logP[i]h=1.032211564717057e+01
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=1.320000000000000e+04 * (T[i] ** 1.98) * np.exp(2.933000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.900000000000001e+05 * (T[i] ** 1.54) * np.exp(1.790000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.032211564717057e+01
            logP[i]h=1.152608845149651e+01
    elif P < 3.039750000000000e+05:
    for i in range(veclen):
            kf[i]l=4.900000000000001e+05 * (T[i] ** 1.54) * np.exp(1.790000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.410000000000000e+07 * (T[i] ** 1.07) * np.exp(4.977000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.262470074016462e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=2.410000000000000e+07 * (T[i] ** 1.07) * np.exp(4.977000000000000e+02 / (Rc * T[i]))
            kf[i]h=2.470000000000000e+09 * (T[i] ** 0.51) * np.exp(-1.157000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.262470074016462e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.039749999999998e+06:
    for i in range(veclen):
            kf[i]l=2.470000000000000e+09 * (T[i] ** 0.51) * np.exp(-1.157000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.360000000000000e+11 * (T[i] ** 0.04) * np.exp(-2.789000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.492728583315866e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.360000000000000e+11 * (T[i] ** 0.04) * np.exp(-2.789000000000000e+03 / (Rc * T[i]))
            kf[i]h=3.130000000000000e+12 * (T[i] ** -0.31) * np.exp(-4.501000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.492728583315866e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.039750000000001e+07:
    for i in range(veclen):
            kf[i]l=3.130000000000000e+12 * (T[i] ** -0.31) * np.exp(-4.501000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.290000000000000e+12 * (T[i] ** -0.33) * np.exp(-5.728000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.722987092615271e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=5.290000000000000e+12 * (T[i] ** -0.33) * np.exp(-5.728000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.890000000000000e+11 * (T[i] ** 0.14) * np.exp(-6.373000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.722987092615271e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=1.890000000000000e+11 * (T[i] ** 0.14) * np.exp(-6.373000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.890000000000000e+11 * (T[i] ** 0.14) * np.exp(-6.373000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][25] * EG[i][2])/(EG[i][26] * EG[i][7])))
        rr[i] = kf[i] * (C[i][25] * C[i][2]) - kb[i] * (C[i][26] * C[i][7])
    wdot[:,25] = wdot[:,25] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,26] = wdot[:,26] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction C2H3 + H <=> C2H4
    if P < 1.013250000000000e+03:
    for i in range(veclen):
            kf[i]l=1.193500000000000e+26 * (T[i] ** -5.021) * np.exp(-3.089757000000000e+03 / (Rc * T[i]))
            kf[i]h=1.193500000000000e+26 * (T[i] ** -5.021) * np.exp(-3.089757000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=6.920918265508418e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=1.053500000000000e+27 * (T[i] ** -5.0) * np.exp(-3.073364000000000e+03 / (Rc * T[i]))
            kf[i]h=2.107000000000000e+28 * (T[i] ** -5.085) * np.exp(-3.485772000000000e+03 / (Rc * T[i]))
            logP[i]l=9.223503358502464e+00
            logP[i]h=1.152608845149651e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=2.107000000000000e+28 * (T[i] ** -5.085) * np.exp(-3.485772000000000e+03 / (Rc * T[i]))
            kf[i]h=8.820000000000001e+29 * (T[i] ** -5.236) * np.exp(-5.080164000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=8.820000000000001e+29 * (T[i] ** -5.236) * np.exp(-5.080164000000000e+03 / (Rc * T[i]))
            kf[i]h=3.623900000000000e+22 * (T[i] ** -2.791) * np.exp(-2.637005000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=3.623900000000000e+22 * (T[i] ** -2.791) * np.exp(-2.637005000000000e+03 / (Rc * T[i]))
            kf[i]h=1.249500000000000e+19 * (T[i] ** -1.592) * np.exp(-1.961089000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=1.249500000000000e+19 * (T[i] ** -1.592) * np.exp(-1.961089000000000e+03 / (Rc * T[i]))
            kf[i]h=1.249500000000000e+19 * (T[i] ** -1.592) * np.exp(-1.961089000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][27] * EG[i][1])/(EG[i][26]* pfac**-1.0)))
        rr[i] = kf[i] * (C[i][27] * C[i][1]) - kb[i] * (C[i][26])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,26] = wdot[:,26] + rr[:]

    # Reaction C2H4 + O2 <=> C2H3 + HO2
    kf = 7.170000000000000e+13 * np.exp(-6.001000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,2])/(EG[:,27] * EG[:,7])))
    rr = kf * (C[:,26] * C[:,2]) - kb * (C[:,27] * C[:,7])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction C2H4 + H <=> C2H3 + H2
    kf = 6.189000000000000e+06 * (T ** 2.31) * np.exp(-1.282990000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,1])/(EG[:,27] * EG[:,0])))
    rr = kf * (C[:,26] * C[:,1]) - kb * (C[:,27] * C[:,0])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction C2H4 + OH <=> C2H3 + H2O
    kf = 1.348800000000000e-01 * (T ** 4.1965) * np.exp(8.656300000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,5])/(EG[:,27] * EG[:,4])))
    rr = kf * (C[:,26] * C[:,5]) - kb * (C[:,27] * C[:,4])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction C2H4 + HO2 <=> C2H3 + H2O2
    kf = 1.914000000000000e+03 * (T ** 3.059) * np.exp(-2.079860000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,7])/(EG[:,27] * EG[:,6])))
    rr = kf * (C[:,26] * C[:,7]) - kb * (C[:,27] * C[:,6])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    # Reaction C2H4 + CH3O <=> C2H3 + CH3OH
    kf = 1.200000000000000e+11 * np.exp(-6.750000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,19])/(EG[:,27] * EG[:,18])))
    rr = kf * (C[:,26] * C[:,19]) - kb * (C[:,27] * C[:,18])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,18] = wdot[:,18] + rr[:]

    # Reaction C2H4 + CH3O2 <=> C2H3 + CH3O2H
    kf = 3.828000000000000e+03 * (T ** 3.059) * np.exp(-2.079860000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,11])/(EG[:,27] * EG[:,10])))
    rr = kf * (C[:,26] * C[:,11]) - kb * (C[:,27] * C[:,10])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,10] = wdot[:,10] + rr[:]

    # Reaction C2H4 + CH3 <=> C2H3 + CH4
    kf = 9.755640000000001e+02 * (T ** 2.947) * np.exp(-1.514800000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,13])/(EG[:,27] * EG[:,12])))
    rr = kf * (C[:,26] * C[:,13]) - kb * (C[:,27] * C[:,12])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]

    # Reaction C2H4 + CH3 <=> C2H3 + CH4
    kf = 8.129700000000000e-05 * (T ** 4.417) * np.exp(-8.835799999999999e+03 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,13])/(EG[:,27] * EG[:,12])))
    rr = kf * (C[:,26] * C[:,13]) - kb * (C[:,27] * C[:,12])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]

    # Reaction C2H4 + O <=> CH3 + HCO
    kf = 5.708000000000001e+17 * (T ** -1.713) * np.exp(-2.887760000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,3])/(EG[:,13] * EG[:,22])))
    rr = kf * (C[:,26] * C[:,3]) - kb * (C[:,13] * C[:,22])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction C2H4 + O <=> CH2 + CH2O
    kf = 5.775000000000000e+06 * (T ** 1.991) * np.exp(-2.859750000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,3])/(EG[:,14] * EG[:,21])))
    rr = kf * (C[:,26] * C[:,3]) - kb * (C[:,14] * C[:,21])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]

    # Reaction C2H4 + O <=> CH2CO + H2
    kf = 2.118000000000000e+16 * (T ** -1.617) * np.exp(-2.859630000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,3])/(EG[:,29] * EG[:,0])))
    rr = kf * (C[:,26] * C[:,3]) - kb * (C[:,29] * C[:,0])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,29] = wdot[:,29] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction CH + CH4 <=> C2H4 + H
    kf = 6.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,12])/(EG[:,26] * EG[:,1])))
    rr = kf * (C[:,17] * C[:,12]) - kb * (C[:,26] * C[:,1])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,12] = wdot[:,12] - rr[:]
    wdot[:,26] = wdot[:,26] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH2(S) + CH3 <=> C2H4 + H
    kf = 2.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,13])/(EG[:,26] * EG[:,1])))
    rr = kf * (C[:,15] * C[:,13]) - kb * (C[:,26] * C[:,1])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,26] = wdot[:,26] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction C2H4 + OH <=> CH2O + CH3
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=5.350000000000000e+00 * (T[i] ** 2.92) * np.exp(1.732700000000000e+03 / (Rc * T[i]))
            kf[i]h=5.350000000000000e+00 * (T[i] ** 2.92) * np.exp(1.732700000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=3.190000000000000e+01 * (T[i] ** 2.71) * np.exp(1.172300000000000e+03 / (Rc * T[i]))
            kf[i]h=5.550000000000000e+02 * (T[i] ** 2.36) * np.exp(1.808000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.013979409037662e+01
            logP[i]h=1.152608845149651e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=5.550000000000000e+02 * (T[i] ** 2.36) * np.exp(1.808000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.780000000000000e+05 * (T[i] ** 1.68) * np.exp(-2.060500000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.780000000000000e+05 * (T[i] ** 1.68) * np.exp(-2.060500000000000e+03 / (Rc * T[i]))
            kf[i]h=2.370000000000000e+09 * (T[i] ** 0.56) * np.exp(-6.006700000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=2.370000000000000e+09 * (T[i] ** 0.56) * np.exp(-6.006700000000000e+03 / (Rc * T[i]))
            kf[i]h=2.760000000000000e+13 * (T[i] ** -0.5) * np.exp(-1.145510000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=2.760000000000000e+13 * (T[i] ** -0.5) * np.exp(-1.145510000000000e+04 / (Rc * T[i]))
            kf[i]h=2.760000000000000e+13 * (T[i] ** -0.5) * np.exp(-1.145510000000000e+04 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][26] * EG[i][5])/(EG[i][21] * EG[i][13])))
        rr[i] = kf[i] * (C[i][26] * C[i][5]) - kb[i] * (C[i][21] * C[i][13])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]

    # Reaction C2H2 + H (+M) <=> C2H3 (+M)
    M = ctot + 2.000000000000000e+00*C[:,24] + 1.000000000000000e+00*C[:,12] + 5.000000000000000e-01*C[:,8] + 1.000000000000000e+00*C[:,9] + 1.000000000000000e+00*C[:,0] + 5.000000000000000e+00*C[:,4] + 3.999999999999999e-01*C[:,49]
    k0 = 6.346000000000000e+31 * (T ** -4.664) * np.exp(-3.780000000000000e+03 / (Rc * T))
    kinf = 1.710000000000000e+10 * (T ** 1.266) * np.exp(-2.709000000000000e+03 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.788) * np.exp(-T/-10200.0) + 0.788 * np.exp(-T/1e-30)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,28] * EG[:,1])/(EG[:,27]* pfac**-1.0)))
    rr = kf * (C[:,28] * C[:,1]) - kb * (C[:,27])
    wdot[:,28] = wdot[:,28] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]

    # Reaction C2H3 + O2 <=> C2H2 + HO2
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=1.080000000000000e+07 * (T[i] ** 1.28) * np.exp(-3.322000000000000e+03 / (Rc * T[i])) + 4.760000000000000e+01 * (T[i] ** 2.75) * np.exp(7.964000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.080000000000000e+07 * (T[i] ** 1.28) * np.exp(-3.322000000000000e+03 / (Rc * T[i])) + 4.760000000000000e+01 * (T[i] ** 2.75) * np.exp(7.964000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 3.201869999999998e+05:
    for i in range(veclen):
            kf[i]l=7.750000000000000e+06 * (T[i] ** 1.33) * np.exp(-3.216000000000000e+03 / (Rc * T[i])) + 5.160000000000000e+01 * (T[i] ** 2.73) * np.exp(7.683000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.210000000000000e+07 * (T[i] ** 1.27) * np.exp(-3.311000000000000e+03 / (Rc * T[i])) + 5.550000000000000e+01 * (T[i] ** 2.73) * np.exp(6.585000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.267666047909533e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=1.210000000000000e+07 * (T[i] ** 1.27) * np.exp(-3.311000000000000e+03 / (Rc * T[i])) + 5.550000000000000e+01 * (T[i] ** 2.73) * np.exp(6.585000000000000e+02 / (Rc * T[i]))
            kf[i]h=2.150000000000000e+07 * (T[i] ** 1.19) * np.exp(-3.367000000000000e+03 / (Rc * T[i])) + 4.600000000000000e+01 * (T[i] ** 2.76) * np.exp(4.928000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.267666047909533e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.201870000000002e+06:
    for i in range(veclen):
            kf[i]l=2.150000000000000e+07 * (T[i] ** 1.19) * np.exp(-3.367000000000000e+03 / (Rc * T[i])) + 4.600000000000000e+01 * (T[i] ** 2.76) * np.exp(4.928000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.130000000000000e+08 * (T[i] ** 1.0) * np.exp(-3.695000000000000e+03 / (Rc * T[i])) + 3.750000000000000e+00 * (T[i] ** 3.07) * np.exp(6.010000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.497924557208938e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.130000000000000e+08 * (T[i] ** 1.0) * np.exp(-3.695000000000000e+03 / (Rc * T[i])) + 3.750000000000000e+00 * (T[i] ** 3.07) * np.exp(6.010000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.310000000000000e+11 * (T[i] ** 0.12) * np.exp(-5.872000000000000e+03 / (Rc * T[i])) + 5.480000000000000e+00 * (T[i] ** 3.07) * np.exp(-8.569999999999999e+01 / (Rc * T[i]))
            logP[i]l=1.497924557208938e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.201870000000000e+07:
    for i in range(veclen):
            kf[i]l=1.310000000000000e+11 * (T[i] ** 0.12) * np.exp(-5.872000000000000e+03 / (Rc * T[i])) + 5.480000000000000e+00 * (T[i] ** 3.07) * np.exp(-8.569999999999999e+01 / (Rc * T[i]))
            kf[i]h=1.190000000000000e+09 * (T[i] ** 0.82) * np.exp(-5.617000000000000e+03 / (Rc * T[i])) + 4.470000000000000e+08 * np.exp(-9.550000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.728183066508342e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=1.190000000000000e+09 * (T[i] ** 0.82) * np.exp(-5.617000000000000e+03 / (Rc * T[i])) + 4.470000000000000e+08 * np.exp(-9.550000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.060000000000000e+17 * (T[i] ** -1.45) * np.exp(-1.223000000000000e+04 / (Rc * T[i])) + 2.020000000000000e+01 * (T[i] ** 2.94) * np.exp(-1.847000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.728183066508342e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=1.060000000000000e+17 * (T[i] ** -1.45) * np.exp(-1.223000000000000e+04 / (Rc * T[i])) + 2.020000000000000e+01 * (T[i] ** 2.94) * np.exp(-1.847000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.060000000000000e+17 * (T[i] ** -1.45) * np.exp(-1.223000000000000e+04 / (Rc * T[i])) + 2.020000000000000e+01 * (T[i] ** 2.94) * np.exp(-1.847000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][27] * EG[i][2])/(EG[i][28] * EG[i][7])))
        rr[i] = kf[i] * (C[i][27] * C[i][2]) - kb[i] * (C[i][28] * C[i][7])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,28] = wdot[:,28] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction C2H3 + O2 <=> CH2CO + OH
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=8.660000000000000e+02 * (T[i] ** 2.41) * np.exp(-6.061000000000000e+03 / (Rc * T[i])) + 1.820000000000000e-01 * (T[i] ** 3.12) * np.exp(-1.331000000000000e+03 / (Rc * T[i]))
            kf[i]h=8.660000000000000e+02 * (T[i] ** 2.41) * np.exp(-6.061000000000000e+03 / (Rc * T[i])) + 1.820000000000000e-01 * (T[i] ** 3.12) * np.exp(-1.331000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 3.201869999999998e+05:
    for i in range(veclen):
            kf[i]l=8.910000000000001e+02 * (T[i] ** 2.41) * np.exp(-6.078000000000000e+03 / (Rc * T[i])) + 2.070000000000000e-01 * (T[i] ** 3.11) * np.exp(-1.383000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.430000000000001e+02 * (T[i] ** 2.4) * np.exp(-6.112000000000000e+03 / (Rc * T[i])) + 2.710000000000001e-01 * (T[i] ** 3.08) * np.exp(-1.496000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.267666047909533e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=9.430000000000001e+02 * (T[i] ** 2.4) * np.exp(-6.112000000000000e+03 / (Rc * T[i])) + 2.710000000000001e-01 * (T[i] ** 3.08) * np.exp(-1.496000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.060000000000000e+03 * (T[i] ** 2.39) * np.exp(-6.180000000000000e+03 / (Rc * T[i])) + 5.260000000000000e-01 * (T[i] ** 3.01) * np.exp(-1.777000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.267666047909533e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.201870000000002e+06:
    for i in range(veclen):
            kf[i]l=1.060000000000000e+03 * (T[i] ** 2.39) * np.exp(-6.180000000000000e+03 / (Rc * T[i])) + 5.260000000000000e-01 * (T[i] ** 3.01) * np.exp(-1.777000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.090000000000000e+03 * (T[i] ** 2.38) * np.exp(-6.179000000000000e+03 / (Rc * T[i])) + 1.370000000000000e+00 * (T[i] ** 2.9) * np.exp(-2.225000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.497924557208938e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.090000000000000e+03 * (T[i] ** 2.38) * np.exp(-6.179000000000000e+03 / (Rc * T[i])) + 1.370000000000000e+00 * (T[i] ** 2.9) * np.exp(-2.225000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.390000000000000e+03 * (T[i] ** 2.36) * np.exp(-6.074000000000000e+03 / (Rc * T[i])) + 4.190000000000000e-01 * (T[i] ** 2.93) * np.exp(-2.052000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.497924557208938e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.201870000000000e+07:
    for i in range(veclen):
            kf[i]l=1.390000000000000e+03 * (T[i] ** 2.36) * np.exp(-6.074000000000000e+03 / (Rc * T[i])) + 4.190000000000000e-01 * (T[i] ** 2.93) * np.exp(-2.052000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.490000000000000e+06 * (T[i] ** 1.42) * np.exp(-8.480000000000000e+03 / (Rc * T[i])) + 1.190000000000000e-04 * (T[i] ** 4.21) * np.exp(-2.043000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.728183066508342e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=2.490000000000000e+06 * (T[i] ** 1.42) * np.exp(-8.480000000000000e+03 / (Rc * T[i])) + 1.190000000000000e-04 * (T[i] ** 4.21) * np.exp(-2.043000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.660000000000000e+10 * (T[i] ** 0.36) * np.exp(-1.201000000000000e+04 / (Rc * T[i])) + 1.300000000000000e-03 * (T[i] ** 3.97) * np.exp(-3.414000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.728183066508342e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=1.660000000000000e+10 * (T[i] ** 0.36) * np.exp(-1.201000000000000e+04 / (Rc * T[i])) + 1.300000000000000e-03 * (T[i] ** 3.97) * np.exp(-3.414000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.660000000000000e+10 * (T[i] ** 0.36) * np.exp(-1.201000000000000e+04 / (Rc * T[i])) + 1.300000000000000e-03 * (T[i] ** 3.97) * np.exp(-3.414000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][27] * EG[i][2])/(EG[i][29] * EG[i][5])))
        rr[i] = kf[i] * (C[i][27] * C[i][2]) - kb[i] * (C[i][29] * C[i][5])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,29] = wdot[:,29] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction C2H3 + O2 <=> CH2O + HCO
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=2.770000000000001e+36 * (T[i] ** -7.6) * np.exp(-1.264000000000000e+04 / (Rc * T[i])) + 5.040000000000000e+15 * (T[i] ** -1.28) * np.exp(-5.153000000000000e+02 / (Rc * T[i]))
            kf[i]h=2.770000000000001e+36 * (T[i] ** -7.6) * np.exp(-1.264000000000000e+04 / (Rc * T[i])) + 5.040000000000000e+15 * (T[i] ** -1.28) * np.exp(-5.153000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 3.201869999999998e+05:
    for i in range(veclen):
            kf[i]l=2.700000000000000e+36 * (T[i] ** -7.6) * np.exp(-1.261000000000000e+04 / (Rc * T[i])) + 5.100000000000000e+15 * (T[i] ** -1.28) * np.exp(-5.130000000000000e+02 / (Rc * T[i]))
            kf[i]h=2.170000000000000e+36 * (T[i] ** -7.57) * np.exp(-1.249000000000000e+04 / (Rc * T[i])) + 5.340000000000000e+15 * (T[i] ** -1.29) * np.exp(-5.205999999999999e+02 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.267666047909533e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=2.170000000000000e+36 * (T[i] ** -7.57) * np.exp(-1.249000000000000e+04 / (Rc * T[i])) + 5.340000000000000e+15 * (T[i] ** -1.29) * np.exp(-5.205999999999999e+02 / (Rc * T[i]))
            kf[i]h=3.030000000000000e+35 * (T[i] ** -7.32) * np.exp(-1.182000000000000e+04 / (Rc * T[i])) + 6.760000000000000e+15 * (T[i] ** -1.31) * np.exp(-6.457000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.267666047909533e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.201870000000002e+06:
    for i in range(veclen):
            kf[i]l=3.030000000000000e+35 * (T[i] ** -7.32) * np.exp(-1.182000000000000e+04 / (Rc * T[i])) + 6.760000000000000e+15 * (T[i] ** -1.31) * np.exp(-6.457000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.590000000000000e+36 * (T[i] ** -7.47) * np.exp(-1.246000000000000e+04 / (Rc * T[i])) + 1.050000000000000e+16 * (T[i] ** -1.36) * np.exp(-1.066000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.497924557208938e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.590000000000000e+36 * (T[i] ** -7.47) * np.exp(-1.246000000000000e+04 / (Rc * T[i])) + 1.050000000000000e+16 * (T[i] ** -1.36) * np.exp(-1.066000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.760000000000001e+35 * (T[i] ** -7.2) * np.exp(-1.343000000000000e+04 / (Rc * T[i])) + 2.840000000000000e+15 * (T[i] ** -1.18) * np.exp(-1.429000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.497924557208938e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.201870000000000e+07:
    for i in range(veclen):
            kf[i]l=5.760000000000001e+35 * (T[i] ** -7.2) * np.exp(-1.343000000000000e+04 / (Rc * T[i])) + 2.840000000000000e+15 * (T[i] ** -1.18) * np.exp(-1.429000000000000e+03 / (Rc * T[i]))
            kf[i]h=3.540000000000000e+20 * (T[i] ** -2.57) * np.exp(-5.578000000000000e+03 / (Rc * T[i])) + 1.140000000000000e+69 * (T[i] ** -19.23) * np.exp(-1.476000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.728183066508342e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=3.540000000000000e+20 * (T[i] ** -2.57) * np.exp(-5.578000000000000e+03 / (Rc * T[i])) + 1.140000000000000e+69 * (T[i] ** -19.23) * np.exp(-1.476000000000000e+04 / (Rc * T[i]))
            kf[i]h=3.030000000000000e+33 * (T[i] ** -6.28) * np.exp(-1.600000000000000e+04 / (Rc * T[i])) + 4.680000000000000e+10 * (T[i] ** 0.19) * np.exp(-8.305999999999999e+02 / (Rc * T[i]))
            logP[i]l=1.728183066508342e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=3.030000000000000e+33 * (T[i] ** -6.28) * np.exp(-1.600000000000000e+04 / (Rc * T[i])) + 4.680000000000000e+10 * (T[i] ** 0.19) * np.exp(-8.305999999999999e+02 / (Rc * T[i]))
            kf[i]h=3.030000000000000e+33 * (T[i] ** -6.28) * np.exp(-1.600000000000000e+04 / (Rc * T[i])) + 4.680000000000000e+10 * (T[i] ** 0.19) * np.exp(-8.305999999999999e+02 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][27] * EG[i][2])/(EG[i][21] * EG[i][22])))
        rr[i] = kf[i] * (C[i][27] * C[i][2]) - kb[i] * (C[i][21] * C[i][22])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction C2H3 + O2 => CH2O + CO + H
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=6.470000000000001e+36 * (T[i] ** -7.6) * np.exp(-1.264000000000000e+04 / (Rc * T[i])) + 1.180000000000000e+16 * (T[i] ** -1.28) * np.exp(-5.153000000000000e+02 / (Rc * T[i]))
            kf[i]h=6.470000000000001e+36 * (T[i] ** -7.6) * np.exp(-1.264000000000000e+04 / (Rc * T[i])) + 1.180000000000000e+16 * (T[i] ** -1.28) * np.exp(-5.153000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 3.201869999999998e+05:
    for i in range(veclen):
            kf[i]l=6.290000000000001e+36 * (T[i] ** -7.6) * np.exp(-1.261000000000000e+04 / (Rc * T[i])) + 1.190000000000000e+16 * (T[i] ** -1.28) * np.exp(-5.130000000000000e+02 / (Rc * T[i]))
            kf[i]h=5.060000000000000e+36 * (T[i] ** -7.57) * np.exp(-1.249000000000000e+04 / (Rc * T[i])) + 1.260000000000000e+16 * (T[i] ** -1.29) * np.exp(-5.205999999999999e+02 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.267666047909533e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=5.060000000000000e+36 * (T[i] ** -7.57) * np.exp(-1.249000000000000e+04 / (Rc * T[i])) + 1.260000000000000e+16 * (T[i] ** -1.29) * np.exp(-5.205999999999999e+02 / (Rc * T[i]))
            kf[i]h=7.070000000000000e+35 * (T[i] ** -7.32) * np.exp(-1.182000000000000e+04 / (Rc * T[i])) + 1.580000000000000e+16 * (T[i] ** -1.31) * np.exp(-6.457000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.267666047909533e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.201870000000002e+06:
    for i in range(veclen):
            kf[i]l=7.070000000000000e+35 * (T[i] ** -7.32) * np.exp(-1.182000000000000e+04 / (Rc * T[i])) + 1.580000000000000e+16 * (T[i] ** -1.31) * np.exp(-6.457000000000000e+02 / (Rc * T[i]))
            kf[i]h=3.720000000000000e+36 * (T[i] ** -7.47) * np.exp(-1.246000000000000e+04 / (Rc * T[i])) + 2.440000000000000e+16 * (T[i] ** -1.36) * np.exp(-1.066000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.497924557208938e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=3.720000000000000e+36 * (T[i] ** -7.47) * np.exp(-1.246000000000000e+04 / (Rc * T[i])) + 2.440000000000000e+16 * (T[i] ** -1.36) * np.exp(-1.066000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.340000000000000e+36 * (T[i] ** -7.2) * np.exp(-1.343000000000000e+04 / (Rc * T[i])) + 6.640000000000000e+15 * (T[i] ** -1.18) * np.exp(-1.429000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.497924557208938e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.201870000000000e+07:
    for i in range(veclen):
            kf[i]l=1.340000000000000e+36 * (T[i] ** -7.2) * np.exp(-1.343000000000000e+04 / (Rc * T[i])) + 6.640000000000000e+15 * (T[i] ** -1.18) * np.exp(-1.429000000000000e+03 / (Rc * T[i]))
            kf[i]h=8.260000000000000e+20 * (T[i] ** -2.57) * np.exp(-5.578000000000000e+03 / (Rc * T[i])) + 2.660000000000000e+69 * (T[i] ** -19.23) * np.exp(-1.476000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.728183066508342e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=8.260000000000000e+20 * (T[i] ** -2.57) * np.exp(-5.578000000000000e+03 / (Rc * T[i])) + 2.660000000000000e+69 * (T[i] ** -19.23) * np.exp(-1.476000000000000e+04 / (Rc * T[i]))
            kf[i]h=7.070000000000001e+33 * (T[i] ** -6.28) * np.exp(-1.600000000000000e+04 / (Rc * T[i])) + 1.090000000000000e+11 * (T[i] ** 0.19) * np.exp(-8.305999999999999e+02 / (Rc * T[i]))
            logP[i]l=1.728183066508342e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=7.070000000000001e+33 * (T[i] ** -6.28) * np.exp(-1.600000000000000e+04 / (Rc * T[i])) + 1.090000000000000e+11 * (T[i] ** 0.19) * np.exp(-8.305999999999999e+02 / (Rc * T[i]))
            kf[i]h=7.070000000000001e+33 * (T[i] ** -6.28) * np.exp(-1.600000000000000e+04 / (Rc * T[i])) + 1.090000000000000e+11 * (T[i] ** 0.19) * np.exp(-8.305999999999999e+02 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        0
        rr[i] = kf[i] * (C[i][27] * C[i][2]) - kb[i] * (C[i][21] * C[i][8] * C[i][1])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction C2H3 + O2 <=> CH3O + CO
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=8.190000000000000e+18 * (T[i] ** -2.66) * np.exp(-3.201000000000000e+03 / (Rc * T[i])) + 1.290000000000000e+09 * (T[i] ** 0.18) * np.exp(1.717000000000000e+03 / (Rc * T[i]))
            kf[i]h=8.190000000000000e+18 * (T[i] ** -2.66) * np.exp(-3.201000000000000e+03 / (Rc * T[i])) + 1.290000000000000e+09 * (T[i] ** 0.18) * np.exp(1.717000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 3.201869999999998e+05:
    for i in range(veclen):
            kf[i]l=4.060000000000000e+14 * (T[i] ** -1.32) * np.exp(-8.858000000000000e+02 / (Rc * T[i])) + 5.990000000000000e+11 * (T[i] ** -2.93) * np.exp(9.564000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.340000000000000e+14 * (T[i] ** -1.33) * np.exp(-9.005999999999999e+02 / (Rc * T[i])) + 2.910000000000000e+11 * (T[i] ** -2.93) * np.exp(1.012000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.267666047909533e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=4.340000000000000e+14 * (T[i] ** -1.33) * np.exp(-9.005999999999999e+02 / (Rc * T[i])) + 2.910000000000000e+11 * (T[i] ** -2.93) * np.exp(1.012000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.030000000000000e+11 * (T[i] ** -0.33) * np.exp(7.478000000000000e+02 / (Rc * T[i])) + 5.769999999999999e+21 * (T[i] ** -3.54) * np.exp(-4.772000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.267666047909533e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.201870000000002e+06:
    for i in range(veclen):
            kf[i]l=1.030000000000000e+11 * (T[i] ** -0.33) * np.exp(7.478000000000000e+02 / (Rc * T[i])) + 5.769999999999999e+21 * (T[i] ** -3.54) * np.exp(-4.772000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.890000000000000e+12 * (T[i] ** -3.0) * np.exp(8.995000000000000e+03 / (Rc * T[i])) + 4.990000000000000e+15 * (T[i] ** -1.62) * np.exp(-1.849000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.497924557208938e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.890000000000000e+12 * (T[i] ** -3.0) * np.exp(8.995000000000000e+03 / (Rc * T[i])) + 4.990000000000000e+15 * (T[i] ** -1.62) * np.exp(-1.849000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.930000000000000e+24 * (T[i] ** -5.63) * np.exp(-1.800000000000000e+00 / (Rc * T[i])) + 9.330000000000000e+16 * (T[i] ** -1.96) * np.exp(-3.324000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.497924557208938e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.201870000000000e+07:
    for i in range(veclen):
            kf[i]l=1.930000000000000e+24 * (T[i] ** -5.63) * np.exp(-1.800000000000000e+00 / (Rc * T[i])) + 9.330000000000000e+16 * (T[i] ** -1.96) * np.exp(-3.324000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.100000000000000e+18 * (T[i] ** -2.22) * np.exp(-5.178000000000000e+03 / (Rc * T[i])) + 1.020000000000000e+72 * (T[i] ** -20.69) * np.exp(-1.586000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.728183066508342e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=1.100000000000000e+18 * (T[i] ** -2.22) * np.exp(-5.178000000000000e+03 / (Rc * T[i])) + 1.020000000000000e+72 * (T[i] ** -20.69) * np.exp(-1.586000000000000e+04 / (Rc * T[i]))
            kf[i]h=5.790000000000000e+32 * (T[i] ** -6.45) * np.exp(-1.681000000000000e+04 / (Rc * T[i])) + 1.100000000000000e+09 * (T[i] ** 0.31) * np.exp(-1.024000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.728183066508342e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=5.790000000000000e+32 * (T[i] ** -6.45) * np.exp(-1.681000000000000e+04 / (Rc * T[i])) + 1.100000000000000e+09 * (T[i] ** 0.31) * np.exp(-1.024000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.790000000000000e+32 * (T[i] ** -6.45) * np.exp(-1.681000000000000e+04 / (Rc * T[i])) + 1.100000000000000e+09 * (T[i] ** 0.31) * np.exp(-1.024000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][27] * EG[i][2])/(EG[i][19] * EG[i][8])))
        rr[i] = kf[i] * (C[i][27] * C[i][2]) - kb[i] * (C[i][19] * C[i][8])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction C2H3 + O2 <=> CH3 + CO2
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=2.370000000000000e+35 * (T[i] ** -7.76) * np.exp(-1.263000000000000e+04 / (Rc * T[i])) + 6.270000000000000e+13 * (T[i] ** -1.16) * np.exp(-4.063000000000000e+02 / (Rc * T[i]))
            kf[i]h=2.370000000000000e+35 * (T[i] ** -7.76) * np.exp(-1.263000000000000e+04 / (Rc * T[i])) + 6.270000000000000e+13 * (T[i] ** -1.16) * np.exp(-4.063000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 3.201869999999998e+05:
    for i in range(veclen):
            kf[i]l=1.730000000000000e+35 * (T[i] ** -7.72) * np.exp(-1.252000000000000e+04 / (Rc * T[i])) + 6.240000000000000e+13 * (T[i] ** -1.16) * np.exp(-4.014000000000000e+02 / (Rc * T[i]))
            kf[i]h=4.470000000000001e+34 * (T[i] ** -7.55) * np.exp(-1.214000000000000e+04 / (Rc * T[i])) + 6.120000000000000e+13 * (T[i] ** -1.16) * np.exp(-3.970000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.267666047909533e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=4.470000000000001e+34 * (T[i] ** -7.55) * np.exp(-1.214000000000000e+04 / (Rc * T[i])) + 6.120000000000000e+13 * (T[i] ** -1.16) * np.exp(-3.970000000000000e+02 / (Rc * T[i]))
            kf[i]h=7.250000000000001e+31 * (T[i] ** -6.7) * np.exp(-1.044000000000000e+04 / (Rc * T[i])) + 5.320000000000000e+13 * (T[i] ** -1.14) * np.exp(-4.467000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.267666047909533e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.201870000000002e+06:
    for i in range(veclen):
            kf[i]l=7.250000000000001e+31 * (T[i] ** -6.7) * np.exp(-1.044000000000000e+04 / (Rc * T[i])) + 5.320000000000000e+13 * (T[i] ** -1.14) * np.exp(-4.467000000000000e+02 / (Rc * T[i]))
            kf[i]h=3.630000000000000e+35 * (T[i] ** -7.75) * np.exp(-1.283000000000000e+04 / (Rc * T[i])) + 1.450000000000000e+14 * (T[i] ** -1.26) * np.exp(-9.877000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.497924557208938e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=3.630000000000000e+35 * (T[i] ** -7.75) * np.exp(-1.283000000000000e+04 / (Rc * T[i])) + 1.450000000000000e+14 * (T[i] ** -1.26) * np.exp(-9.877000000000000e+02 / (Rc * T[i]))
            kf[i]h=2.090000000000000e+35 * (T[i] ** -7.53) * np.exp(-1.405000000000000e+04 / (Rc * T[i])) + 5.020000000000000e+13 * (T[i] ** -1.11) * np.exp(-1.409000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.497924557208938e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.201870000000000e+07:
    for i in range(veclen):
            kf[i]l=2.090000000000000e+35 * (T[i] ** -7.53) * np.exp(-1.405000000000000e+04 / (Rc * T[i])) + 5.020000000000000e+13 * (T[i] ** -1.11) * np.exp(-1.409000000000000e+03 / (Rc * T[i]))
            kf[i]h=3.840000000000000e+18 * (T[i] ** -2.44) * np.exp(-5.408000000000000e+03 / (Rc * T[i])) + 1.400000000000000e+70 * (T[i] ** -20.11) * np.exp(-1.543000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.728183066508342e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=3.840000000000000e+18 * (T[i] ** -2.44) * np.exp(-5.408000000000000e+03 / (Rc * T[i])) + 1.400000000000000e+70 * (T[i] ** -20.11) * np.exp(-1.543000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.210000000000000e+32 * (T[i] ** -6.32) * np.exp(-1.619000000000000e+04 / (Rc * T[i])) + 9.210000000000000e+08 * (T[i] ** 0.25) * np.exp(-8.553000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.728183066508342e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=1.210000000000000e+32 * (T[i] ** -6.32) * np.exp(-1.619000000000000e+04 / (Rc * T[i])) + 9.210000000000000e+08 * (T[i] ** 0.25) * np.exp(-8.553000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.210000000000000e+32 * (T[i] ** -6.32) * np.exp(-1.619000000000000e+04 / (Rc * T[i])) + 9.210000000000000e+08 * (T[i] ** 0.25) * np.exp(-8.553000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][27] * EG[i][2])/(EG[i][13] * EG[i][9])))
        rr[i] = kf[i] * (C[i][27] * C[i][2]) - kb[i] * (C[i][13] * C[i][9])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]

    # Reaction C2H3 + H <=> C2H2 + H2
    kf = 4.500000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,27] * EG[:,1])/(EG[:,28] * EG[:,0])))
    rr = kf * (C[:,27] * C[:,1]) - kb * (C[:,28] * C[:,0])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,28] = wdot[:,28] + rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]

    # Reaction C2H3 + CH3 <=> C2H2 + CH4
    kf = 2.050000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,27] * EG[:,13])/(EG[:,28] * EG[:,12])))
    rr = kf * (C[:,27] * C[:,13]) - kb * (C[:,28] * C[:,12])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,28] = wdot[:,28] + rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]

    # Reaction C2H3 + O <=> C2H2 + OH
    kf = 1.030000000000000e+12 * (T ** 0.2) * np.exp(4.270000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,27] * EG[:,3])/(EG[:,28] * EG[:,5])))
    rr = kf * (C[:,27] * C[:,3]) - kb * (C[:,28] * C[:,5])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,28] = wdot[:,28] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction C2H3 + HCO <=> C2H4 + CO
    kf = 9.033000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,27] * EG[:,22])/(EG[:,26] * EG[:,8])))
    rr = kf * (C[:,27] * C[:,22]) - kb * (C[:,26] * C[:,8])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,26] = wdot[:,26] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction C2H2 + HCO <=> C2H3 + CO
    kf = 1.000000000000000e+07 * (T ** 2.0) * np.exp(-6.000000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,28] * EG[:,22])/(EG[:,27] * EG[:,8])))
    rr = kf * (C[:,28] * C[:,22]) - kb * (C[:,27] * C[:,8])
    wdot[:,28] = wdot[:,28] - rr[:]
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction C2H2 + OH <=> CH2CO + H
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=1.578000000000000e+03 * (T[i] ** 2.56) * np.exp(8.445000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.578000000000000e+03 * (T[i] ** 2.56) * np.exp(8.445000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=1.518000000000000e+04 * (T[i] ** 2.28) * np.exp(2.921000000000000e+02 / (Rc * T[i]))
            kf[i]h=3.017000000000000e+05 * (T[i] ** 1.92) * np.exp(-5.980999999999999e+02 / (Rc * T[i]))
            logP[i]l=1.013979409037662e+01
            logP[i]h=1.152608845149651e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=3.017000000000000e+05 * (T[i] ** 1.92) * np.exp(-5.980999999999999e+02 / (Rc * T[i]))
            kf[i]h=7.528000000000000e+06 * (T[i] ** 1.55) * np.exp(-2.106000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=7.528000000000000e+06 * (T[i] ** 1.55) * np.exp(-2.106000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.101000000000000e+06 * (T[i] ** 1.65) * np.exp(-3.400000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=5.101000000000000e+06 * (T[i] ** 1.65) * np.exp(-3.400000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.457000000000000e+04 * (T[i] ** 2.45) * np.exp(-4.477000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=1.457000000000000e+04 * (T[i] ** 2.45) * np.exp(-4.477000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.457000000000000e+04 * (T[i] ** 2.45) * np.exp(-4.477000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][28] * EG[i][5])/(EG[i][29] * EG[i][1])))
        rr[i] = kf[i] * (C[i][28] * C[i][5]) - kb[i] * (C[i][29] * C[i][1])
    wdot[:,28] = wdot[:,28] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,29] = wdot[:,29] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction C2H2 + OH <=> CH3 + CO
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=4.757000000000000e+05 * (T[i] ** 1.68) * np.exp(3.298000000000000e+02 / (Rc * T[i]))
            kf[i]h=4.757000000000000e+05 * (T[i] ** 1.68) * np.exp(3.298000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=4.372000000000000e+06 * (T[i] ** 1.4) * np.exp(-2.265000000000000e+02 / (Rc * T[i]))
            kf[i]h=7.648000000000000e+07 * (T[i] ** 1.05) * np.exp(-1.115000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.013979409037662e+01
            logP[i]h=1.152608845149651e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=7.648000000000000e+07 * (T[i] ** 1.05) * np.exp(-1.115000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.277000000000000e+09 * (T[i] ** 0.73) * np.exp(-2.579000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.277000000000000e+09 * (T[i] ** 0.73) * np.exp(-2.579000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.312000000000000e+08 * (T[i] ** 0.92) * np.exp(-3.736000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=4.312000000000000e+08 * (T[i] ** 0.92) * np.exp(-3.736000000000000e+03 / (Rc * T[i]))
            kf[i]h=8.250000000000001e+05 * (T[i] ** 1.77) * np.exp(-4.697000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=8.250000000000001e+05 * (T[i] ** 1.77) * np.exp(-4.697000000000000e+03 / (Rc * T[i]))
            kf[i]h=8.250000000000001e+05 * (T[i] ** 1.77) * np.exp(-4.697000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][28] * EG[i][5])/(EG[i][13] * EG[i][8])))
        rr[i] = kf[i] * (C[i][28] * C[i][5]) - kb[i] * (C[i][13] * C[i][8])
    wdot[:,28] = wdot[:,28] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction C2H2 + O <=> CH2 + CO
    kf = 7.395000000000000e+08 * (T ** 1.28) * np.exp(-2.472000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,28] * EG[:,3])/(EG[:,14] * EG[:,8])))
    rr = kf * (C[:,28] * C[:,3]) - kb * (C[:,14] * C[:,8])
    wdot[:,28] = wdot[:,28] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction C2H2 + O <=> H + HCCO
    kf = 2.958000000000000e+09 * (T ** 1.28) * np.exp(-2.472000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,28] * EG[:,3])/(EG[:,1] * EG[:,30])))
    rr = kf * (C[:,28] * C[:,3]) - kb * (C[:,1] * C[:,30])
    wdot[:,28] = wdot[:,28] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,30] = wdot[:,30] + rr[:]

    # Reaction C2H2 + HO2 => CH2O + CO + H
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=9.100000000000000e+13 * (T[i] ** -1.17) * np.exp(-1.375000000000000e+04 / (Rc * T[i])) + 1.970000000000000e+01 * (T[i] ** 2.56) * np.exp(-7.382000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.100000000000000e+13 * (T[i] ** -1.17) * np.exp(-1.375000000000000e+04 / (Rc * T[i])) + 1.970000000000000e+01 * (T[i] ** 2.56) * np.exp(-7.382000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 3.201869999999998e+05:
    for i in range(veclen):
            kf[i]l=9.940000000000000e+00 * (T[i] ** 2.64) * np.exp(-7.253000000000000e+03 / (Rc * T[i])) + 3.630000000000000e+13 * (T[i] ** -1.05) * np.exp(-1.352000000000000e+04 / (Rc * T[i]))
            kf[i]h=6.050000000000001e-06 * (T[i] ** 4.34) * np.exp(-4.525000000000000e+03 / (Rc * T[i])) + 1.610000000000000e+10 * np.exp(-1.172000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.267666047909533e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=6.050000000000001e-06 * (T[i] ** 4.34) * np.exp(-4.525000000000000e+03 / (Rc * T[i])) + 1.610000000000000e+10 * np.exp(-1.172000000000000e+04 / (Rc * T[i]))
            kf[i]h=7.770000000000000e+102 * (T[i] ** -24.18) * np.exp(-1.386000000000000e+05 / (Rc * T[i])) + 1.880000000000000e+08 * (T[i] ** 0.6) * np.exp(-1.085000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.267666047909533e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.201870000000002e+06:
    for i in range(veclen):
            kf[i]l=7.770000000000000e+102 * (T[i] ** -24.18) * np.exp(-1.386000000000000e+05 / (Rc * T[i])) + 1.880000000000000e+08 * (T[i] ** 0.6) * np.exp(-1.085000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.220000000000000e+16 * (T[i] ** -1.75) * np.exp(-1.518000000000000e+04 / (Rc * T[i])) + 8.260000000000000e+00 * (T[i] ** 2.69) * np.exp(-8.025000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.497924557208938e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.220000000000000e+16 * (T[i] ** -1.75) * np.exp(-1.518000000000000e+04 / (Rc * T[i])) + 8.260000000000000e+00 * (T[i] ** 2.69) * np.exp(-8.025000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.710000000000000e+36 * (T[i] ** -7.77) * np.exp(-2.697000000000000e+04 / (Rc * T[i])) + 2.300000000000000e+07 * (T[i] ** 0.91) * np.exp(-1.171000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.497924557208938e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.201870000000000e+07:
    for i in range(veclen):
            kf[i]l=1.710000000000000e+36 * (T[i] ** -7.77) * np.exp(-2.697000000000000e+04 / (Rc * T[i])) + 2.300000000000000e+07 * (T[i] ** 0.91) * np.exp(-1.171000000000000e+04 / (Rc * T[i]))
            kf[i]h=4.140000000000001e+28 * (T[i] ** -5.3) * np.exp(-2.513000000000000e+04 / (Rc * T[i])) + 4.190000000000000e+04 * (T[i] ** 1.7) * np.exp(-1.125000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.728183066508342e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=4.140000000000001e+28 * (T[i] ** -5.3) * np.exp(-2.513000000000000e+04 / (Rc * T[i])) + 4.190000000000000e+04 * (T[i] ** 1.7) * np.exp(-1.125000000000000e+04 / (Rc * T[i]))
            kf[i]h=5.770000000000000e+16 * (T[i] ** -1.7) * np.exp(-2.003000000000000e+04 / (Rc * T[i])) + 1.010000000000000e-05 * (T[i] ** 4.31) * np.exp(-6.829000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.728183066508342e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=5.770000000000000e+16 * (T[i] ** -1.7) * np.exp(-2.003000000000000e+04 / (Rc * T[i])) + 1.010000000000000e-05 * (T[i] ** 4.31) * np.exp(-6.829000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.770000000000000e+16 * (T[i] ** -1.7) * np.exp(-2.003000000000000e+04 / (Rc * T[i])) + 1.010000000000000e-05 * (T[i] ** 4.31) * np.exp(-6.829000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        0
        rr[i] = kf[i] * (C[i][28] * C[i][7]) - kb[i] * (C[i][21] * C[i][8] * C[i][1])
    wdot[:,28] = wdot[:,28] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH2 + CO (+M) <=> CH2CO (+M)
    M = ctot + 2.000000000000000e+00*C[:,24] + 1.000000000000000e+00*C[:,12] + 5.000000000000000e-01*C[:,8] + 1.000000000000000e+00*C[:,9] + 1.000000000000000e+00*C[:,0] + 5.000000000000000e+00*C[:,4]
    k0 = 2.690000000000001e+33 * (T ** -5.11) * np.exp(-7.095000000000000e+03 / (Rc * T))
    kinf = 8.100000000000000e+11 * (T ** 0.5) * np.exp(-4.510000000000000e+03 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.5907) * np.exp(-T/275.0) + 0.5907 * np.exp(-T/1226.0) + np.exp(-5185.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,14] * EG[:,8])/(EG[:,29]* pfac**-1.0)))
    rr = kf * (C[:,14] * C[:,8]) - kb * (C[:,29])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,8] = wdot[:,8] - rr[:]
    wdot[:,29] = wdot[:,29] + rr[:]

    # Reaction CH2CO + H <=> H2 + HCCO
    kf = 1.401000000000000e+15 * (T ** -0.171) * np.exp(-8.783200000000001e+03 / (Rc * T))
    kb = kf * (((EG[:,29] * EG[:,1])/(EG[:,0] * EG[:,30])))
    rr = kf * (C[:,29] * C[:,1]) - kb * (C[:,0] * C[:,30])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,30] = wdot[:,30] + rr[:]

    # Reaction CH2CO + OH => H2O + HCCO
    kf = 3.930000000000001e+04 * (T ** 2.45) * np.exp(-4.524000000000000e+03 / (Rc * T))
    kb = 0
    rr = kf * (C[:,29] * C[:,5]) - kb * (C[:,4] * C[:,30])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,30] = wdot[:,30] + rr[:]

    # Reaction CH2CO + OH => H2O + HCCO
    kf = 2.600000000000000e+02 * (T ** 2.7) * np.exp(-1.279000000000000e+03 / (Rc * T))
    kb = 0
    rr = kf * (C[:,29] * C[:,5]) - kb * (C[:,4] * C[:,30])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,30] = wdot[:,30] + rr[:]

    # Reaction CH2CO + OH <=> CH2OH + CO
    kf = 3.500000000000000e+07 * (T ** 1.41) * np.exp(1.249000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,29] * EG[:,5])/(EG[:,20] * EG[:,8])))
    rr = kf * (C[:,29] * C[:,5]) - kb * (C[:,20] * C[:,8])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction CH2CO + OH <=> CH2OH + CO
    kf = 4.090000000000000e+06 * (T ** 1.76) * np.exp(-2.088000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,29] * EG[:,5])/(EG[:,20] * EG[:,8])))
    rr = kf * (C[:,29] * C[:,5]) - kb * (C[:,20] * C[:,8])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,20] = wdot[:,20] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction CH2CO + OH => CH3 + CO2
    if P < 1.013250000000000e+02:
    for i in range(veclen):
            kf[i]l=1.170000000000000e+12 * (T[i] ** -0.11) * np.exp(-3.670000000000000e+01 / (Rc * T[i])) + 3.610000000000001e-15 * (T[i] ** -15.54) * np.exp(9.058000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.170000000000000e+12 * (T[i] ** -0.11) * np.exp(-3.670000000000000e+01 / (Rc * T[i])) + 3.610000000000001e-15 * (T[i] ** -15.54) * np.exp(9.058000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=4.618333172514372e+00
    elif P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=1.170000000000000e+12 * (T[i] ** -0.11) * np.exp(-3.640000000000000e+01 / (Rc * T[i])) + 2.810000000000000e-07 * (T[i] ** -0.8) * np.exp(2.658000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.540000000000000e+12 * (T[i] ** -0.15) * np.exp(-1.334000000000000e+02 / (Rc * T[i])) + 1.340000000000000e-08 * (T[i] ** -0.62) * np.exp(2.788000000000000e+04 / (Rc * T[i]))
            logP[i]l=6.920918265508418e+00
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=1.540000000000000e+12 * (T[i] ** -0.15) * np.exp(-1.334000000000000e+02 / (Rc * T[i])) + 1.340000000000000e-08 * (T[i] ** -0.62) * np.exp(2.788000000000000e+04 / (Rc * T[i]))
            kf[i]h=2.700000000000000e+25 * (T[i] ** -3.95) * np.exp(-9.988000000000000e+03 / (Rc * T[i])) + 3.060000000000000e+08 * (T[i] ** 0.91) * np.exp(-3.748000000000000e+02 / (Rc * T[i]))
            logP[i]l=9.223503358502464e+00
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=2.700000000000000e+25 * (T[i] ** -3.95) * np.exp(-9.988000000000000e+03 / (Rc * T[i])) + 3.060000000000000e+08 * (T[i] ** 0.91) * np.exp(-3.748000000000000e+02 / (Rc * T[i]))
            kf[i]h=4.640000000000000e+23 * (T[i] ** -3.26) * np.exp(-1.290000000000000e+04 / (Rc * T[i])) + 3.920000000000000e+05 * (T[i] ** 1.68) * np.exp(-4.316000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 2.026499999999999e+07:
    for i in range(veclen):
            kf[i]l=4.640000000000000e+23 * (T[i] ** -3.26) * np.exp(-1.290000000000000e+04 / (Rc * T[i])) + 3.920000000000000e+05 * (T[i] ** 1.68) * np.exp(-4.316000000000000e+02 / (Rc * T[i]))
            kf[i]h=4.580000000000001e+22 * (T[i] ** -2.93) * np.exp(-1.361000000000000e+04 / (Rc * T[i])) + 4.220000000000001e+04 * (T[i] ** 1.93) * np.exp(-3.485000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.682440581804455e+01
    elif P < 5.066250000000001e+07:
    for i in range(veclen):
            kf[i]l=4.580000000000001e+22 * (T[i] ** -2.93) * np.exp(-1.361000000000000e+04 / (Rc * T[i])) + 4.220000000000001e+04 * (T[i] ** 1.93) * np.exp(-3.485000000000000e+02 / (Rc * T[i]))
            kf[i]h=1.700000000000000e+22 * (T[i] ** -2.76) * np.exp(-1.525000000000000e+04 / (Rc * T[i])) + 9.900000000000001e+02 * (T[i] ** 2.38) * np.exp(-1.964000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.682440581804455e+01
            logP[i]h=1.774069654991870e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=1.700000000000000e+22 * (T[i] ** -2.76) * np.exp(-1.525000000000000e+04 / (Rc * T[i])) + 9.900000000000001e+02 * (T[i] ** 2.38) * np.exp(-1.964000000000000e+02 / (Rc * T[i]))
            kf[i]h=9.590000000000001e+21 * (T[i] ** -2.66) * np.exp(-1.667000000000000e+04 / (Rc * T[i])) + 2.670000000000000e+01 * (T[i] ** 2.83) * np.exp(-3.000000000000000e+00 / (Rc * T[i]))
            logP[i]l=1.774069654991870e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=9.590000000000001e+21 * (T[i] ** -2.66) * np.exp(-1.667000000000000e+04 / (Rc * T[i])) + 2.670000000000000e+01 * (T[i] ** 2.83) * np.exp(-3.000000000000000e+00 / (Rc * T[i]))
            kf[i]h=9.590000000000001e+21 * (T[i] ** -2.66) * np.exp(-1.667000000000000e+04 / (Rc * T[i])) + 2.670000000000000e+01 * (T[i] ** 2.83) * np.exp(-3.000000000000000e+00 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        0
        rr[i] = kf[i] * (C[i][29] * C[i][5]) - kb[i] * (C[i][13] * C[i][9])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]

    # Reaction CH2CO + H <=> CH3 + CO
    kf = 7.800000000000000e+08 * (T ** 1.45) * np.exp(-2.780000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,29] * EG[:,1])/(EG[:,13] * EG[:,8])))
    rr = kf * (C[:,29] * C[:,1]) - kb * (C[:,13] * C[:,8])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction CH + CH2O <=> CH2CO + H
    kf = 9.460000000000000e+13 * np.exp(5.150000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,21])/(EG[:,29] * EG[:,1])))
    rr = kf * (C[:,17] * C[:,21]) - kb * (C[:,29] * C[:,1])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,29] = wdot[:,29] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH2CO + O2 => CH2O + CO2
    kf = 1.000000000000000e+14 * np.exp(-3.700000000000000e+04 / (Rc * T))
    kb = 0
    rr = kf * (C[:,29] * C[:,2]) - kb * (C[:,21] * C[:,9])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]

    # Reaction CH2CO + O2 => CO + HCO + OH
    kf = 3.000000000000000e+14 * np.exp(-4.000000000000000e+04 / (Rc * T))
    kb = 0
    rr = kf * (C[:,29] * C[:,2]) - kb * (C[:,8] * C[:,22] * C[:,5])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH2CO + O2 => HCCO + HO2
    kf = 1.360000000000000e+07 * (T ** 2.0) * np.exp(-5.452643000000000e+04 / (Rc * T))
    kb = 0
    rr = kf * (C[:,29] * C[:,2]) - kb * (C[:,30] * C[:,7])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,30] = wdot[:,30] + rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]

    # Reaction CH2CO + O <=> HCCO + OH
    kf = 1.000000000000000e+13 * np.exp(-8.000000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,29] * EG[:,3])/(EG[:,30] * EG[:,5])))
    rr = kf * (C[:,29] * C[:,3]) - kb * (C[:,30] * C[:,5])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,30] = wdot[:,30] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH2CO + O <=> CH2 + CO2
    kf = 1.800000000000000e+12 * np.exp(-1.350000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,29] * EG[:,3])/(EG[:,14] * EG[:,9])))
    rr = kf * (C[:,29] * C[:,3]) - kb * (C[:,14] * C[:,9])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]

    # Reaction CH2(S) + CH2CO <=> C2H4 + CO
    kf = 1.600000000000000e+14 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,29])/(EG[:,26] * EG[:,8])))
    rr = kf * (C[:,15] * C[:,29]) - kb * (C[:,26] * C[:,8])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,26] = wdot[:,26] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction CH2CO + CH3 <=> C2H5 + CO
    kf = 4.769000000000001e+04 * (T ** 2.312) * np.exp(-9.468000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,29] * EG[:,13])/(EG[:,25] * EG[:,8])))
    rr = kf * (C[:,29] * C[:,13]) - kb * (C[:,25] * C[:,8])
    wdot[:,29] = wdot[:,29] - rr[:]
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction CH + CO (+M) <=> HCCO (+M)
    M = ctot + 2.000000000000000e+00*C[:,24] + 1.000000000000000e+00*C[:,12] + 5.000000000000000e-01*C[:,8] + 1.000000000000000e+00*C[:,9] + 1.000000000000000e+00*C[:,0] + 5.000000000000000e+00*C[:,4]
    k0 = 2.690000000000000e+28 * (T ** -3.74) * np.exp(-1.936000000000000e+03 / (Rc * T))
    kinf = 5.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.5757) * np.exp(-T/237.00000000000003) + 0.5757 * np.exp(-T/1652.0) + np.exp(-5069.0/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,17] * EG[:,8])/(EG[:,30]* pfac**-1.0)))
    rr = kf * (C[:,17] * C[:,8]) - kb * (C[:,30])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,8] = wdot[:,8] - rr[:]
    wdot[:,30] = wdot[:,30] + rr[:]

    # Reaction HCCO + O2 => 2 CO + OH
    kf = 1.910000000000000e+11 * (T ** -0.02) * np.exp(-1.020000000000000e+03 / (Rc * T))
    kb = 0
    rr = kf * (C[:,30] * C[:,2]) - kb * (C[:,8]**2.0 * C[:,5])
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,8] = wdot[:,8] + 2.00 * rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction HCCO + O2 => CO + CO2 + H
    kf = 4.780000000000000e+12 * (T ** -0.142) * np.exp(-1.150000000000000e+03 / (Rc * T))
    kb = 0
    rr = kf * (C[:,30] * C[:,2]) - kb * (C[:,8] * C[:,9] * C[:,1])
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction HCCO + O2 => CO + HCO + O
    kf = 2.180000000000000e+02 * (T ** 2.692) * np.exp(-3.541000000000000e+03 / (Rc * T))
    kb = 0
    rr = kf * (C[:,30] * C[:,2]) - kb * (C[:,8] * C[:,22] * C[:,3])
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction HCCO + OH <=> CO + HCOH
    kf = 1.500000000000000e+14 * (T ** -0.0575) * np.exp(-2.607700000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,30] * EG[:,5])/(EG[:,8] * EG[:,23])))
    rr = kf * (C[:,30] * C[:,5]) - kb * (C[:,8] * C[:,23])
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,23] = wdot[:,23] + rr[:]

    # Reaction HCCO + O => 2 CO + H
    kf = 8.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = 0
    rr = kf * (C[:,30] * C[:,3]) - kb * (C[:,8]**2.0 * C[:,1])
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + 2.00 * rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH2 + HCCO <=> C2H3 + CO
    kf = 1.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,30])/(EG[:,27] * EG[:,8])))
    rr = kf * (C[:,14] * C[:,30]) - kb * (C[:,27] * C[:,8])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction H + HCCO <=> CH2(S) + CO
    kf = 1.020000000000000e+14 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,30])/(EG[:,15] * EG[:,8])))
    rr = kf * (C[:,1] * C[:,30]) - kb * (C[:,15] * C[:,8])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,15] = wdot[:,15] + rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]

    # Reaction C2H4 + CH2(S) <=> C2H3 + CH3
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=1.770000000000000e+19 * (T[i] ** -1.94) * np.exp(-6.790000000000000e+03 / (Rc * T[i])) + 4.300000000000000e+12 * (T[i] ** 0.19) * np.exp(1.104100000000000e+02 / (Rc * T[i]))
            kf[i]h=1.770000000000000e+19 * (T[i] ** -1.94) * np.exp(-6.790000000000000e+03 / (Rc * T[i])) + 4.300000000000000e+12 * (T[i] ** 0.19) * np.exp(1.104100000000000e+02 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=1.680000000000000e+19 * (T[i] ** -1.8) * np.exp(-4.310000000000000e+03 / (Rc * T[i])) + 2.260000000000000e+11 * (T[i] ** 0.54) * np.exp(-4.781000000000000e+01 / (Rc * T[i]))
            kf[i]h=4.160000000000000e+24 * (T[i] ** -3.19) * np.exp(-9.760000000000000e+03 / (Rc * T[i])) + 4.920000000000000e+09 * (T[i] ** 1.02) * np.exp(-5.997699999999999e+02 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.382867354449055e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=4.160000000000000e+24 * (T[i] ** -3.19) * np.exp(-9.760000000000000e+03 / (Rc * T[i])) + 4.920000000000000e+09 * (T[i] ** 1.02) * np.exp(-5.997699999999999e+02 / (Rc * T[i]))
            kf[i]h=7.889999999999999e+24 * (T[i] ** -3.07) * np.exp(-1.390000000000000e+04 / (Rc * T[i])) + 1.470000000000000e+08 * (T[i] ** 1.33) * np.exp(-1.228400000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=7.889999999999999e+24 * (T[i] ** -3.07) * np.exp(-1.390000000000000e+04 / (Rc * T[i])) + 1.470000000000000e+08 * (T[i] ** 1.33) * np.exp(-1.228400000000000e+03 / (Rc * T[i]))
            kf[i]h=7.359999999999999e+29 * (T[i] ** -4.28) * np.exp(-2.380000000000000e+04 / (Rc * T[i])) + 8.110000000000000e+10 * (T[i] ** 0.55) * np.exp(-5.506500000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=7.359999999999999e+29 * (T[i] ** -4.28) * np.exp(-2.380000000000000e+04 / (Rc * T[i])) + 8.110000000000000e+10 * (T[i] ** 0.55) * np.exp(-5.506500000000000e+03 / (Rc * T[i]))
            kf[i]h=7.359999999999999e+29 * (T[i] ** -4.28) * np.exp(-2.380000000000000e+04 / (Rc * T[i])) + 8.110000000000000e+10 * (T[i] ** 0.55) * np.exp(-5.506500000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][26] * EG[i][15])/(EG[i][27] * EG[i][13])))
        rr[i] = kf[i] * (C[i][26] * C[i][15]) - kb[i] * (C[i][27] * C[i][13])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]

    # Reaction H + NH3 <=> H2 + NH2
    kf = 6.400000000000000e+05 * (T ** 2.39) * np.exp(-1.017100000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,32])/(EG[:,0] * EG[:,33])))
    rr = kf * (C[:,1] * C[:,32]) - kb * (C[:,0] * C[:,33])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,32] = wdot[:,32] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,33] = wdot[:,33] + rr[:]

    # Reaction NH3 + O <=> NH2 + OH
    kf = 9.400000000000000e+06 * (T ** 1.94) * np.exp(-6.460000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,32] * EG[:,3])/(EG[:,33] * EG[:,5])))
    rr = kf * (C[:,32] * C[:,3]) - kb * (C[:,33] * C[:,5])
    wdot[:,32] = wdot[:,32] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,33] = wdot[:,33] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction HO2 + NH3 <=> H2O2 + NH2
    kf = 3.000000000000000e+11 * np.exp(-2.200000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,7] * EG[:,32])/(EG[:,6] * EG[:,33])))
    rr = kf * (C[:,7] * C[:,32]) - kb * (C[:,6] * C[:,33])
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,32] = wdot[:,32] - rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]
    wdot[:,33] = wdot[:,33] + rr[:]

    # Reaction H2 + NH <=> H + NH2
    kf = 2.100000000000000e+13 * np.exp(-1.541700000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,34])/(EG[:,1] * EG[:,33])))
    rr = kf * (C[:,0] * C[:,34]) - kb * (C[:,1] * C[:,33])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,33] = wdot[:,33] + rr[:]

    # Reaction NH2 + O <=> H + HNO
    kf = 6.600000000000000e+14 * (T ** -0.5) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,33] * EG[:,3])/(EG[:,1] * EG[:,36])))
    rr = kf * (C[:,33] * C[:,3]) - kb * (C[:,1] * C[:,36])
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]

    # Reaction NH2 + O <=> NH + OH
    kf = 7.000000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,33] * EG[:,3])/(EG[:,34] * EG[:,5])))
    rr = kf * (C[:,33] * C[:,3]) - kb * (C[:,34] * C[:,5])
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction NH2 + O <=> NH + OH
    kf = 8.600000000000000e-01 * (T ** 4.01) * np.exp(-1.673000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,33] * EG[:,3])/(EG[:,34] * EG[:,5])))
    rr = kf * (C[:,33] * C[:,3]) - kb * (C[:,34] * C[:,5])
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction NH2 + OH <=> H2O + NH
    kf = 3.300000000000000e+06 * (T ** 1.949) * np.exp(2.170000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,33] * EG[:,5])/(EG[:,4] * EG[:,34])))
    rr = kf * (C[:,33] * C[:,5]) - kb * (C[:,4] * C[:,34])
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction HO2 + NH2 <=> H2O + HNO
    kf = 5.700000000000000e+15 * (T ** -1.12) * np.exp(-7.070000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,7] * EG[:,33])/(EG[:,4] * EG[:,36])))
    rr = kf * (C[:,7] * C[:,33]) - kb * (C[:,4] * C[:,36])
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]

    # Reaction NH2 + O2 <=> HNO + OH
    kf = 2.900000000000000e-02 * (T ** 3.764) * np.exp(-1.818500000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,33] * EG[:,2])/(EG[:,36] * EG[:,5])))
    rr = kf * (C[:,33] * C[:,2]) - kb * (C[:,36] * C[:,5])
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction N + NH2 <=> 2 H + N2
    kf = 7.000000000000001e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,35] * EG[:,33])/(EG[:,1]**2.0 * EG[:,49]* pfac)))
    rr = kf * (C[:,35] * C[:,33]) - kb * (C[:,1]**2.0 * C[:,49])
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,1] = wdot[:,1] + 2.00 * rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction NH2 + NO2 <=> H2O + N2O
    kf = 2.200000000000000e+11 * (T ** 0.11) * np.exp(1.186000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,33] * EG[:,37])/(EG[:,4] * EG[:,38])))
    rr = kf * (C[:,33] * C[:,37]) - kb * (C[:,4] * C[:,38])
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,38] = wdot[:,38] + rr[:]

    # Reaction H + NH <=> H2 + N
    kf = 3.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,34])/(EG[:,0] * EG[:,35])))
    rr = kf * (C[:,1] * C[:,34]) - kb * (C[:,0] * C[:,35])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,35] = wdot[:,35] + rr[:]

    # Reaction NH + O <=> H + NO
    kf = 9.200000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,34] * EG[:,3])/(EG[:,1] * EG[:,48])))
    rr = kf * (C[:,34] * C[:,3]) - kb * (C[:,1] * C[:,48])
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction NH + OH <=> H + HNO
    kf = 3.200000000000000e+14 * (T ** -0.376) * np.exp(4.600000000000000e+01 / (Rc * T))
    kb = kf * (((EG[:,34] * EG[:,5])/(EG[:,1] * EG[:,36])))
    rr = kf * (C[:,34] * C[:,5]) - kb * (C[:,1] * C[:,36])
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]

    # Reaction NH + OH <=> H2O + N
    kf = 1.600000000000000e+07 * (T ** 1.733) * np.exp(5.760000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,34] * EG[:,5])/(EG[:,4] * EG[:,35])))
    rr = kf * (C[:,34] * C[:,5]) - kb * (C[:,4] * C[:,35])
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,35] = wdot[:,35] + rr[:]

    # Reaction NH + O2 <=> HNO + O
    kf = 2.400000000000000e+13 * np.exp(-1.385000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,34] * EG[:,2])/(EG[:,36] * EG[:,3])))
    rr = kf * (C[:,34] * C[:,2]) - kb * (C[:,36] * C[:,3])
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction NH + O2 <=> NO + OH
    kf = 9.900000000000000e+10 * np.exp(-1.530000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,34] * EG[:,2])/(EG[:,48] * EG[:,5])))
    rr = kf * (C[:,34] * C[:,2]) - kb * (C[:,48] * C[:,5])
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction N + NH <=> H + N2
    kf = 3.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,35] * EG[:,34])/(EG[:,1] * EG[:,49])))
    rr = kf * (C[:,35] * C[:,34]) - kb * (C[:,1] * C[:,49])
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction NH + NO <=> H + N2O
    kf = 2.700000000000000e+15 * (T ** -0.78) * np.exp(-2.000000000000000e+01 / (Rc * T))
    kb = kf * (((EG[:,34] * EG[:,48])/(EG[:,1] * EG[:,38])))
    rr = kf * (C[:,34] * C[:,48]) - kb * (C[:,1] * C[:,38])
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,38] = wdot[:,38] + rr[:]

    # Reaction NH + NO <=> N2 + OH
    kf = 6.800000000000000e+14 * (T ** -0.78) * np.exp(-2.000000000000000e+01 / (Rc * T))
    kb = kf * (((EG[:,34] * EG[:,48])/(EG[:,49] * EG[:,5])))
    rr = kf * (C[:,34] * C[:,48]) - kb * (C[:,49] * C[:,5])
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction NH + NO2 <=> N2O + OH
    kf = 4.100000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,34] * EG[:,37])/(EG[:,38] * EG[:,5])))
    rr = kf * (C[:,34] * C[:,37]) - kb * (C[:,38] * C[:,5])
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,38] = wdot[:,38] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction NH + NO2 <=> HNO + NO
    kf = 5.900000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,34] * EG[:,37])/(EG[:,36] * EG[:,48])))
    rr = kf * (C[:,34] * C[:,37]) - kb * (C[:,36] * C[:,48])
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction N + OH <=> H + NO
    kf = 3.800000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,35] * EG[:,5])/(EG[:,1] * EG[:,48])))
    rr = kf * (C[:,35] * C[:,5]) - kb * (C[:,1] * C[:,48])
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction N + O2 <=> NO + O
    kf = 9.030000000000000e+09 * (T ** 1.0) * np.exp(-6.498000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,35] * EG[:,2])/(EG[:,48] * EG[:,3])))
    rr = kf * (C[:,35] * C[:,2]) - kb * (C[:,48] * C[:,3])
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction N + NO <=> N2 + O
    kf = 1.128000000000000e+13 * (T ** 0.14) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,35] * EG[:,48])/(EG[:,49] * EG[:,3])))
    rr = kf * (C[:,35] * C[:,48]) - kb * (C[:,49] * C[:,3])
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction H + HNO <=> H2 + NO
    kf = 6.600000000000001e+10 * (T ** 0.94) * np.exp(-4.950000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,36])/(EG[:,0] * EG[:,48])))
    rr = kf * (C[:,1] * C[:,36]) - kb * (C[:,0] * C[:,48])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,36] = wdot[:,36] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction HNO + O <=> NO + OH
    kf = 2.300000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,36] * EG[:,3])/(EG[:,48] * EG[:,5])))
    rr = kf * (C[:,36] * C[:,3]) - kb * (C[:,48] * C[:,5])
    wdot[:,36] = wdot[:,36] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction HO2 + NO <=> NO2 + OH
    kf = 2.100000000000000e+12 * np.exp(4.970000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,7] * EG[:,48])/(EG[:,37] * EG[:,5])))
    rr = kf * (C[:,7] * C[:,48]) - kb * (C[:,37] * C[:,5])
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,37] = wdot[:,37] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction NO + O (+M) <=> NO2 (+M)
    M = ctot + 5.000000000000000e+00*C[:,9] + 9.000000000000000e+00*C[:,4] + 3.400000000000000e+00*C[:,38] + 8.000000000000000e-01*C[:,48] + 5.200000000000000e+00*C[:,37] + -2.000000000000000e-01*C[:,2]
    k0 = 9.440000000000001e+24 * (T ** -2.87) * np.exp(-1.551000000000000e+03 / (Rc * T))
    kinf = 1.300000000000000e+15 * (T ** -0.75) * np.exp(-0.000000000000000e+00 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.962) * np.exp(-T/10.0) + 0.962 * np.exp(-T/7962.000000000001)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,48] * EG[:,3])/(EG[:,37]* pfac**-1.0)))
    rr = kf * (C[:,48] * C[:,3]) - kb * (C[:,37])
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,37] = wdot[:,37] + rr[:]

    # Reaction NO2 + O <=> NO + O2
    kf = 5.860000000000000e+12 * np.exp(2.380000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,37] * EG[:,3])/(EG[:,48] * EG[:,2])))
    rr = kf * (C[:,37] * C[:,3]) - kb * (C[:,48] * C[:,2])
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction H + N2O <=> N2 + OH
    kf = 6.400000000000001e+07 * (T ** 1.835) * np.exp(-1.349200000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,38])/(EG[:,49] * EG[:,5])))
    rr = kf * (C[:,1] * C[:,38]) - kb * (C[:,49] * C[:,5])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,38] = wdot[:,38] - rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction N2O + O <=> N2 + O2
    kf = 3.690000000000000e+12 * np.exp(-1.593600000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,38] * EG[:,3])/(EG[:,49] * EG[:,2])))
    rr = kf * (C[:,38] * C[:,3]) - kb * (C[:,49] * C[:,2])
    wdot[:,38] = wdot[:,38] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction N2O + O <=> 2 NO
    kf = 9.150000000000000e+13 * np.exp(-2.767900000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,38] * EG[:,3])/(EG[:,48]**2.0)))
    rr = kf * (C[:,38] * C[:,3]) - kb * (C[:,48]**2.0)
    wdot[:,38] = wdot[:,38] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,48] = wdot[:,48] + 2.00 * rr[:]

    # Reaction N2O + OH <=> HO2 + N2
    kf = 1.300000000000000e-02 * (T ** 4.72) * np.exp(-3.656000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,38] * EG[:,5])/(EG[:,7] * EG[:,49])))
    rr = kf * (C[:,38] * C[:,5]) - kb * (C[:,7] * C[:,49])
    wdot[:,38] = wdot[:,38] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction N2O + OH <=> HNO + NO
    kf = 1.200000000000000e-04 * (T ** 4.33) * np.exp(-2.508000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,38] * EG[:,5])/(EG[:,36] * EG[:,48])))
    rr = kf * (C[:,38] * C[:,5]) - kb * (C[:,36] * C[:,48])
    wdot[:,38] = wdot[:,38] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction N2O + NO <=> N2 + NO2
    kf = 5.300000000000000e+05 * (T ** 2.23) * np.exp(-4.628100000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,38] * EG[:,48])/(EG[:,49] * EG[:,37])))
    rr = kf * (C[:,38] * C[:,48]) - kb * (C[:,49] * C[:,37])
    wdot[:,38] = wdot[:,38] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]
    wdot[:,37] = wdot[:,37] + rr[:]

    # Reaction HCN + M <=> CN + H + M
    kf = 3.400000000000000e+35 * (T ** -5.13) * np.exp(-1.330000000000000e+05 / (Rc * T))
    kb = kf * (((EG[:,31])/(EG[:,40] * EG[:,1]* pfac)))
    rr = (ctot +9.000000000000000e+00*C[:,4]\
    +-1.000000000000000e+00*C[:,49]\
    +5.000000000000000e-01*C[:,2]\
    )*(kf * (C[:,31]) - kb * (C[:,40] * C[:,1]))
    wdot[:,31] = wdot[:,31] - rr[:]
    wdot[:,40] = wdot[:,40] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction HCN + N2 <=> CN + H + N2
    kf = 3.600000000000000e+26 * (T ** -2.6) * np.exp(-1.248900000000000e+05 / (Rc * T))
    kb = kf * (((EG[:,31] * EG[:,49])/(EG[:,40] * EG[:,1] * EG[:,49]* pfac)))
    rr = kf * (C[:,31] * C[:,49]) - kb * (C[:,40] * C[:,1] * C[:,49])
    wdot[:,31] = wdot[:,31] - rr[:]
    wdot[:,49] = wdot[:,49] - rr[:]
    wdot[:,40] = wdot[:,40] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction HCN + M <=> HNC + M
    kf = 1.600000000000000e+26 * (T ** -3.23) * np.exp(-5.490000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,31])/(EG[:,39])))
    rr = (ctot +1.000000000000000e+00*C[:,9]\
    +6.000000000000000e+00*C[:,4]\
    )*(kf * (C[:,31]) - kb * (C[:,39]))
    wdot[:,31] = wdot[:,31] - rr[:]
    wdot[:,39] = wdot[:,39] + rr[:]

    # Reaction CN + H2 <=> H + HCN
    kf = 1.100000000000000e+05 * (T ** 2.6) * np.exp(-1.908000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,40] * EG[:,0])/(EG[:,1] * EG[:,31])))
    rr = kf * (C[:,40] * C[:,0]) - kb * (C[:,1] * C[:,31])
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction HCN + O <=> H + NCO
    kf = 1.400000000000000e+04 * (T ** 2.64) * np.exp(-4.980000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,31] * EG[:,3])/(EG[:,1] * EG[:,43])))
    rr = kf * (C[:,31] * C[:,3]) - kb * (C[:,1] * C[:,43])
    wdot[:,31] = wdot[:,31] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]

    # Reaction HCN + O <=> CO + NH
    kf = 3.500000000000000e+03 * (T ** 2.64) * np.exp(-4.980000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,31] * EG[:,3])/(EG[:,8] * EG[:,34])))
    rr = kf * (C[:,31] * C[:,3]) - kb * (C[:,8] * C[:,34])
    wdot[:,31] = wdot[:,31] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction HCN + O <=> CN + OH
    kf = 4.200000000000000e+10 * (T ** 0.4) * np.exp(-2.066500000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,31] * EG[:,3])/(EG[:,40] * EG[:,5])))
    rr = kf * (C[:,31] * C[:,3]) - kb * (C[:,40] * C[:,5])
    wdot[:,31] = wdot[:,31] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,40] = wdot[:,40] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction HCN + OH <=> CN + H2O
    kf = 3.900000000000000e+06 * (T ** 1.83) * np.exp(-1.030000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,31] * EG[:,5])/(EG[:,40] * EG[:,4])))
    rr = kf * (C[:,31] * C[:,5]) - kb * (C[:,40] * C[:,4])
    wdot[:,31] = wdot[:,31] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,40] = wdot[:,40] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction HCN + OH <=> H + HNCO
    kf = 2.000000000000000e-03 * (T ** 4.0) * np.exp(-1.000000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,31] * EG[:,5])/(EG[:,1] * EG[:,41])))
    rr = kf * (C[:,31] * C[:,5]) - kb * (C[:,1] * C[:,41])
    wdot[:,31] = wdot[:,31] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,41] = wdot[:,41] + rr[:]

    # Reaction HCN + OH <=> CO + NH2
    kf = 7.800000000000000e-04 * (T ** 4.0) * np.exp(-4.000000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,31] * EG[:,5])/(EG[:,8] * EG[:,33])))
    rr = kf * (C[:,31] * C[:,5]) - kb * (C[:,8] * C[:,33])
    wdot[:,31] = wdot[:,31] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,33] = wdot[:,33] + rr[:]

    # Reaction H + HNC <=> H + HCN
    kf = 7.800000000000000e+13 * np.exp(-3.600000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,39])/(EG[:,1] * EG[:,31])))
    rr = kf * (C[:,1] * C[:,39]) - kb * (C[:,1] * C[:,31])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,39] = wdot[:,39] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction HNC + O <=> CO + NH
    kf = 4.600000000000000e+12 * np.exp(-2.200000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,39] * EG[:,3])/(EG[:,8] * EG[:,34])))
    rr = kf * (C[:,39] * C[:,3]) - kb * (C[:,8] * C[:,34])
    wdot[:,39] = wdot[:,39] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction HNC + OH <=> H + HNCO
    kf = 3.600000000000000e+12 * np.exp(4.790000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,39] * EG[:,5])/(EG[:,1] * EG[:,41])))
    rr = kf * (C[:,39] * C[:,5]) - kb * (C[:,1] * C[:,41])
    wdot[:,39] = wdot[:,39] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,41] = wdot[:,41] + rr[:]

    # Reaction HNC + OH <=> CN + H2O
    kf = 3.000000000000000e+02 * (T ** 3.16) * np.exp(-1.060000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,39] * EG[:,5])/(EG[:,40] * EG[:,4])))
    rr = kf * (C[:,39] * C[:,5]) - kb * (C[:,40] * C[:,4])
    wdot[:,39] = wdot[:,39] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,40] = wdot[:,40] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CN + O <=> CO + N
    kf = 1.900000000000000e+12 * (T ** 0.46) * np.exp(-7.230000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,40] * EG[:,3])/(EG[:,8] * EG[:,35])))
    rr = kf * (C[:,40] * C[:,3]) - kb * (C[:,8] * C[:,35])
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,35] = wdot[:,35] + rr[:]

    # Reaction CN + OH <=> H + NCO
    kf = 1.000000000000000e+15 * (T ** -0.437) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,40] * EG[:,5])/(EG[:,1] * EG[:,43])))
    rr = kf * (C[:,40] * C[:,5]) - kb * (C[:,1] * C[:,43])
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]

    # Reaction CN + O2 <=> NCO + O
    kf = 5.800000000000000e+12 * np.exp(4.170000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,40] * EG[:,2])/(EG[:,43] * EG[:,3])))
    rr = kf * (C[:,40] * C[:,2]) - kb * (C[:,43] * C[:,3])
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction CN + O2 <=> CO + NO
    kf = 1.400000000000000e+12 * np.exp(4.170000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,40] * EG[:,2])/(EG[:,8] * EG[:,48])))
    rr = kf * (C[:,40] * C[:,2]) - kb * (C[:,8] * C[:,48])
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction CN + NO <=> N + NCO
    kf = 9.600000000000000e+13 * np.exp(-4.210000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,40] * EG[:,48])/(EG[:,35] * EG[:,43])))
    rr = kf * (C[:,40] * C[:,48]) - kb * (C[:,35] * C[:,43])
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,35] = wdot[:,35] + rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]

    # Reaction CN + HNCO <=> CO + HNCN
    kf = 7.700000000000000e+13 * np.exp(-9.430000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,40] * EG[:,41])/(EG[:,8] * EG[:,45])))
    rr = kf * (C[:,40] * C[:,41]) - kb * (C[:,8] * C[:,45])
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,45] = wdot[:,45] + rr[:]

    # Reaction CN + NCO <=> CO + NCN
    kf = 1.300000000000000e+13 * np.exp(3.080000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,40] * EG[:,43])/(EG[:,8] * EG[:,44])))
    rr = kf * (C[:,40] * C[:,43]) - kb * (C[:,8] * C[:,44])
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,44] = wdot[:,44] + rr[:]

    # Reaction HNCO + M <=> CO + NH + M
    kf = 1.100000000000000e+16 * np.exp(-8.600000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,41])/(EG[:,8] * EG[:,34]* pfac)))
    rr = (ctot +5.000000000000000e-01*C[:,49]\
    )*(kf * (C[:,41]) - kb * (C[:,8] * C[:,34]))
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction H + HNCO <=> CO + NH2
    kf = 3.600000000000000e+04 * (T ** 2.49) * np.exp(-2.345000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,41])/(EG[:,8] * EG[:,33])))
    rr = kf * (C[:,1] * C[:,41]) - kb * (C[:,8] * C[:,33])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,33] = wdot[:,33] + rr[:]

    # Reaction H + HNCO <=> H2 + NCO
    kf = 9.000000000000000e+07 * (T ** 1.66) * np.exp(-1.390000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,41])/(EG[:,0] * EG[:,43])))
    rr = kf * (C[:,1] * C[:,41]) - kb * (C[:,0] * C[:,43])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]

    # Reaction HNCO + O <=> NCO + OH
    kf = 2.200000000000000e+06 * (T ** 2.11) * np.exp(-1.143000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,41] * EG[:,3])/(EG[:,43] * EG[:,5])))
    rr = kf * (C[:,41] * C[:,3]) - kb * (C[:,43] * C[:,5])
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction HNCO + O <=> CO2 + NH
    kf = 9.600000000000000e+07 * (T ** 1.41) * np.exp(-8.520000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,41] * EG[:,3])/(EG[:,9] * EG[:,34])))
    rr = kf * (C[:,41] * C[:,3]) - kb * (C[:,9] * C[:,34])
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction HNCO + O <=> CO + HNO
    kf = 1.500000000000000e+08 * (T ** 1.57) * np.exp(-4.401200000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,41] * EG[:,3])/(EG[:,8] * EG[:,36])))
    rr = kf * (C[:,41] * C[:,3]) - kb * (C[:,8] * C[:,36])
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]

    # Reaction HNCO + OH <=> H2O + NCO
    kf = 3.500000000000000e+07 * (T ** 1.5) * np.exp(-3.600000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,41] * EG[:,5])/(EG[:,4] * EG[:,43])))
    rr = kf * (C[:,41] * C[:,5]) - kb * (C[:,4] * C[:,43])
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]

    # Reaction HNCO + HO2 <=> H2O2 + NCO
    kf = 3.000000000000000e+11 * np.exp(-2.200000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,41] * EG[:,7])/(EG[:,6] * EG[:,43])))
    rr = kf * (C[:,41] * C[:,7]) - kb * (C[:,6] * C[:,43])
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]

    # Reaction HNCO + O2 <=> CO2 + HNO
    kf = 2.000000000000000e+13 * np.exp(-5.890000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,41] * EG[:,2])/(EG[:,9] * EG[:,36])))
    rr = kf * (C[:,41] * C[:,2]) - kb * (C[:,9] * C[:,36])
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]

    # Reaction H2O + HNCO <=> CO2 + NH3
    kf = 2.000000000000000e+13 * np.exp(-4.850000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,4] * EG[:,41])/(EG[:,9] * EG[:,32])))
    rr = kf * (C[:,4] * C[:,41]) - kb * (C[:,9] * C[:,32])
    wdot[:,4] = wdot[:,4] - rr[:]
    wdot[:,41] = wdot[:,41] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,32] = wdot[:,32] + rr[:]

    # Reaction HCNO <=> HCN + O
    if P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=2.000000000000000e+30 * (T[i] ** -6.03) * np.exp(-6.073300000000000e+04 / (Rc * T[i]))
            kf[i]h=2.000000000000000e+30 * (T[i] ** -6.03) * np.exp(-6.073300000000000e+04 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=1.152608845149651e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=4.200000000000000e+31 * (T[i] ** -6.12) * np.exp(-6.121000000000000e+04 / (Rc * T[i]))
            kf[i]h=5.900000000000000e+31 * (T[i] ** -5.85) * np.exp(-6.193500000000000e+04 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    else:
    for i in range(veclen):
            kf[i]l=5.900000000000000e+31 * (T[i] ** -5.85) * np.exp(-6.193500000000000e+04 / (Rc * T[i]))
            kf[i]h=5.900000000000000e+31 * (T[i] ** -5.85) * np.exp(-6.193500000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][42])/(EG[i][31] * EG[i][3]* pfac)))
        rr[i] = kf[i] * (C[i][42]) - kb[i] * (C[i][31] * C[i][3])
    wdot[:,42] = wdot[:,42] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction H + HCNO <=> HCN + OH
    kf = 7.200000000000000e+10 * (T ** 0.841) * np.exp(-8.612000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,42])/(EG[:,31] * EG[:,5])))
    rr = kf * (C[:,1] * C[:,42]) - kb * (C[:,31] * C[:,5])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,42] = wdot[:,42] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction HCNO + O <=> HCO + NO
    kf = 6.300000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,42] * EG[:,3])/(EG[:,22] * EG[:,48])))
    rr = kf * (C[:,42] * C[:,3]) - kb * (C[:,22] * C[:,48])
    wdot[:,42] = wdot[:,42] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction HCNO + O <=> NCO + OH
    kf = 7.000000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,42] * EG[:,3])/(EG[:,43] * EG[:,5])))
    rr = kf * (C[:,42] * C[:,3]) - kb * (C[:,43] * C[:,5])
    wdot[:,42] = wdot[:,42] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction HCNO + OH <=> HCO + HNO
    kf = 6.000000000000000e+12 * np.exp(1.490000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,42] * EG[:,5])/(EG[:,22] * EG[:,36])))
    rr = kf * (C[:,42] * C[:,5]) - kb * (C[:,22] * C[:,36])
    wdot[:,42] = wdot[:,42] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]

    # Reaction NCO + M <=> CO + N + M
    kf = 2.200000000000000e+14 * np.exp(-5.405000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,43])/(EG[:,8] * EG[:,35]* pfac)))
    rr = (ctot +5.000000000000000e-01*C[:,49]\
    )*(kf * (C[:,43]) - kb * (C[:,8] * C[:,35]))
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,35] = wdot[:,35] + rr[:]

    # Reaction H + NCO <=> CO + NH
    kf = 7.200000000000000e+13 * np.exp(-1.000000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,43])/(EG[:,8] * EG[:,34])))
    rr = kf * (C[:,1] * C[:,43]) - kb * (C[:,8] * C[:,34])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction NCO + O <=> CO + NO
    kf = 2.000000000000000e+15 * (T ** -0.5) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,43] * EG[:,3])/(EG[:,8] * EG[:,48])))
    rr = kf * (C[:,43] * C[:,3]) - kb * (C[:,8] * C[:,48])
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction NCO + OH <=> CO + H + NO
    kf = 8.300000000000000e+12 * (T ** -0.05) * np.exp(-1.804200000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,43] * EG[:,5])/(EG[:,8] * EG[:,1] * EG[:,48]* pfac)))
    rr = kf * (C[:,43] * C[:,5]) - kb * (C[:,8] * C[:,1] * C[:,48])
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction HO2 + NCO <=> HNCO + O2
    kf = 2.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,7] * EG[:,43])/(EG[:,41] * EG[:,2])))
    rr = kf * (C[:,7] * C[:,43]) - kb * (C[:,41] * C[:,2])
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,41] = wdot[:,41] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction NCO + O2 <=> CO2 + NO
    kf = 2.000000000000000e+12 * np.exp(-2.000000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,43] * EG[:,2])/(EG[:,9] * EG[:,48])))
    rr = kf * (C[:,43] * C[:,2]) - kb * (C[:,9] * C[:,48])
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction NCO + NO <=> CO + N2O
    kf = 4.000000000000000e+19 * (T ** -2.19) * np.exp(-1.743000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,43] * EG[:,48])/(EG[:,8] * EG[:,38])))
    rr = kf * (C[:,43] * C[:,48]) - kb * (C[:,8] * C[:,38])
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,38] = wdot[:,38] + rr[:]

    # Reaction NCO + NO <=> CO2 + N2
    kf = 1.500000000000000e+21 * (T ** -2.74) * np.exp(-1.824000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,43] * EG[:,48])/(EG[:,9] * EG[:,49])))
    rr = kf * (C[:,43] * C[:,48]) - kb * (C[:,9] * C[:,49])
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction NCO + NO2 <=> CO2 + N2O
    kf = 3.000000000000000e+12 * np.exp(7.070000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,43] * EG[:,37])/(EG[:,9] * EG[:,38])))
    rr = kf * (C[:,43] * C[:,37]) - kb * (C[:,9] * C[:,38])
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,38] = wdot[:,38] + rr[:]

    # Reaction N + NCO <=> CO + N2
    kf = 2.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,35] * EG[:,43])/(EG[:,8] * EG[:,49])))
    rr = kf * (C[:,35] * C[:,43]) - kb * (C[:,8] * C[:,49])
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction CO + NO2 <=> CO2 + NO
    kf = 9.000000000000000e+13 * np.exp(-3.380000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,8] * EG[:,37])/(EG[:,9] * EG[:,48])))
    rr = kf * (C[:,8] * C[:,37]) - kb * (C[:,9] * C[:,48])
    wdot[:,8] = wdot[:,8] - rr[:]
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction CO + N2O <=> CO2 + N2
    kf = 2.700000000000000e+11 * np.exp(-2.023700000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,8] * EG[:,38])/(EG[:,9] * EG[:,49])))
    rr = kf * (C[:,8] * C[:,38]) - kb * (C[:,9] * C[:,49])
    wdot[:,8] = wdot[:,8] - rr[:]
    wdot[:,38] = wdot[:,38] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction CO2 + N <=> CO + NO
    kf = 2.000000000000000e+12 * np.exp(-2.000000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,9] * EG[:,35])/(EG[:,8] * EG[:,48])))
    rr = kf * (C[:,9] * C[:,35]) - kb * (C[:,8] * C[:,48])
    wdot[:,9] = wdot[:,9] - rr[:]
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction CN + CO2 <=> CO + NCO
    kf = 3.700000000000000e+06 * (T ** 2.16) * np.exp(-2.690000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,40] * EG[:,9])/(EG[:,8] * EG[:,43])))
    rr = kf * (C[:,40] * C[:,9]) - kb * (C[:,8] * C[:,43])
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,9] = wdot[:,9] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]

    # Reaction CH2O + CN <=> HCN + HCO
    kf = 1.700000000000000e+03 * (T ** 2.72) * np.exp(1.427000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,21] * EG[:,40])/(EG[:,31] * EG[:,22])))
    rr = kf * (C[:,21] * C[:,40]) - kb * (C[:,31] * C[:,22])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]

    # Reaction CH2O + NCO <=> HCO + HNCO
    kf = 6.000000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,21] * EG[:,43])/(EG[:,22] * EG[:,41])))
    rr = kf * (C[:,21] * C[:,43]) - kb * (C[:,22] * C[:,41])
    wdot[:,21] = wdot[:,21] - rr[:]
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]
    wdot[:,41] = wdot[:,41] + rr[:]

    # Reaction HCO + NO <=> CO + HNO
    kf = 6.900000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,22] * EG[:,48])/(EG[:,8] * EG[:,36])))
    rr = kf * (C[:,22] * C[:,48]) - kb * (C[:,8] * C[:,36])
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]

    # Reaction HCO + HNO <=> CH2O + NO
    kf = 5.800000000000001e-01 * (T ** 3.84) * np.exp(-1.150000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,22] * EG[:,36])/(EG[:,21] * EG[:,48])))
    rr = kf * (C[:,22] * C[:,36]) - kb * (C[:,21] * C[:,48])
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,36] = wdot[:,36] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction HCO + NO2 <=> CO2 + H + NO
    kf = 2.300000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,22] * EG[:,37])/(EG[:,9] * EG[:,1] * EG[:,48]* pfac)))
    rr = kf * (C[:,22] * C[:,37]) - kb * (C[:,9] * C[:,1] * C[:,48])
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction HCO + NCO <=> CO + HNCO
    kf = 3.600000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,22] * EG[:,43])/(EG[:,8] * EG[:,41])))
    rr = kf * (C[:,22] * C[:,43]) - kb * (C[:,8] * C[:,41])
    wdot[:,22] = wdot[:,22] - rr[:]
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,41] = wdot[:,41] + rr[:]

    # Reaction CH4 + NH2 <=> CH3 + NH3
    kf = 1.500000000000000e+03 * (T ** 3.01) * np.exp(-9.940000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,12] * EG[:,33])/(EG[:,13] * EG[:,32])))
    rr = kf * (C[:,12] * C[:,33]) - kb * (C[:,13] * C[:,32])
    wdot[:,12] = wdot[:,12] - rr[:]
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,32] = wdot[:,32] + rr[:]

    # Reaction CH4 + CN <=> CH3 + HCN
    kf = 8.600000000000000e+05 * (T ** 2.3) * np.exp(3.200000000000000e+01 / (Rc * T))
    kb = kf * (((EG[:,12] * EG[:,40])/(EG[:,13] * EG[:,31])))
    rr = kf * (C[:,12] * C[:,40]) - kb * (C[:,13] * C[:,31])
    wdot[:,12] = wdot[:,12] - rr[:]
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction CH4 + NCO <=> CH3 + HNCO
    kf = 9.800000000000000e+12 * np.exp(-8.120000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,12] * EG[:,43])/(EG[:,13] * EG[:,41])))
    rr = kf * (C[:,12] * C[:,43]) - kb * (C[:,13] * C[:,41])
    wdot[:,12] = wdot[:,12] - rr[:]
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,13] = wdot[:,13] + rr[:]
    wdot[:,41] = wdot[:,41] + rr[:]

    # Reaction CH3 + NH2 <=> CH4 + NH
    kf = 2.800000000000000e+06 * (T ** 1.94) * np.exp(-9.210000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,33])/(EG[:,12] * EG[:,34])))
    rr = kf * (C[:,13] * C[:,33]) - kb * (C[:,12] * C[:,34])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction CH3 + NH2 <=> CH2 + NH3
    kf = 1.600000000000000e+06 * (T ** 1.87) * np.exp(-7.570000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,33])/(EG[:,14] * EG[:,32])))
    rr = kf * (C[:,13] * C[:,33]) - kb * (C[:,14] * C[:,32])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,32] = wdot[:,32] + rr[:]

    # Reaction CH3 + NH <=> CH2NH + H
    kf = 4.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,34])/(EG[:,46] * EG[:,1])))
    rr = kf * (C[:,13] * C[:,34]) - kb * (C[:,46] * C[:,1])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,46] = wdot[:,46] + rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]

    # Reaction CH3 + NH <=> CH4 + N
    kf = 8.200000000000001e+05 * (T ** 1.87) * np.exp(-5.852000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,34])/(EG[:,12] * EG[:,35])))
    rr = kf * (C[:,13] * C[:,34]) - kb * (C[:,12] * C[:,35])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,34] = wdot[:,34] - rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]
    wdot[:,35] = wdot[:,35] + rr[:]

    # Reaction CH3 + N <=> H + H2CN
    kf = 7.100000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,35])/(EG[:,1] * EG[:,47])))
    rr = kf * (C[:,13] * C[:,35]) - kb * (C[:,1] * C[:,47])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,47] = wdot[:,47] + rr[:]

    # Reaction CH3 + HNO <=> CH4 + NO
    kf = 1.500000000000000e+11 * (T ** 0.76) * np.exp(-3.480000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,36])/(EG[:,12] * EG[:,48])))
    rr = kf * (C[:,13] * C[:,36]) - kb * (C[:,12] * C[:,48])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,36] = wdot[:,36] - rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction CH3 + NO <=> H2O + HCN
    kf = 1.500000000000000e-01 * (T ** 3.52) * np.exp(-3.950000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,48])/(EG[:,4] * EG[:,31])))
    rr = kf * (C[:,13] * C[:,48]) - kb * (C[:,4] * C[:,31])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction CH3 + NO <=> H2CN + OH
    kf = 1.500000000000000e-01 * (T ** 3.52) * np.exp(-3.950000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,48])/(EG[:,47] * EG[:,5])))
    rr = kf * (C[:,13] * C[:,48]) - kb * (C[:,47] * C[:,5])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,47] = wdot[:,47] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH3 + NO2 <=> CH3O + NO
    kf = 1.100000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,13] * EG[:,37])/(EG[:,19] * EG[:,48])))
    rr = kf * (C[:,13] * C[:,37]) - kb * (C[:,19] * C[:,48])
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction CH2 + N2 <=> HCN + NH
    kf = 1.000000000000000e+13 * np.exp(-7.400000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,49])/(EG[:,31] * EG[:,34])))
    rr = kf * (C[:,14] * C[:,49]) - kb * (C[:,31] * C[:,34])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,49] = wdot[:,49] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction CH2 + N <=> H + HCN
    kf = 5.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,35])/(EG[:,1] * EG[:,31])))
    rr = kf * (C[:,14] * C[:,35]) - kb * (C[:,1] * C[:,31])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction CH2 + NO <=> H + HCNO
    kf = 3.100000000000000e+12 * np.exp(3.780000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,48])/(EG[:,1] * EG[:,42])))
    rr = kf * (C[:,14] * C[:,48]) - kb * (C[:,1] * C[:,42])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,42] = wdot[:,42] + rr[:]

    # Reaction CH2 + NO <=> HCN + OH
    kf = 3.900000000000000e+11 * np.exp(3.780000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,48])/(EG[:,31] * EG[:,5])))
    rr = kf * (C[:,14] * C[:,48]) - kb * (C[:,31] * C[:,5])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH2 + NO2 <=> CH2O + NO
    kf = 5.900000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,14] * EG[:,37])/(EG[:,21] * EG[:,48])))
    rr = kf * (C[:,14] * C[:,37]) - kb * (C[:,21] * C[:,48])
    wdot[:,14] = wdot[:,14] - rr[:]
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction CH2(S) + NO <=> HCN + OH
    kf = 2.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,48])/(EG[:,31] * EG[:,5])))
    rr = kf * (C[:,15] * C[:,48]) - kb * (C[:,31] * C[:,5])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH2(S) + NO <=> CH2 + NO
    kf = 1.000000000000000e+14 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,48])/(EG[:,14] * EG[:,48])))
    rr = kf * (C[:,15] * C[:,48]) - kb * (C[:,14] * C[:,48])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction CH2(S) + N2O <=> CH2O + N2
    kf = 3.800000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,15] * EG[:,38])/(EG[:,21] * EG[:,49])))
    rr = kf * (C[:,15] * C[:,38]) - kb * (C[:,21] * C[:,49])
    wdot[:,15] = wdot[:,15] - rr[:]
    wdot[:,38] = wdot[:,38] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction CH + N2 <=> H + NCN
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=5.900000000000000e+08 * (T[i] ** 1.06) * np.exp(-1.596000000000000e+04 / (Rc * T[i]))
            kf[i]h=5.900000000000000e+08 * (T[i] ** 1.06) * np.exp(-1.596000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=5.900000000000000e+08 * (T[i] ** 1.06) * np.exp(-1.595000000000000e+04 / (Rc * T[i]))
            kf[i]h=6.200000000000000e+08 * (T[i] ** 1.05) * np.exp(-1.596000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.032211564717057e+01
            logP[i]h=1.152608845149651e+01
    elif P < 3.039750000000000e+05:
    for i in range(veclen):
            kf[i]l=6.200000000000000e+08 * (T[i] ** 1.05) * np.exp(-1.596000000000000e+04 / (Rc * T[i]))
            kf[i]h=9.000000000000000e+08 * (T[i] ** 1.01) * np.exp(-1.612000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.262470074016462e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=9.000000000000000e+08 * (T[i] ** 1.01) * np.exp(-1.612000000000000e+04 / (Rc * T[i]))
            kf[i]h=2.500000000000000e+09 * (T[i] ** 0.89) * np.exp(-1.662000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.262470074016462e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.039749999999998e+06:
    for i in range(veclen):
            kf[i]l=2.500000000000000e+09 * (T[i] ** 0.89) * np.exp(-1.662000000000000e+04 / (Rc * T[i]))
            kf[i]h=9.200000000000000e+09 * (T[i] ** 0.75) * np.exp(-1.741000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.492728583315866e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=9.200000000000000e+09 * (T[i] ** 0.75) * np.exp(-1.741000000000000e+04 / (Rc * T[i]))
            kf[i]h=3.000000000000000e+10 * (T[i] ** 0.62) * np.exp(-1.848000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.492728583315866e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.039750000000001e+07:
    for i in range(veclen):
            kf[i]l=3.000000000000000e+10 * (T[i] ** 0.62) * np.exp(-1.848000000000000e+04 / (Rc * T[i]))
            kf[i]h=3.800000000000000e+10 * (T[i] ** 0.62) * np.exp(-1.946000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.722987092615271e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=3.800000000000000e+10 * (T[i] ** 0.62) * np.exp(-1.946000000000000e+04 / (Rc * T[i]))
            kf[i]h=9.500000000000000e+09 * (T[i] ** 0.81) * np.exp(-2.034000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.722987092615271e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=9.500000000000000e+09 * (T[i] ** 0.81) * np.exp(-2.034000000000000e+04 / (Rc * T[i]))
            kf[i]h=9.500000000000000e+09 * (T[i] ** 0.81) * np.exp(-2.034000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][17] * EG[i][49])/(EG[i][1] * EG[i][44])))
        rr[i] = kf[i] * (C[i][17] * C[i][49]) - kb[i] * (C[i][1] * C[i][44])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,49] = wdot[:,49] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,44] = wdot[:,44] + rr[:]

    # Reaction CH + N2 <=> HNCN
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=6.000000000000001e+23 * (T[i] ** -4.41) * np.exp(-1.441000000000000e+04 / (Rc * T[i]))
            kf[i]h=6.000000000000001e+23 * (T[i] ** -4.41) * np.exp(-1.441000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=7.300000000000001e+23 * (T[i] ** -4.3) * np.exp(-1.476000000000000e+04 / (Rc * T[i]))
            kf[i]h=7.300000000000001e+23 * (T[i] ** -4.17) * np.exp(-1.520000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.032211564717057e+01
            logP[i]h=1.152608845149651e+01
    elif P < 3.039750000000000e+05:
    for i in range(veclen):
            kf[i]l=7.300000000000001e+23 * (T[i] ** -4.17) * np.exp(-1.520000000000000e+04 / (Rc * T[i]))
            kf[i]h=4.800000000000000e+23 * (T[i] ** -4.0) * np.exp(-1.557000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.262470074016462e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=4.800000000000000e+23 * (T[i] ** -4.0) * np.exp(-1.557000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.400000000000000e+23 * (T[i] ** -3.74) * np.exp(-1.582000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.262470074016462e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.039749999999998e+06:
    for i in range(veclen):
            kf[i]l=1.400000000000000e+23 * (T[i] ** -3.74) * np.exp(-1.582000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.700000000000000e+22 * (T[i] ** -3.38) * np.exp(-1.584000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.492728583315866e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.700000000000000e+22 * (T[i] ** -3.38) * np.exp(-1.584000000000000e+04 / (Rc * T[i]))
            kf[i]h=6.800000000000000e+20 * (T[i] ** -2.9) * np.exp(-1.569000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.492728583315866e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.039750000000001e+07:
    for i in range(veclen):
            kf[i]l=6.800000000000000e+20 * (T[i] ** -2.9) * np.exp(-1.569000000000000e+04 / (Rc * T[i]))
            kf[i]h=1.800000000000000e+19 * (T[i] ** -2.37) * np.exp(-1.543000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.722987092615271e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=1.800000000000000e+19 * (T[i] ** -2.37) * np.exp(-1.543000000000000e+04 / (Rc * T[i]))
            kf[i]h=3.100000000000000e+17 * (T[i] ** -1.78) * np.exp(-1.524000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.722987092615271e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=3.100000000000000e+17 * (T[i] ** -1.78) * np.exp(-1.524000000000000e+04 / (Rc * T[i]))
            kf[i]h=3.100000000000000e+17 * (T[i] ** -1.78) * np.exp(-1.524000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][17] * EG[i][49])/(EG[i][45]* pfac**-1.0)))
        rr[i] = kf[i] * (C[i][17] * C[i][49]) - kb[i] * (C[i][45])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,49] = wdot[:,49] - rr[:]
    wdot[:,45] = wdot[:,45] + rr[:]

    # Reaction CH + NH3 <=> 2 H + H2CN
    kf = 4.400000000000000e+13 * np.exp(6.300000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,32])/(EG[:,1]**2.0 * EG[:,47]* pfac)))
    rr = kf * (C[:,17] * C[:,32]) - kb * (C[:,1]**2.0 * C[:,47])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,32] = wdot[:,32] - rr[:]
    wdot[:,1] = wdot[:,1] + 2.00 * rr[:]
    wdot[:,47] = wdot[:,47] + rr[:]

    # Reaction CH + NO <=> CO + NH
    kf = 9.100000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,48])/(EG[:,8] * EG[:,34])))
    rr = kf * (C[:,17] * C[:,48]) - kb * (C[:,8] * C[:,34])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction CH + NO <=> H + NCO
    kf = 1.800000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,48])/(EG[:,1] * EG[:,43])))
    rr = kf * (C[:,17] * C[:,48]) - kb * (C[:,1] * C[:,43])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]

    # Reaction CH + NO <=> HCN + O
    kf = 7.900000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,48])/(EG[:,31] * EG[:,3])))
    rr = kf * (C[:,17] * C[:,48]) - kb * (C[:,31] * C[:,3])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction CH + NO <=> CN + OH
    kf = 1.100000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,48])/(EG[:,40] * EG[:,5])))
    rr = kf * (C[:,17] * C[:,48]) - kb * (C[:,40] * C[:,5])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,40] = wdot[:,40] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH + NO <=> HCO + N
    kf = 6.800000000000000e+12 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,48])/(EG[:,22] * EG[:,35])))
    rr = kf * (C[:,17] * C[:,48]) - kb * (C[:,22] * C[:,35])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,22] = wdot[:,22] + rr[:]
    wdot[:,35] = wdot[:,35] + rr[:]

    # Reaction CN + N <=> C + N2
    kf = 5.900000000000000e+14 * (T ** -0.4) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,40] * EG[:,35])/(EG[:,16] * EG[:,49])))
    rr = kf * (C[:,40] * C[:,35]) - kb * (C[:,16] * C[:,49])
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,16] = wdot[:,16] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction CH + N2O <=> HCN + NO
    kf = 1.900000000000000e+13 * np.exp(5.110000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,17] * EG[:,38])/(EG[:,31] * EG[:,48])))
    rr = kf * (C[:,17] * C[:,38]) - kb * (C[:,31] * C[:,48])
    wdot[:,17] = wdot[:,17] - rr[:]
    wdot[:,38] = wdot[:,38] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction C + NO <=> CN + O
    kf = 2.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,16] * EG[:,48])/(EG[:,40] * EG[:,3])))
    rr = kf * (C[:,16] * C[:,48]) - kb * (C[:,40] * C[:,3])
    wdot[:,16] = wdot[:,16] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,40] = wdot[:,40] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction C + NO <=> CO + N
    kf = 2.800000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,16] * EG[:,48])/(EG[:,8] * EG[:,35])))
    rr = kf * (C[:,16] * C[:,48]) - kb * (C[:,8] * C[:,35])
    wdot[:,16] = wdot[:,16] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,35] = wdot[:,35] + rr[:]

    # Reaction CH3O + HNO <=> CH3OH + NO
    kf = 3.200000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,19] * EG[:,36])/(EG[:,18] * EG[:,48])))
    rr = kf * (C[:,19] * C[:,36]) - kb * (C[:,18] * C[:,48])
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,36] = wdot[:,36] - rr[:]
    wdot[:,18] = wdot[:,18] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction CH3O + NO <=> CH2O + HNO
    kf = 7.500000000000000e+12 * np.exp(-2.017000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,19] * EG[:,48])/(EG[:,21] * EG[:,36])))
    rr = kf * (C[:,19] * C[:,48]) - kb * (C[:,21] * C[:,36])
    wdot[:,19] = wdot[:,19] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]

    # Reaction CH2OH + NO <=> H2O + HNCO
    kf = 1.000000000000000e+11 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,20] * EG[:,48])/(EG[:,4] * EG[:,41])))
    rr = kf * (C[:,20] * C[:,48]) - kb * (C[:,4] * C[:,41])
    wdot[:,20] = wdot[:,20] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,41] = wdot[:,41] + rr[:]

    # Reaction CH3O2 + NO <=> CH3O + NO2
    kf = 1.400000000000000e+12 * np.exp(7.150000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,11] * EG[:,48])/(EG[:,19] * EG[:,37])))
    rr = kf * (C[:,11] * C[:,48]) - kb * (C[:,19] * C[:,37])
    wdot[:,11] = wdot[:,11] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,19] = wdot[:,19] + rr[:]
    wdot[:,37] = wdot[:,37] + rr[:]

    # Reaction C2H6 + NH2 <=> C2H5 + NH3
    kf = 4.500000000000001e+01 * (T ** 3.46) * np.exp(-5.599999999999999e+03 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,33])/(EG[:,25] * EG[:,32])))
    rr = kf * (C[:,24] * C[:,33]) - kb * (C[:,25] * C[:,32])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,32] = wdot[:,32] + rr[:]

    # Reaction C2H6 + CN <=> C2H5 + HCN
    kf = 1.200000000000000e+08 * (T ** 1.8) * np.exp(9.940000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,40])/(EG[:,25] * EG[:,31])))
    rr = kf * (C[:,24] * C[:,40]) - kb * (C[:,25] * C[:,31])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,40] = wdot[:,40] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction C2H6 + NCO <=> C2H5 + HNCO
    kf = 1.500000000000000e-09 * (T ** 6.89) * np.exp(2.910000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,24] * EG[:,43])/(EG[:,25] * EG[:,41])))
    rr = kf * (C[:,24] * C[:,43]) - kb * (C[:,25] * C[:,41])
    wdot[:,24] = wdot[:,24] - rr[:]
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,25] = wdot[:,25] + rr[:]
    wdot[:,41] = wdot[:,41] + rr[:]

    # Reaction C2H5 + N <=> C2H4 + NH
    kf = 4.300000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,25] * EG[:,35])/(EG[:,26] * EG[:,34])))
    rr = kf * (C[:,25] * C[:,35]) - kb * (C[:,26] * C[:,34])
    wdot[:,25] = wdot[:,25] - rr[:]
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,26] = wdot[:,26] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction C2H4 + NH2 <=> C2H3 + NH3
    kf = 5.300000000000000e+12 * np.exp(-1.027400000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,26] * EG[:,33])/(EG[:,27] * EG[:,32])))
    rr = kf * (C[:,26] * C[:,33]) - kb * (C[:,27] * C[:,32])
    wdot[:,26] = wdot[:,26] - rr[:]
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,27] = wdot[:,27] + rr[:]
    wdot[:,32] = wdot[:,32] + rr[:]

    # Reaction C2H3 + NO <=> CH2O + HCN
    kf = 7.000000000000000e+21 * (T ** -3.382) * np.exp(-1.025000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,27] * EG[:,48])/(EG[:,21] * EG[:,31])))
    rr = kf * (C[:,27] * C[:,48]) - kb * (C[:,21] * C[:,31])
    wdot[:,27] = wdot[:,27] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction C2H2 + NCO <=> HCCO + HCN
    kf = 1.400000000000000e+12 * np.exp(-1.815000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,28] * EG[:,43])/(EG[:,30] * EG[:,31])))
    rr = kf * (C[:,28] * C[:,43]) - kb * (C[:,30] * C[:,31])
    wdot[:,28] = wdot[:,28] - rr[:]
    wdot[:,43] = wdot[:,43] - rr[:]
    wdot[:,30] = wdot[:,30] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction HCCO + N <=> CO + HCN
    kf = 5.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,30] * EG[:,35])/(EG[:,8] * EG[:,31])))
    rr = kf * (C[:,30] * C[:,35]) - kb * (C[:,8] * C[:,31])
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction HCCO + NO <=> CO + HCNO
    kf = 7.500000000000000e+12 * np.exp(6.760000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,30] * EG[:,48])/(EG[:,8] * EG[:,42])))
    rr = kf * (C[:,30] * C[:,48]) - kb * (C[:,8] * C[:,42])
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,8] = wdot[:,8] + rr[:]
    wdot[:,42] = wdot[:,42] + rr[:]

    # Reaction HCCO + NO <=> CO2 + HCN
    kf = 2.100000000000000e+12 * np.exp(6.760000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,30] * EG[:,48])/(EG[:,9] * EG[:,31])))
    rr = kf * (C[:,30] * C[:,48]) - kb * (C[:,9] * C[:,31])
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction HCCO + NO2 <=> CO2 + HCNO
    kf = 1.600000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,30] * EG[:,37])/(EG[:,9] * EG[:,42])))
    rr = kf * (C[:,30] * C[:,37]) - kb * (C[:,9] * C[:,42])
    wdot[:,30] = wdot[:,30] - rr[:]
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,9] = wdot[:,9] + rr[:]
    wdot[:,42] = wdot[:,42] + rr[:]

    # Reaction NCN + M <=> C + N2 + M
    kf = 8.900000000000000e+14 * np.exp(-6.210000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,44])/(EG[:,16] * EG[:,49]* pfac)))
    rr = (ctot )*(kf * (C[:,44]) - kb * (C[:,16] * C[:,49]))
    wdot[:,44] = wdot[:,44] - rr[:]
    wdot[:,16] = wdot[:,16] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction H + NCN <=> HNCN
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=3.900000000000000e+23 * (T[i] ** -4.34) * np.exp(-5.347000000000000e+03 / (Rc * T[i]))
            kf[i]h=3.900000000000000e+23 * (T[i] ** -4.34) * np.exp(-5.347000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=3.300000000000000e+25 * (T[i] ** -4.71) * np.exp(-4.102000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.600000000000001e+27 * (T[i] ** -5.13) * np.exp(-3.741000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.032211564717057e+01
            logP[i]h=1.152608845149651e+01
    elif P < 3.039750000000000e+05:
    for i in range(veclen):
            kf[i]l=5.600000000000001e+27 * (T[i] ** -5.13) * np.exp(-3.741000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.700000000000000e+29 * (T[i] ** -5.36) * np.exp(-3.947000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.262470074016462e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=1.700000000000000e+29 * (T[i] ** -5.36) * np.exp(-3.947000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.500000000000000e+30 * (T[i] ** -5.43) * np.exp(-4.415000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.262470074016462e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.039749999999998e+06:
    for i in range(veclen):
            kf[i]l=1.500000000000000e+30 * (T[i] ** -5.43) * np.exp(-4.415000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.600000000000000e+30 * (T[i] ** -5.34) * np.exp(-4.870000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.492728583315866e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=2.600000000000000e+30 * (T[i] ** -5.34) * np.exp(-4.870000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.200000000000000e+30 * (T[i] ** -5.09) * np.exp(-5.275000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.492728583315866e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.039750000000001e+07:
    for i in range(veclen):
            kf[i]l=1.200000000000000e+30 * (T[i] ** -5.09) * np.exp(-5.275000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.900000000000000e+29 * (T[i] ** -4.72) * np.exp(-5.476000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.722987092615271e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=1.900000000000000e+29 * (T[i] ** -4.72) * np.exp(-5.476000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.100000000000000e+27 * (T[i] ** -4.15) * np.exp(-5.370000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.722987092615271e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=5.100000000000000e+27 * (T[i] ** -4.15) * np.exp(-5.370000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.100000000000000e+27 * (T[i] ** -4.15) * np.exp(-5.370000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][1] * EG[i][44])/(EG[i][45]* pfac**-1.0)))
        rr[i] = kf[i] * (C[i][1] * C[i][44]) - kb[i] * (C[i][45])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,44] = wdot[:,44] - rr[:]
    wdot[:,45] = wdot[:,45] + rr[:]

    # Reaction H + NCN <=> HCN + N
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.032211564717057e+01
            logP[i]h=1.152608845149651e+01
    elif P < 3.039750000000000e+05:
    for i in range(veclen):
            kf[i]l=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.262470074016462e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.262470074016462e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.039749999999998e+06:
    for i in range(veclen):
            kf[i]l=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.492728583315866e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.321000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.322000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.492728583315866e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.039750000000001e+07:
    for i in range(veclen):
            kf[i]l=2.200000000000000e+11 * (T[i] ** 0.71) * np.exp(-5.322000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.300000000000000e+11 * (T[i] ** 0.7) * np.exp(-5.327000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.722987092615271e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=2.300000000000000e+11 * (T[i] ** 0.7) * np.exp(-5.327000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.500000000000000e+11 * (T[i] ** 0.69) * np.exp(-5.371000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.722987092615271e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=2.500000000000000e+11 * (T[i] ** 0.69) * np.exp(-5.371000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.500000000000000e+11 * (T[i] ** 0.69) * np.exp(-5.371000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][1] * EG[i][44])/(EG[i][31] * EG[i][35])))
        rr[i] = kf[i] * (C[i][1] * C[i][44]) - kb[i] * (C[i][31] * C[i][35])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,44] = wdot[:,44] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,35] = wdot[:,35] + rr[:]

    # Reaction H + NCN <=> HNC + N
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=3.900000000000000e-04 * (T[i] ** 4.7) * np.exp(-2.440000000000000e+03 / (Rc * T[i]))
            kf[i]h=3.900000000000000e-04 * (T[i] ** 4.7) * np.exp(-2.440000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=3.900000000000000e-04 * (T[i] ** 4.7) * np.exp(-2.440000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.000000000000000e-04 * (T[i] ** 4.7) * np.exp(-2.440000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.032211564717057e+01
            logP[i]h=1.152608845149651e+01
    elif P < 3.039750000000000e+05:
    for i in range(veclen):
            kf[i]l=4.000000000000000e-04 * (T[i] ** 4.7) * np.exp(-2.440000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.000000000000000e-04 * (T[i] ** 4.7) * np.exp(-2.438000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.262470074016462e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=4.000000000000000e-04 * (T[i] ** 4.7) * np.exp(-2.438000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.300000000000000e-04 * (T[i] ** 4.69) * np.exp(-2.434000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.262470074016462e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.039749999999998e+06:
    for i in range(veclen):
            kf[i]l=4.300000000000000e-04 * (T[i] ** 4.69) * np.exp(-2.434000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.900000000000000e-04 * (T[i] ** 4.67) * np.exp(-2.423000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.492728583315866e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=4.900000000000000e-04 * (T[i] ** 4.67) * np.exp(-2.423000000000000e+03 / (Rc * T[i]))
            kf[i]h=7.100000000000000e-04 * (T[i] ** 4.62) * np.exp(-2.408000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.492728583315866e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.039750000000001e+07:
    for i in range(veclen):
            kf[i]l=7.100000000000000e-04 * (T[i] ** 4.62) * np.exp(-2.408000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.700000000000000e-03 * (T[i] ** 4.52) * np.exp(-2.622000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.722987092615271e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=1.700000000000000e-03 * (T[i] ** 4.52) * np.exp(-2.622000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.599999999999999e-03 * (T[i] ** 4.32) * np.exp(-3.641000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.722987092615271e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=9.599999999999999e-03 * (T[i] ** 4.32) * np.exp(-3.641000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.599999999999999e-03 * (T[i] ** 4.32) * np.exp(-3.641000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][1] * EG[i][44])/(EG[i][39] * EG[i][35])))
        rr[i] = kf[i] * (C[i][1] * C[i][44]) - kb[i] * (C[i][39] * C[i][35])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,44] = wdot[:,44] - rr[:]
    wdot[:,39] = wdot[:,39] + rr[:]
    wdot[:,35] = wdot[:,35] + rr[:]

    # Reaction NCN + O <=> CN + NO
    kf = 2.500000000000000e+13 * (T ** 0.17) * np.exp(3.400000000000000e+01 / (Rc * T))
    kb = kf * (((EG[:,44] * EG[:,3])/(EG[:,40] * EG[:,48])))
    rr = kf * (C[:,44] * C[:,3]) - kb * (C[:,40] * C[:,48])
    wdot[:,44] = wdot[:,44] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,40] = wdot[:,40] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction NCN + OH <=> NCO + NH
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=8.600000000000000e+14 * (T[i] ** -0.95) * np.exp(-7.340000000000000e+02 / (Rc * T[i]))
            kf[i]h=8.600000000000000e+14 * (T[i] ** -0.95) * np.exp(-7.340000000000000e+02 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 5.066250000000003e+04:
    for i in range(veclen):
            kf[i]l=2.600000000000000e+15 * (T[i] ** -1.08) * np.exp(-1.128000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.400000000000000e+15 * (T[i] ** -1.17) * np.exp(-1.391000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.032211564717057e+01
            logP[i]h=1.083294127093656e+01
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=5.400000000000000e+15 * (T[i] ** -1.17) * np.exp(-1.391000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.700000000000000e+16 * (T[i] ** -1.3) * np.exp(-1.843000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.083294127093656e+01
            logP[i]h=1.152608845149651e+01
    elif P < 3.039750000000000e+05:
    for i in range(veclen):
            kf[i]l=1.700000000000000e+16 * (T[i] ** -1.3) * np.exp(-1.843000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.400000000000000e+17 * (T[i] ** -1.55) * np.exp(-2.791000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.262470074016462e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=1.400000000000000e+17 * (T[i] ** -1.55) * np.exp(-2.791000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.700000000000000e+18 * (T[i] ** -1.83) * np.exp(-4.143000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.262470074016462e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.039749999999998e+06:
    for i in range(veclen):
            kf[i]l=1.700000000000000e+18 * (T[i] ** -1.83) * np.exp(-4.143000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.000000000000000e+19 * (T[i] ** -2.03) * np.exp(-5.607000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.492728583315866e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.000000000000000e+19 * (T[i] ** -2.03) * np.exp(-5.607000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.200000000000000e+19 * (T[i] ** -2.08) * np.exp(-7.339000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.492728583315866e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.039750000000001e+07:
    for i in range(veclen):
            kf[i]l=2.200000000000000e+19 * (T[i] ** -2.08) * np.exp(-7.339000000000000e+03 / (Rc * T[i]))
            kf[i]h=6.400000000000000e+18 * (T[i] ** -1.88) * np.exp(-8.866000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.722987092615271e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=6.400000000000000e+18 * (T[i] ** -1.88) * np.exp(-8.866000000000000e+03 / (Rc * T[i]))
            kf[i]h=6.300000000000000e+16 * (T[i] ** -1.25) * np.exp(-1.022000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.722987092615271e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=6.300000000000000e+16 * (T[i] ** -1.25) * np.exp(-1.022000000000000e+04 / (Rc * T[i]))
            kf[i]h=6.300000000000000e+16 * (T[i] ** -1.25) * np.exp(-1.022000000000000e+04 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][44] * EG[i][5])/(EG[i][43] * EG[i][34])))
        rr[i] = kf[i] * (C[i][44] * C[i][5]) - kb[i] * (C[i][43] * C[i][34])
    wdot[:,44] = wdot[:,44] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction NCN + OH <=> HCN + NO
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=2.900000000000000e+05 * (T[i] ** 2.04) * np.exp(-1.505000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.900000000000000e+05 * (T[i] ** 2.04) * np.exp(-1.505000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 5.066250000000003e+04:
    for i in range(veclen):
            kf[i]l=6.900000000000000e+05 * (T[i] ** 1.94) * np.exp(-1.748000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.200000000000000e+06 * (T[i] ** 1.87) * np.exp(-1.902000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.032211564717057e+01
            logP[i]h=1.083294127093656e+01
    elif P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=1.200000000000000e+06 * (T[i] ** 1.87) * np.exp(-1.902000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.900000000000000e+06 * (T[i] ** 1.76) * np.exp(-2.163000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.083294127093656e+01
            logP[i]h=1.152608845149651e+01
    elif P < 3.039750000000000e+05:
    for i in range(veclen):
            kf[i]l=2.900000000000000e+06 * (T[i] ** 1.76) * np.exp(-2.163000000000000e+03 / (Rc * T[i]))
            kf[i]h=1.900000000000000e+07 * (T[i] ** 1.54) * np.exp(-2.727000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.262470074016462e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=1.900000000000000e+07 * (T[i] ** 1.54) * np.exp(-2.727000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.600000000000000e+08 * (T[i] ** 1.22) * np.exp(-3.593000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.262470074016462e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.039749999999998e+06:
    for i in range(veclen):
            kf[i]l=2.600000000000000e+08 * (T[i] ** 1.22) * np.exp(-3.593000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.100000000000000e+09 * (T[i] ** 0.89) * np.exp(-4.623999999999999e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.492728583315866e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=4.100000000000000e+09 * (T[i] ** 0.89) * np.exp(-4.623999999999999e+03 / (Rc * T[i]))
            kf[i]h=7.100000000000000e+10 * (T[i] ** 0.56) * np.exp(-5.985000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.492728583315866e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.039750000000001e+07:
    for i in range(veclen):
            kf[i]l=7.100000000000000e+10 * (T[i] ** 0.56) * np.exp(-5.985000000000000e+03 / (Rc * T[i]))
            kf[i]h=3.900000000000000e+11 * (T[i] ** 0.38) * np.exp(-7.329000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.722987092615271e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=3.900000000000000e+11 * (T[i] ** 0.38) * np.exp(-7.329000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.600000000000000e+11 * (T[i] ** 0.48) * np.exp(-8.655000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.722987092615271e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=2.600000000000000e+11 * (T[i] ** 0.48) * np.exp(-8.655000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.600000000000000e+11 * (T[i] ** 0.48) * np.exp(-8.655000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][44] * EG[i][5])/(EG[i][31] * EG[i][48])))
        rr[i] = kf[i] * (C[i][44] * C[i][5]) - kb[i] * (C[i][31] * C[i][48])
    wdot[:,44] = wdot[:,44] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction NCN + O2 <=> NCO + NO
    kf = 1.300000000000000e+12 * np.exp(-2.316700000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,44] * EG[:,2])/(EG[:,43] * EG[:,48])))
    rr = kf * (C[:,44] * C[:,2]) - kb * (C[:,43] * C[:,48])
    wdot[:,44] = wdot[:,44] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction NCN + NO <=> CN + N2O
    kf = 1.900000000000000e+12 * np.exp(-6.280000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,44] * EG[:,48])/(EG[:,40] * EG[:,38])))
    rr = kf * (C[:,44] * C[:,48]) - kb * (C[:,40] * C[:,38])
    wdot[:,44] = wdot[:,44] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,40] = wdot[:,40] + rr[:]
    wdot[:,38] = wdot[:,38] + rr[:]

    # Reaction H2 + NCN <=> H + HNCN
    kf = 4.100000000000000e+13 * np.exp(-2.410000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,44])/(EG[:,1] * EG[:,45])))
    rr = kf * (C[:,0] * C[:,44]) - kb * (C[:,1] * C[:,45])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,44] = wdot[:,44] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,45] = wdot[:,45] + rr[:]

    # Reaction HNCN + O <=> HNC + NO
    kf = 1.200000000000000e+14 * (T ** -0.05) * np.exp(-7.200000000000000e+01 / (Rc * T))
    kb = kf * (((EG[:,45] * EG[:,3])/(EG[:,39] * EG[:,48])))
    rr = kf * (C[:,45] * C[:,3]) - kb * (C[:,39] * C[:,48])
    wdot[:,45] = wdot[:,45] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,39] = wdot[:,39] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction HNCN + O <=> NCO + NH
    kf = 5.600000000000000e+13 * (T ** -0.05) * np.exp(-7.200000000000000e+01 / (Rc * T))
    kb = kf * (((EG[:,45] * EG[:,3])/(EG[:,43] * EG[:,34])))
    rr = kf * (C[:,45] * C[:,3]) - kb * (C[:,43] * C[:,34])
    wdot[:,45] = wdot[:,45] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,43] = wdot[:,43] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction HNCN + O <=> CN + HNO
    kf = 9.400000000000000e+12 * (T ** -0.05) * np.exp(-7.200000000000000e+01 / (Rc * T))
    kb = kf * (((EG[:,45] * EG[:,3])/(EG[:,40] * EG[:,36])))
    rr = kf * (C[:,45] * C[:,3]) - kb * (C[:,40] * C[:,36])
    wdot[:,45] = wdot[:,45] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,40] = wdot[:,40] + rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]

    # Reaction HNCN + OH <=> H2O + NCN
    kf = 1.000000000000000e+05 * (T ** 2.48) * np.exp(1.887000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,45] * EG[:,5])/(EG[:,4] * EG[:,44])))
    rr = kf * (C[:,45] * C[:,5]) - kb * (C[:,4] * C[:,44])
    wdot[:,45] = wdot[:,45] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,44] = wdot[:,44] + rr[:]

    # Reaction HNCN + O2 <=> HO2 + NCN
    kf = 1.300000000000000e+08 * (T ** 1.28) * np.exp(-2.420000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,45] * EG[:,2])/(EG[:,7] * EG[:,44])))
    rr = kf * (C[:,45] * C[:,2]) - kb * (C[:,7] * C[:,44])
    wdot[:,45] = wdot[:,45] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]
    wdot[:,44] = wdot[:,44] + rr[:]

    # Reaction CH2NH + H <=> H2 + H2CN
    kf = 2.400000000000000e+08 * (T ** 1.5) * np.exp(-7.322000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,46] * EG[:,1])/(EG[:,0] * EG[:,47])))
    rr = kf * (C[:,46] * C[:,1]) - kb * (C[:,0] * C[:,47])
    wdot[:,46] = wdot[:,46] - rr[:]
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,47] = wdot[:,47] + rr[:]

    # Reaction CH2NH + O <=> H2CN + OH
    kf = 1.700000000000000e+08 * (T ** 1.5) * np.exp(-4.630000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,46] * EG[:,3])/(EG[:,47] * EG[:,5])))
    rr = kf * (C[:,46] * C[:,3]) - kb * (C[:,47] * C[:,5])
    wdot[:,46] = wdot[:,46] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,47] = wdot[:,47] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction CH2NH + O <=> CH2O + NH
    kf = 1.700000000000000e+06 * (T ** 2.08) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,46] * EG[:,3])/(EG[:,21] * EG[:,34])))
    rr = kf * (C[:,46] * C[:,3]) - kb * (C[:,21] * C[:,34])
    wdot[:,46] = wdot[:,46] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,34] = wdot[:,34] + rr[:]

    # Reaction CH2NH + OH <=> H2CN + H2O
    kf = 1.200000000000000e+06 * (T ** 2.0) * np.exp(8.900000000000000e+01 / (Rc * T))
    kb = kf * (((EG[:,46] * EG[:,5])/(EG[:,47] * EG[:,4])))
    rr = kf * (C[:,46] * C[:,5]) - kb * (C[:,47] * C[:,4])
    wdot[:,46] = wdot[:,46] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,47] = wdot[:,47] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction CH2NH + CH3 <=> CH4 + H2CN
    kf = 8.200000000000001e+05 * (T ** 1.87) * np.exp(-7.123000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,46] * EG[:,13])/(EG[:,12] * EG[:,47])))
    rr = kf * (C[:,46] * C[:,13]) - kb * (C[:,12] * C[:,47])
    wdot[:,46] = wdot[:,46] - rr[:]
    wdot[:,13] = wdot[:,13] - rr[:]
    wdot[:,12] = wdot[:,12] + rr[:]
    wdot[:,47] = wdot[:,47] + rr[:]

    # Reaction H2CN <=> H + HCN
    if P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=1.300000000000000e+29 * (T[i] ** -6.03) * np.exp(-2.989400000000000e+04 / (Rc * T[i]))
            kf[i]h=1.300000000000000e+29 * (T[i] ** -6.03) * np.exp(-2.989400000000000e+04 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=1.152608845149651e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=6.000000000000000e+31 * (T[i] ** -6.46) * np.exp(-3.211000000000000e+04 / (Rc * T[i]))
            kf[i]h=3.500000000000000e+29 * (T[i] ** -5.46) * np.exp(-3.254700000000000e+04 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    else:
    for i in range(veclen):
            kf[i]l=3.500000000000000e+29 * (T[i] ** -5.46) * np.exp(-3.254700000000000e+04 / (Rc * T[i]))
            kf[i]h=3.500000000000000e+29 * (T[i] ** -5.46) * np.exp(-3.254700000000000e+04 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][47])/(EG[i][1] * EG[i][31]* pfac)))
        rr[i] = kf[i] * (C[i][47]) - kb[i] * (C[i][1] * C[i][31])
    wdot[:,47] = wdot[:,47] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction H + H2CN <=> H2 + HCN
    kf = 2.400000000000000e+08 * (T ** 1.5) * np.exp(8.940000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,47])/(EG[:,0] * EG[:,31])))
    rr = kf * (C[:,1] * C[:,47]) - kb * (C[:,0] * C[:,31])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,47] = wdot[:,47] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction H2CN + O <=> HCN + OH
    kf = 1.700000000000000e+08 * (T ** 1.5) * np.exp(8.940000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,47] * EG[:,3])/(EG[:,31] * EG[:,5])))
    rr = kf * (C[:,47] * C[:,3]) - kb * (C[:,31] * C[:,5])
    wdot[:,47] = wdot[:,47] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H2CN + OH <=> H2O + HCN
    if P < 1.013250000000001e+05:
    for i in range(veclen):
            kf[i]l=2.100000000000000e+17 * (T[i] ** -1.68) * np.exp(-3.180000000000000e+02 / (Rc * T[i])) + 1.200000000000000e+06 * (T[i] ** 2.0) * np.exp(1.192000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.100000000000000e+17 * (T[i] ** -1.68) * np.exp(-3.180000000000000e+02 / (Rc * T[i])) + 1.200000000000000e+06 * (T[i] ** 2.0) * np.exp(1.192000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=1.152608845149651e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=1.500000000000000e+19 * (T[i] ** -2.18) * np.exp(-2.166000000000000e+03 / (Rc * T[i])) + 1.200000000000000e+06 * (T[i] ** 2.0) * np.exp(1.192000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.500000000000001e+21 * (T[i] ** -2.91) * np.exp(-5.633000000000000e+03 / (Rc * T[i])) + 1.200000000000000e+06 * (T[i] ** 2.0) * np.exp(1.192000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.613125863748460e+01
    else:
    for i in range(veclen):
            kf[i]l=9.500000000000001e+21 * (T[i] ** -2.91) * np.exp(-5.633000000000000e+03 / (Rc * T[i])) + 1.200000000000000e+06 * (T[i] ** 2.0) * np.exp(1.192000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.500000000000001e+21 * (T[i] ** -2.91) * np.exp(-5.633000000000000e+03 / (Rc * T[i])) + 1.200000000000000e+06 * (T[i] ** 2.0) * np.exp(1.192000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][47] * EG[i][5])/(EG[i][4] * EG[i][31])))
        rr[i] = kf[i] * (C[i][47] * C[i][5]) - kb[i] * (C[i][4] * C[i][31])
    wdot[:,47] = wdot[:,47] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,31] = wdot[:,31] + rr[:]

    # Reaction H2CN + O2 <=> CH2O + NO
    kf = 3.000000000000000e+12 * np.exp(-5.961000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,47] * EG[:,2])/(EG[:,21] * EG[:,48])))
    rr = kf * (C[:,47] * C[:,2]) - kb * (C[:,21] * C[:,48])
    wdot[:,47] = wdot[:,47] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,21] = wdot[:,21] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction H2CN + N <=> CH2 + N2
    kf = 2.000000000000000e+13 * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,47] * EG[:,35])/(EG[:,14] * EG[:,49])))
    rr = kf * (C[:,47] * C[:,35]) - kb * (C[:,14] * C[:,49])
    wdot[:,47] = wdot[:,47] - rr[:]
    wdot[:,35] = wdot[:,35] - rr[:]
    wdot[:,14] = wdot[:,14] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction H + NO2 <=> NO + OH
    kf = 1.010000000000000e+11 * (T ** 0.84) * np.exp(1.058000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,37])/(EG[:,48] * EG[:,5])))
    rr = kf * (C[:,1] * C[:,37]) - kb * (C[:,48] * C[:,5])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,37] = wdot[:,37] - rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction HNO + OH <=> H2O + NO
    if P < 1.013250000000000e+04:
    for i in range(veclen):
            kf[i]l=5.820000000000000e+10 * (T[i] ** 0.4) * np.exp(-3.762000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.820000000000000e+10 * (T[i] ** 0.4) * np.exp(-3.762000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.0
            logP[i]h=9.223503358502464e+00
    elif P < 3.201869999999998e+05:
    for i in range(veclen):
            kf[i]l=5.850000000000000e+10 * (T[i] ** 0.4) * np.exp(-3.763000000000000e+03 / (Rc * T[i]))
            kf[i]h=5.920000000000000e+10 * (T[i] ** 0.4) * np.exp(-3.764000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.152608845149651e+01
            logP[i]h=1.267666047909533e+01
    elif P < 1.013250000000000e+06:
    for i in range(veclen):
            kf[i]l=5.920000000000000e+10 * (T[i] ** 0.4) * np.exp(-3.764000000000000e+03 / (Rc * T[i]))
            kf[i]h=6.300000000000000e+10 * (T[i] ** 0.39) * np.exp(-3.782000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.267666047909533e+01
            logP[i]h=1.382867354449055e+01
    elif P < 3.201870000000002e+06:
    for i in range(veclen):
            kf[i]l=6.300000000000000e+10 * (T[i] ** 0.39) * np.exp(-3.782000000000000e+03 / (Rc * T[i]))
            kf[i]h=9.530000000000000e+10 * (T[i] ** 0.34) * np.exp(-3.931000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.382867354449055e+01
            logP[i]h=1.497924557208938e+01
    elif P < 1.013249999999999e+07:
    for i in range(veclen):
            kf[i]l=9.530000000000000e+10 * (T[i] ** 0.34) * np.exp(-3.931000000000000e+03 / (Rc * T[i]))
            kf[i]h=2.600000000000000e+11 * (T[i] ** 0.23) * np.exp(-4.413000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.497924557208938e+01
            logP[i]h=1.613125863748460e+01
    elif P < 3.201870000000000e+07:
    for i in range(veclen):
            kf[i]l=2.600000000000000e+11 * (T[i] ** 0.23) * np.exp(-4.413000000000000e+03 / (Rc * T[i]))
            kf[i]h=3.830000000000000e+11 * (T[i] ** 0.2) * np.exp(-5.099000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.613125863748460e+01
            logP[i]h=1.728183066508342e+01
    elif P < 1.013249999999999e+08:
    for i in range(veclen):
            kf[i]l=3.830000000000000e+11 * (T[i] ** 0.2) * np.exp(-5.099000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.180000000000000e+10 * (T[i] ** 0.51) * np.exp(-5.532000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.728183066508342e+01
            logP[i]h=1.843384373047865e+01
    else:
    for i in range(veclen):
            kf[i]l=4.180000000000000e+10 * (T[i] ** 0.51) * np.exp(-5.532000000000000e+03 / (Rc * T[i]))
            kf[i]h=4.180000000000000e+10 * (T[i] ** 0.51) * np.exp(-5.532000000000000e+03 / (Rc * T[i]))
            logP[i]l=1.843384373047865e+01
            logP[i]h=100.0
        kf[i] = np.exp(np.log(kf[i]l) + (np.log(kf[i]h)-np.log(kf[i]l))*(np.log(P[i])-logP[i]l)/(logP[i]h-logP[i]l))
        kb[i] = kf[i] * (((EG[i][36] * EG[i][5])/(EG[i][4] * EG[i][48])))
        rr[i] = kf[i] * (C[i][36] * C[i][5]) - kb[i] * (C[i][4] * C[i][48])
    wdot[:,36] = wdot[:,36] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    # Reaction H2 + N2O <=> H2O + N2
    kf = 7.000000000000000e+12 * np.exp(-3.250000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,38])/(EG[:,4] * EG[:,49])))
    rr = kf * (C[:,0] * C[:,38]) - kb * (C[:,4] * C[:,49])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,38] = wdot[:,38] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction NH3 + OH <=> H2O + NH2
    kf = 4.299000000000000e+03 * (T ** 2.83021) * np.exp(4.308000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,32] * EG[:,5])/(EG[:,4] * EG[:,33])))
    rr = kf * (C[:,32] * C[:,5]) - kb * (C[:,4] * C[:,33])
    wdot[:,32] = wdot[:,32] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,33] = wdot[:,33] + rr[:]

    # Reaction H + NH2 (+M) <=> NH3 (+M)
    M = ctot
    k0 = 3.600000000000000e+22 * (T ** -1.76) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kinf = 1.600000000000000e+14 * np.exp(-0.000000000000000e+00 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.5) * np.exp(-T/1e-30) + 0.5 * np.exp(-T/1.0000000000000002e+30) + np.exp(-1e+30/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,1] * EG[:,33])/(EG[:,32]* pfac**-1.0)))
    rr = kf * (C[:,1] * C[:,33]) - kb * (C[:,32])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,32] = wdot[:,32] + rr[:]

    # Reaction H + NO (+M) <=> HNO (+M)
    M = ctot + 2.000000000000000e+00*C[:,9] + 1.000000000000000e+00*C[:,0] + 9.000000000000000e+00*C[:,4] + 6.000000000000001e-01*C[:,49] + 5.000000000000000e-01*C[:,2]
    k0 = 2.400000000000000e+14 * (T ** 0.206) * np.exp(--1.550000000000000e+03 / (Rc * T))
    kinf = 1.520000000000000e+15 * (T ** -0.41) * np.exp(-0.000000000000000e+00 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-0.82) * np.exp(-T/1e-30) + 0.82 * np.exp(-T/1.0000000000000002e+30) + np.exp(-1e+30/T)
    C1 = -0.4 - 0.67 * np.log10(Fcent)
    N = 0.75 - 1.27 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,1] * EG[:,48])/(EG[:,36]* pfac**-1.0)))
    rr = kf * (C[:,1] * C[:,48]) - kb * (C[:,36])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,36] = wdot[:,36] + rr[:]

    # Reaction NH2 + NO <=> H2O + N2
    kf = 2.600000000000000e+19 * (T ** -2.369) * np.exp(-8.700000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,33] * EG[:,48])/(EG[:,4] * EG[:,49])))
    rr = kf * (C[:,33] * C[:,48]) - kb * (C[:,4] * C[:,49])
    wdot[:,33] = wdot[:,33] - rr[:]
    wdot[:,48] = wdot[:,48] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,49] = wdot[:,49] + rr[:]

    # Reaction HNO + O2 <=> HO2 + NO
    kf = 3.989560000000000e+05 * (T ** 2.3026) * np.exp(-1.460540000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,36] * EG[:,2])/(EG[:,7] * EG[:,48])))
    rr = kf * (C[:,36] * C[:,2]) - kb * (C[:,7] * C[:,48])
    wdot[:,36] = wdot[:,36] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]
    wdot[:,48] = wdot[:,48] + rr[:]

    return kf, kb, rr
