import numpy as np

def getrates(veclen, T, Y, P, wdot):
    C = np.zeros((veclen, 9))
    EG = np.zeros((veclen, 9))
    kf = np.zeros(veclen)
    kb = np.zeros(veclen)
    rr = np.zeros(veclen)
    ctot = np.zeros(veclen)
    M = np.zeros(veclen)
    k0 = np.zeros(veclen)
    kinf = np.zeros(veclen)
    Pr = np.zeros(veclen)
    Fcent = np.zeros(veclen)
    C1 = np.zeros(veclen)
    N = np.zeros(veclen)
    F1 = np.zeros(veclen)
    F = np.zeros(veclen)
    logPr = np.zeros(veclen)
    logFcent = np.zeros(veclen)
    smh = np.zeros(veclen)
    wdot[:,:] = 0.0
    Rc = 1.9872155832
    R0 = 83145100.0
    Patm = 1013250.0
    kfl = 0.0
    kfh = 0.0
    kbl = 0.0
    logPl = 0.0
    logPh = 0.0

    pfac = Patm/(R0*T)
    # Y to C conversion
    C[:,0] = Y[:,0] / 1.008000000000000e+00
    C[:,1] = Y[:,1] / 2.016000000000000e+00
    C[:,2] = Y[:,2] / 1.599900000000000e+01
    C[:,3] = Y[:,3] / 1.700700000000000e+01
    C[:,4] = Y[:,4] / 1.801500000000000e+01
    C[:,5] = Y[:,5] / 3.199800000000000e+01
    C[:,6] = Y[:,6] / 3.300600000000000e+01
    C[:,7] = Y[:,7] / 3.401400000000000e+01
    C[:,8] = Y[:,8] / 2.801400000000000e+01
    ctot = 0.0
    for i in range(9):
        ctot = ctot + C[:,i]
    for i in range(9):
        C[:,i] = C[:,i]*P/(R0*ctot*T)
    ctot = 0.0
    for i in range(9):
        ctot = ctot + C[:,i]

    # Exponential G calculations
    # H
    for i in range(veclen):
        if T[i] < 5000.0:
            smh = \
            -2.960117600000000e+00\
            + 2.500000000000000e+00 * np.log(T[i])\
            + 0.000000000000000e+00 * T[i]\
            + 0.000000000000000e+00 * T[i]**2\
            + 0.000000000000000e+00 * T[i]**3\
            + 0.000000000000000e+00 * T[i]**4\
            - 2.547163000000000e+04 / T[i]
        else:
            smh = \
            -2.960117600000000e+00\
            + 2.500000000000000e+00 * np.log(T[i])\
            + 0.000000000000000e+00 * T[i]\
            + 0.000000000000000e+00 * T[i]**2\
            + 0.000000000000000e+00 * T[i]**3\
            + 0.000000000000000e+00 * T[i]**4\
            - 2.547163000000000e+04 / T[i]
        EG[i,0] = np.exp(smh)

    # H2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -6.592218000000000e+00\
            + 3.298124000000000e+00 * np.log(T[i])\
            + 4.124721000000000e-04 * T[i]\
            - 1.357169166666667e-07 * T[i]**2\
            - 7.896194999999999e-12 * T[i]**3\
            + 2.067436000000000e-14 * T[i]**4\
            + 1.012521000000000e+03 / T[i]
        else:
            smh = \
            -4.346533000000000e+00\
            + 2.991423000000000e+00 * np.log(T[i])\
            + 3.500322000000000e-04 * T[i]\
            - 9.389715000000000e-09 * T[i]**2\
            - 7.692981666666667e-13 * T[i]**3\
            + 7.913760000000000e-17 * T[i]**4\
            + 8.350340000000000e+02 / T[i]
        EG[i,1] = np.exp(smh)

    # O
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            1.756599999999997e-02\
            + 2.946429000000000e+00 * np.log(T[i])\
            - 8.190830000000000e-04 * T[i]\
            + 4.035053333333333e-07 * T[i]**2\
            - 1.335702500000000e-10 * T[i]**3\
            + 1.945348000000000e-14 * T[i]**4\
            - 2.914764000000000e+04 / T[i]
        else:
            smh = \
            2.378248000000000e+00\
            + 2.542060000000000e+00 * np.log(T[i])\
            - 1.377531000000000e-05 * T[i]\
            - 5.171338333333333e-10 * T[i]**2\
            + 3.792555833333334e-13 * T[i]**3\
            - 2.184026000000000e-17 * T[i]**4\
            - 2.923080000000000e+04 / T[i]
        EG[i,2] = np.exp(smh)

    # OH
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -4.815738570000000e+00\
            + 4.125305610000000e+00 * np.log(T[i])\
            - 1.612724695000000e-03 * T[i]\
            + 1.087941151666667e-06 * T[i]**2\
            - 4.832113691666666e-10 * T[i]**3\
            + 1.031186895000000e-13 * T[i]**4\
            - 3.346309130000000e+03 / T[i]
        else:
            smh = \
            2.836911870000000e+00\
            + 2.864728860000000e+00 * np.log(T[i])\
            + 5.282522400000000e-04 * T[i]\
            - 4.318045966666667e-08 * T[i]**2\
            + 2.543488950000000e-12 * T[i]**3\
            - 6.659793800000000e-17 * T[i]**4\
            - 3.683628750000000e+03 / T[i]
        EG[i,3] = np.exp(smh)

    # H2O
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -7.966090000000001e-01\
            + 3.386842000000000e+00 * np.log(T[i])\
            + 1.737491000000000e-03 * T[i]\
            - 1.059116000000000e-06 * T[i]**2\
            + 5.807150833333333e-10 * T[i]**3\
            - 1.253294000000000e-13 * T[i]**4\
            + 3.020811000000000e+04 / T[i]
        else:
            smh = \
            4.190671000000000e+00\
            + 2.672146000000000e+00 * np.log(T[i])\
            + 1.528146500000000e-03 * T[i]\
            - 1.455043333333333e-07 * T[i]**2\
            + 1.000830000000000e-11 * T[i]**3\
            - 3.195809000000000e-16 * T[i]**4\
            + 2.989921000000000e+04 / T[i]
        EG[i,4] = np.exp(smh)

    # O2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            2.821802000000000e+00\
            + 3.212936000000000e+00 * np.log(T[i])\
            + 5.637430000000000e-04 * T[i]\
            - 9.593583333333333e-08 * T[i]**2\
            + 1.094897500000000e-10 * T[i]**3\
            - 4.384277000000000e-14 * T[i]**4\
            + 1.005249000000000e+03 / T[i]
        else:
            smh = \
            -5.084119999999999e-01\
            + 3.697578000000000e+00 * np.log(T[i])\
            + 3.067598500000000e-04 * T[i]\
            - 2.098070000000000e-08 * T[i]**2\
            + 1.479400833333333e-12 * T[i]**3\
            - 5.682175000000001e-17 * T[i]**4\
            + 1.233930000000000e+03 / T[i]
        EG[i,5] = np.exp(smh)

    # HO2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            -5.851355599999999e-01\
            + 4.301798010000000e+00 * np.log(T[i])\
            - 2.374560255000000e-03 * T[i]\
            + 3.526381516666666e-06 * T[i]**2\
            - 2.023032450000000e-09 * T[i]**3\
            + 4.646125620000001e-13 * T[i]**4\
            - 2.948080400000000e+02 / T[i]
        else:
            smh = \
            -2.321087500000001e-01\
            + 4.017210900000000e+00 * np.log(T[i])\
            + 1.119910065000000e-03 * T[i]\
            - 1.056096916666667e-07 * T[i]**2\
            + 9.520530833333334e-12 * T[i]**3\
            - 5.395426750000000e-16 * T[i]**4\
            - 1.118567130000000e+02 / T[i]
        EG[i,6] = np.exp(smh)

    # H2O2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            3.396609000000000e+00\
            + 3.388754000000000e+00 * np.log(T[i])\
            + 3.284613000000000e-03 * T[i]\
            - 2.475021666666666e-08 * T[i]**2\
            - 3.854838333333333e-10 * T[i]**3\
            + 1.235757500000000e-13 * T[i]**4\
            + 1.766315000000000e+04 / T[i]
        else:
            smh = \
            -4.072030000000000e+00\
            + 4.573167000000000e+00 * np.log(T[i])\
            + 2.168068000000000e-03 * T[i]\
            - 2.457815000000000e-07 * T[i]**2\
            + 1.957420000000000e-11 * T[i]**3\
            - 7.158270000000000e-16 * T[i]**4\
            + 1.800696000000000e+04 / T[i]
        EG[i,7] = np.exp(smh)

    # N2
    for i in range(veclen):
        if T[i] < 1000.0:
            smh = \
            6.516950000000001e-01\
            + 3.298677000000000e+00 * np.log(T[i])\
            + 7.041200000000000e-04 * T[i]\
            - 6.605369999999999e-07 * T[i]**2\
            + 4.701262500000001e-10 * T[i]**3\
            - 1.222427500000000e-13 * T[i]**4\
            + 1.020900000000000e+03 / T[i]
        else:
            smh = \
            3.053888000000000e+00\
            + 2.926640000000000e+00 * np.log(T[i])\
            + 7.439885000000000e-04 * T[i]\
            - 9.474601666666666e-08 * T[i]**2\
            + 8.414199999999999e-12 * T[i]**3\
            - 3.376675500000000e-16 * T[i]**4\
            + 9.227977000000000e+02 / T[i]
        EG[i,8] = np.exp(smh)

    # Reaction H + O2 <=> O + OH
    kf = 1.040000000000000e+14 * np.exp(-1.528600000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,5])/(EG[:,2] * EG[:,3])))
    rr = kf * (C[:,0] * C[:,5]) - kb * (C[:,2] * C[:,3])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction H2 + O <=> H + OH
    kf = 3.818000000000000e+12 * np.exp(-7.948000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,2])/(EG[:,0] * EG[:,3])))
    rr = kf * (C[:,1] * C[:,2]) - kb * (C[:,0] * C[:,3])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction H2 + O <=> H + OH
    kf = 8.792000000000000e+14 * np.exp(-1.917000000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,2])/(EG[:,0] * EG[:,3])))
    rr = kf * (C[:,1] * C[:,2]) - kb * (C[:,0] * C[:,3])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction H2 + OH <=> H + H2O
    kf = 2.160000000000000e+08 * (T ** (1.51)) * np.exp(-3.430000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,1] * EG[:,3])/(EG[:,0] * EG[:,4])))
    rr = kf * (C[:,1] * C[:,3]) - kb * (C[:,0] * C[:,4])
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction 2 OH <=> H2O + O
    kf = 3.340000000000000e+04 * (T ** (2.42)) * np.exp(1.930000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,3]**(2.0))/(EG[:,4] * EG[:,2])))
    rr = kf * (C[:,3]**2.0) - kb * (C[:,4] * C[:,2])
    wdot[:,3] = wdot[:,3] - 2.00e+00 * rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,2] = wdot[:,2] + rr[:]

    # Reaction H2 + M <=> 2 H + M
    kf = 4.577000000000000e+19 * (T ** (-1.4)) * np.exp(-1.043800000000000e+05 / (Rc * T))
    kb = kf * (((EG[:,1])/(EG[:,0]**2.0* pfac)))
    rr = (ctot ++1.500000000000000e+00*C[:,1]\
     +1.100000000000000e+01*C[:,4]\
    )*(kf * (C[:,1]) - kb * (C[:,0]**2.0))
    wdot[:,1] = wdot[:,1] - rr[:]
    wdot[:,0] = wdot[:,0] + 2.00e+00 * rr[:]

    # Reaction 2 O + M <=> O2 + M
    kf = 6.165000000000000e+15 * (T ** (-0.5)) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,2]**(2.0))/(EG[:,5]* pfac**(-1.0))))
    rr = (ctot ++1.500000000000000e+00*C[:,1]\
     +1.100000000000000e+01*C[:,4]\
    )*(kf * (C[:,2]**2.0) - kb * (C[:,5]))
    wdot[:,2] = wdot[:,2] - 2.00e+00 * rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H + O + M <=> OH + M
    kf = 4.714000000000000e+18 * (T ** (-1.0)) * np.exp(-0.000000000000000e+00 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,2])/(EG[:,3]* pfac**(-1.0))))
    rr = (ctot ++1.500000000000000e+00*C[:,1]\
     +1.100000000000000e+01*C[:,4]\
    )*(kf * (C[:,0] * C[:,2]) - kb * (C[:,3]))
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction H2O + M <=> H + OH + M
    kf = 6.064000000000000e+27 * (T ** (-3.322)) * np.exp(-1.207900000000000e+05 / (Rc * T))
    kb = kf * (((EG[:,4])/(EG[:,0] * EG[:,3]* pfac)))
    rr = (ctot ++2.000000000000000e+00*C[:,1]\
     -1.000000000000000e+00*C[:,4]\
     +1.000000000000000e+00*C[:,8]\
     +5.000000000000000e-01*C[:,5]\
    )*(kf * (C[:,4]) - kb * (C[:,0] * C[:,3]))
    wdot[:,4] = wdot[:,4] - rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction H2O + H2O <=> H + OH + H2O
    kf = 1.006000000000000e+26 * (T ** (-2.44)) * np.exp(-1.201800000000000e+05 / (Rc * T))
    kb = kf * (((EG[:,4]**(2.0))/(EG[:,0] * EG[:,3] * EG[:,4]* pfac)))
    rr = kf * (C[:,4]**2.0) - kb * (C[:,0] * C[:,3] * C[:,4])
    wdot[:,4] = wdot[:,4] - 2.00e+00 * rr[:]
    wdot[:,0] = wdot[:,0] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]

    # Reaction H + O2 (+M) <=> HO2 (+M)
    M = ctot+1.000000000000000e+00*C[:,1] +1.300000000000000e+01*C[:,4] -2.200000000000000e-01*C[:,5]
    k0 = 6.366000000000000e+20 * (T ** (-1.72)) * np.exp(-5.248000000000000e+02 / (Rc * T))
    kinf = 4.650840000000000e+12 * (T ** (0.44)) * np.exp(-0.000000000000000e+00 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-5.000000000000000e-01) * np.exp(-T/(1.000000000000000e-30)) + (5.000000000000000e-01) * np.exp(-T/(1.000000000000000e+30))
    C1 = -0.4e0 - 0.67e0 * np.log10(Fcent)
    N = 0.75e0 - 1.27e0 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14e0 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,0] * EG[:,5])/(EG[:,6]* pfac**(-1.0))))
    rr = kf * (C[:,0] * C[:,5]) - kb * (C[:,6])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,5] = wdot[:,5] - rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    # Reaction H + HO2 <=> H2 + O2
    kf = 2.750000000000000e+06 * (T ** (2.09)) * np.exp(1.451000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,6])/(EG[:,1] * EG[:,5])))
    rr = kf * (C[:,0] * C[:,6]) - kb * (C[:,1] * C[:,5])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H + HO2 <=> 2 OH
    kf = 7.079000000000000e+13 * np.exp(-2.950000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,6])/(EG[:,3]**2.0)))
    rr = kf * (C[:,0] * C[:,6]) - kb * (C[:,3]**2.0)
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,3] = wdot[:,3] + 2.00e+00 * rr[:]

    # Reaction HO2 + O <=> O2 + OH
    kf = 2.850000000000000e+10 * (T ** (1.0)) * np.exp(7.239299999999998e+02 / (Rc * T))
    kb = kf * (((EG[:,6] * EG[:,2])/(EG[:,5] * EG[:,3])))
    rr = kf * (C[:,6] * C[:,2]) - kb * (C[:,5] * C[:,3])
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction HO2 + OH <=> H2O + O2
    kf = 2.890000000000000e+13 * np.exp(4.970000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,6] * EG[:,3])/(EG[:,4] * EG[:,5])))
    rr = kf * (C[:,6] * C[:,3]) - kb * (C[:,4] * C[:,5])
    wdot[:,6] = wdot[:,6] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction 2 HO2 <=> H2O2 + O2
    kf = 4.200000000000000e+14 * np.exp(-1.198200000000000e+04 / (Rc * T))
    kb = kf * (((EG[:,6]**(2.0))/(EG[:,7] * EG[:,5])))
    rr = kf * (C[:,6]**2.0) - kb * (C[:,7] * C[:,5])
    wdot[:,6] = wdot[:,6] - 2.00e+00 * rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction 2 HO2 <=> H2O2 + O2
    kf = 1.300000000000000e+11 * np.exp(1.629300000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,6]**(2.0))/(EG[:,7] * EG[:,5])))
    rr = kf * (C[:,6]**2.0) - kb * (C[:,7] * C[:,5])
    wdot[:,6] = wdot[:,6] - 2.00e+00 * rr[:]
    wdot[:,7] = wdot[:,7] + rr[:]
    wdot[:,5] = wdot[:,5] + rr[:]

    # Reaction H2O2 (+M) <=> 2 OH (+M)
    M = ctot+2.700000000000000e+00*C[:,1] +6.500000000000000e+00*C[:,4] +6.700000000000000e+00*C[:,7] +5.000000000000000e-01*C[:,8] +2.000000000000000e-01*C[:,5]
    k0 = 2.490000000000000e+24 * (T ** (-2.3)) * np.exp(-4.874900000000000e+04 / (Rc * T))
    kinf = 2.000000000000000e+12 * (T ** (0.9)) * np.exp(-4.874900000000000e+04 / (Rc * T))
    Pr = (k0 * M) / kinf
    Fcent = (1-4.300000000000000e-01) * np.exp(-T/(1.000000000000000e-30)) + (4.300000000000000e-01) * np.exp(-T/(1.000000000000000e+30))
    C1 = -0.4e0 - 0.67e0 * np.log10(Fcent)
    N = 0.75e0 - 1.27e0 * np.log10(Fcent)
    F1 = (np.log10(Pr) + C1) / (N - 0.14e0 * (np.log10(Pr) + C1))
    F = 10 ** (np.log10(Fcent) / (1 + F1**2))
    kf = kinf * (Pr / (1 + Pr)) * F
    kb = kf * (((EG[:,7])/(EG[:,3]**2.0* pfac)))
    rr = kf * (C[:,7]) - kb * (C[:,3]**2.0)
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,3] = wdot[:,3] + 2.00e+00 * rr[:]

    # Reaction H + H2O2 <=> H2O + OH
    kf = 2.410000000000000e+13 * np.exp(-3.970000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,7])/(EG[:,4] * EG[:,3])))
    rr = kf * (C[:,0] * C[:,7]) - kb * (C[:,4] * C[:,3])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction H + H2O2 <=> H2 + HO2
    kf = 4.820000000000000e+13 * np.exp(-7.950000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,0] * EG[:,7])/(EG[:,1] * EG[:,6])))
    rr = kf * (C[:,0] * C[:,7]) - kb * (C[:,1] * C[:,6])
    wdot[:,0] = wdot[:,0] - rr[:]
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,1] = wdot[:,1] + rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    # Reaction H2O2 + O <=> HO2 + OH
    kf = 9.549999999999998e+06 * (T ** (2.0)) * np.exp(-3.970000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,7] * EG[:,2])/(EG[:,6] * EG[:,3])))
    rr = kf * (C[:,7] * C[:,2]) - kb * (C[:,6] * C[:,3])
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,2] = wdot[:,2] - rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]
    wdot[:,3] = wdot[:,3] + rr[:]

    # Reaction H2O2 + OH <=> H2O + HO2
    kf = 1.740000000000000e+12 * np.exp(-3.180000000000000e+02 / (Rc * T))
    kb = kf * (((EG[:,7] * EG[:,3])/(EG[:,4] * EG[:,6])))
    rr = kf * (C[:,7] * C[:,3]) - kb * (C[:,4] * C[:,6])
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    # Reaction H2O2 + OH <=> H2O + HO2
    kf = 7.590000000000000e+13 * np.exp(-7.270000000000000e+03 / (Rc * T))
    kb = kf * (((EG[:,7] * EG[:,3])/(EG[:,4] * EG[:,6])))
    rr = kf * (C[:,7] * C[:,3]) - kb * (C[:,4] * C[:,6])
    wdot[:,7] = wdot[:,7] - rr[:]
    wdot[:,3] = wdot[:,3] - rr[:]
    wdot[:,4] = wdot[:,4] + rr[:]
    wdot[:,6] = wdot[:,6] + rr[:]

    return kf, kb, rr
